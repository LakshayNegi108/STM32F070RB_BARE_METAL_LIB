
ArithmaticOperations.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007624  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000674  080076e8  080076e8  000176e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007d5c  08007d5c  0002021c  2**0
                  CONTENTS
  4 .ARM          00000008  08007d5c  08007d5c  00017d5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007d64  08007d64  0002021c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007d64  08007d64  00017d64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007d68  08007d68  00017d68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000021c  20000000  08007d6c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001b0  20000220  08007f88  00020220  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  200003d0  08007f88  000203d0  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002021c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00004468  00000000  00000000  00020244  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000118e  00000000  00000000  000246ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000005c8  00000000  00000000  00025840  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000530  00000000  00000000  00025e08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00010fe8  00000000  00000000  00026338  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000623d  00000000  00000000  00037320  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00062bc1  00000000  00000000  0003d55d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000a011e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002638  00000000  00000000  000a0170  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000220 	.word	0x20000220
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080076cc 	.word	0x080076cc

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000224 	.word	0x20000224
 8000104:	080076cc 	.word	0x080076cc

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 f98d 	bl	800175c <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f001 f8dd 	bl	800160c <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f97f 	bl	800175c <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 f975 	bl	800175c <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 f905 	bl	8001690 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 f8fb 	bl	8001690 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_uldivmod>:
 80004a8:	2b00      	cmp	r3, #0
 80004aa:	d111      	bne.n	80004d0 <__aeabi_uldivmod+0x28>
 80004ac:	2a00      	cmp	r2, #0
 80004ae:	d10f      	bne.n	80004d0 <__aeabi_uldivmod+0x28>
 80004b0:	2900      	cmp	r1, #0
 80004b2:	d100      	bne.n	80004b6 <__aeabi_uldivmod+0xe>
 80004b4:	2800      	cmp	r0, #0
 80004b6:	d002      	beq.n	80004be <__aeabi_uldivmod+0x16>
 80004b8:	2100      	movs	r1, #0
 80004ba:	43c9      	mvns	r1, r1
 80004bc:	0008      	movs	r0, r1
 80004be:	b407      	push	{r0, r1, r2}
 80004c0:	4802      	ldr	r0, [pc, #8]	; (80004cc <__aeabi_uldivmod+0x24>)
 80004c2:	a102      	add	r1, pc, #8	; (adr r1, 80004cc <__aeabi_uldivmod+0x24>)
 80004c4:	1840      	adds	r0, r0, r1
 80004c6:	9002      	str	r0, [sp, #8]
 80004c8:	bd03      	pop	{r0, r1, pc}
 80004ca:	46c0      	nop			; (mov r8, r8)
 80004cc:	ffffff5d 	.word	0xffffff5d
 80004d0:	b403      	push	{r0, r1}
 80004d2:	4668      	mov	r0, sp
 80004d4:	b501      	push	{r0, lr}
 80004d6:	9802      	ldr	r0, [sp, #8]
 80004d8:	f000 f834 	bl	8000544 <__udivmoddi4>
 80004dc:	9b01      	ldr	r3, [sp, #4]
 80004de:	469e      	mov	lr, r3
 80004e0:	b002      	add	sp, #8
 80004e2:	bc0c      	pop	{r2, r3}
 80004e4:	4770      	bx	lr
 80004e6:	46c0      	nop			; (mov r8, r8)

080004e8 <__aeabi_lmul>:
 80004e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004ea:	46ce      	mov	lr, r9
 80004ec:	4647      	mov	r7, r8
 80004ee:	b580      	push	{r7, lr}
 80004f0:	0007      	movs	r7, r0
 80004f2:	4699      	mov	r9, r3
 80004f4:	0c3b      	lsrs	r3, r7, #16
 80004f6:	469c      	mov	ip, r3
 80004f8:	0413      	lsls	r3, r2, #16
 80004fa:	0c1b      	lsrs	r3, r3, #16
 80004fc:	001d      	movs	r5, r3
 80004fe:	000e      	movs	r6, r1
 8000500:	4661      	mov	r1, ip
 8000502:	0400      	lsls	r0, r0, #16
 8000504:	0c14      	lsrs	r4, r2, #16
 8000506:	0c00      	lsrs	r0, r0, #16
 8000508:	4345      	muls	r5, r0
 800050a:	434b      	muls	r3, r1
 800050c:	4360      	muls	r0, r4
 800050e:	4361      	muls	r1, r4
 8000510:	18c0      	adds	r0, r0, r3
 8000512:	0c2c      	lsrs	r4, r5, #16
 8000514:	1820      	adds	r0, r4, r0
 8000516:	468c      	mov	ip, r1
 8000518:	4283      	cmp	r3, r0
 800051a:	d903      	bls.n	8000524 <__aeabi_lmul+0x3c>
 800051c:	2380      	movs	r3, #128	; 0x80
 800051e:	025b      	lsls	r3, r3, #9
 8000520:	4698      	mov	r8, r3
 8000522:	44c4      	add	ip, r8
 8000524:	4649      	mov	r1, r9
 8000526:	4379      	muls	r1, r7
 8000528:	4372      	muls	r2, r6
 800052a:	0c03      	lsrs	r3, r0, #16
 800052c:	4463      	add	r3, ip
 800052e:	042d      	lsls	r5, r5, #16
 8000530:	0c2d      	lsrs	r5, r5, #16
 8000532:	18c9      	adds	r1, r1, r3
 8000534:	0400      	lsls	r0, r0, #16
 8000536:	1940      	adds	r0, r0, r5
 8000538:	1889      	adds	r1, r1, r2
 800053a:	bcc0      	pop	{r6, r7}
 800053c:	46b9      	mov	r9, r7
 800053e:	46b0      	mov	r8, r6
 8000540:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000542:	46c0      	nop			; (mov r8, r8)

08000544 <__udivmoddi4>:
 8000544:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000546:	4657      	mov	r7, sl
 8000548:	464e      	mov	r6, r9
 800054a:	4645      	mov	r5, r8
 800054c:	46de      	mov	lr, fp
 800054e:	b5e0      	push	{r5, r6, r7, lr}
 8000550:	0004      	movs	r4, r0
 8000552:	000d      	movs	r5, r1
 8000554:	4692      	mov	sl, r2
 8000556:	4699      	mov	r9, r3
 8000558:	b083      	sub	sp, #12
 800055a:	428b      	cmp	r3, r1
 800055c:	d830      	bhi.n	80005c0 <__udivmoddi4+0x7c>
 800055e:	d02d      	beq.n	80005bc <__udivmoddi4+0x78>
 8000560:	4649      	mov	r1, r9
 8000562:	4650      	mov	r0, sl
 8000564:	f002 f86c 	bl	8002640 <__clzdi2>
 8000568:	0029      	movs	r1, r5
 800056a:	0006      	movs	r6, r0
 800056c:	0020      	movs	r0, r4
 800056e:	f002 f867 	bl	8002640 <__clzdi2>
 8000572:	1a33      	subs	r3, r6, r0
 8000574:	4698      	mov	r8, r3
 8000576:	3b20      	subs	r3, #32
 8000578:	469b      	mov	fp, r3
 800057a:	d433      	bmi.n	80005e4 <__udivmoddi4+0xa0>
 800057c:	465a      	mov	r2, fp
 800057e:	4653      	mov	r3, sl
 8000580:	4093      	lsls	r3, r2
 8000582:	4642      	mov	r2, r8
 8000584:	001f      	movs	r7, r3
 8000586:	4653      	mov	r3, sl
 8000588:	4093      	lsls	r3, r2
 800058a:	001e      	movs	r6, r3
 800058c:	42af      	cmp	r7, r5
 800058e:	d83a      	bhi.n	8000606 <__udivmoddi4+0xc2>
 8000590:	42af      	cmp	r7, r5
 8000592:	d100      	bne.n	8000596 <__udivmoddi4+0x52>
 8000594:	e078      	b.n	8000688 <__udivmoddi4+0x144>
 8000596:	465b      	mov	r3, fp
 8000598:	1ba4      	subs	r4, r4, r6
 800059a:	41bd      	sbcs	r5, r7
 800059c:	2b00      	cmp	r3, #0
 800059e:	da00      	bge.n	80005a2 <__udivmoddi4+0x5e>
 80005a0:	e075      	b.n	800068e <__udivmoddi4+0x14a>
 80005a2:	2200      	movs	r2, #0
 80005a4:	2300      	movs	r3, #0
 80005a6:	9200      	str	r2, [sp, #0]
 80005a8:	9301      	str	r3, [sp, #4]
 80005aa:	2301      	movs	r3, #1
 80005ac:	465a      	mov	r2, fp
 80005ae:	4093      	lsls	r3, r2
 80005b0:	9301      	str	r3, [sp, #4]
 80005b2:	2301      	movs	r3, #1
 80005b4:	4642      	mov	r2, r8
 80005b6:	4093      	lsls	r3, r2
 80005b8:	9300      	str	r3, [sp, #0]
 80005ba:	e028      	b.n	800060e <__udivmoddi4+0xca>
 80005bc:	4282      	cmp	r2, r0
 80005be:	d9cf      	bls.n	8000560 <__udivmoddi4+0x1c>
 80005c0:	2200      	movs	r2, #0
 80005c2:	2300      	movs	r3, #0
 80005c4:	9200      	str	r2, [sp, #0]
 80005c6:	9301      	str	r3, [sp, #4]
 80005c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	d001      	beq.n	80005d2 <__udivmoddi4+0x8e>
 80005ce:	601c      	str	r4, [r3, #0]
 80005d0:	605d      	str	r5, [r3, #4]
 80005d2:	9800      	ldr	r0, [sp, #0]
 80005d4:	9901      	ldr	r1, [sp, #4]
 80005d6:	b003      	add	sp, #12
 80005d8:	bcf0      	pop	{r4, r5, r6, r7}
 80005da:	46bb      	mov	fp, r7
 80005dc:	46b2      	mov	sl, r6
 80005de:	46a9      	mov	r9, r5
 80005e0:	46a0      	mov	r8, r4
 80005e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005e4:	4642      	mov	r2, r8
 80005e6:	2320      	movs	r3, #32
 80005e8:	1a9b      	subs	r3, r3, r2
 80005ea:	4652      	mov	r2, sl
 80005ec:	40da      	lsrs	r2, r3
 80005ee:	4641      	mov	r1, r8
 80005f0:	0013      	movs	r3, r2
 80005f2:	464a      	mov	r2, r9
 80005f4:	408a      	lsls	r2, r1
 80005f6:	0017      	movs	r7, r2
 80005f8:	4642      	mov	r2, r8
 80005fa:	431f      	orrs	r7, r3
 80005fc:	4653      	mov	r3, sl
 80005fe:	4093      	lsls	r3, r2
 8000600:	001e      	movs	r6, r3
 8000602:	42af      	cmp	r7, r5
 8000604:	d9c4      	bls.n	8000590 <__udivmoddi4+0x4c>
 8000606:	2200      	movs	r2, #0
 8000608:	2300      	movs	r3, #0
 800060a:	9200      	str	r2, [sp, #0]
 800060c:	9301      	str	r3, [sp, #4]
 800060e:	4643      	mov	r3, r8
 8000610:	2b00      	cmp	r3, #0
 8000612:	d0d9      	beq.n	80005c8 <__udivmoddi4+0x84>
 8000614:	07fb      	lsls	r3, r7, #31
 8000616:	0872      	lsrs	r2, r6, #1
 8000618:	431a      	orrs	r2, r3
 800061a:	4646      	mov	r6, r8
 800061c:	087b      	lsrs	r3, r7, #1
 800061e:	e00e      	b.n	800063e <__udivmoddi4+0xfa>
 8000620:	42ab      	cmp	r3, r5
 8000622:	d101      	bne.n	8000628 <__udivmoddi4+0xe4>
 8000624:	42a2      	cmp	r2, r4
 8000626:	d80c      	bhi.n	8000642 <__udivmoddi4+0xfe>
 8000628:	1aa4      	subs	r4, r4, r2
 800062a:	419d      	sbcs	r5, r3
 800062c:	2001      	movs	r0, #1
 800062e:	1924      	adds	r4, r4, r4
 8000630:	416d      	adcs	r5, r5
 8000632:	2100      	movs	r1, #0
 8000634:	3e01      	subs	r6, #1
 8000636:	1824      	adds	r4, r4, r0
 8000638:	414d      	adcs	r5, r1
 800063a:	2e00      	cmp	r6, #0
 800063c:	d006      	beq.n	800064c <__udivmoddi4+0x108>
 800063e:	42ab      	cmp	r3, r5
 8000640:	d9ee      	bls.n	8000620 <__udivmoddi4+0xdc>
 8000642:	3e01      	subs	r6, #1
 8000644:	1924      	adds	r4, r4, r4
 8000646:	416d      	adcs	r5, r5
 8000648:	2e00      	cmp	r6, #0
 800064a:	d1f8      	bne.n	800063e <__udivmoddi4+0xfa>
 800064c:	9800      	ldr	r0, [sp, #0]
 800064e:	9901      	ldr	r1, [sp, #4]
 8000650:	465b      	mov	r3, fp
 8000652:	1900      	adds	r0, r0, r4
 8000654:	4169      	adcs	r1, r5
 8000656:	2b00      	cmp	r3, #0
 8000658:	db24      	blt.n	80006a4 <__udivmoddi4+0x160>
 800065a:	002b      	movs	r3, r5
 800065c:	465a      	mov	r2, fp
 800065e:	4644      	mov	r4, r8
 8000660:	40d3      	lsrs	r3, r2
 8000662:	002a      	movs	r2, r5
 8000664:	40e2      	lsrs	r2, r4
 8000666:	001c      	movs	r4, r3
 8000668:	465b      	mov	r3, fp
 800066a:	0015      	movs	r5, r2
 800066c:	2b00      	cmp	r3, #0
 800066e:	db2a      	blt.n	80006c6 <__udivmoddi4+0x182>
 8000670:	0026      	movs	r6, r4
 8000672:	409e      	lsls	r6, r3
 8000674:	0033      	movs	r3, r6
 8000676:	0026      	movs	r6, r4
 8000678:	4647      	mov	r7, r8
 800067a:	40be      	lsls	r6, r7
 800067c:	0032      	movs	r2, r6
 800067e:	1a80      	subs	r0, r0, r2
 8000680:	4199      	sbcs	r1, r3
 8000682:	9000      	str	r0, [sp, #0]
 8000684:	9101      	str	r1, [sp, #4]
 8000686:	e79f      	b.n	80005c8 <__udivmoddi4+0x84>
 8000688:	42a3      	cmp	r3, r4
 800068a:	d8bc      	bhi.n	8000606 <__udivmoddi4+0xc2>
 800068c:	e783      	b.n	8000596 <__udivmoddi4+0x52>
 800068e:	4642      	mov	r2, r8
 8000690:	2320      	movs	r3, #32
 8000692:	2100      	movs	r1, #0
 8000694:	1a9b      	subs	r3, r3, r2
 8000696:	2200      	movs	r2, #0
 8000698:	9100      	str	r1, [sp, #0]
 800069a:	9201      	str	r2, [sp, #4]
 800069c:	2201      	movs	r2, #1
 800069e:	40da      	lsrs	r2, r3
 80006a0:	9201      	str	r2, [sp, #4]
 80006a2:	e786      	b.n	80005b2 <__udivmoddi4+0x6e>
 80006a4:	4642      	mov	r2, r8
 80006a6:	2320      	movs	r3, #32
 80006a8:	1a9b      	subs	r3, r3, r2
 80006aa:	002a      	movs	r2, r5
 80006ac:	4646      	mov	r6, r8
 80006ae:	409a      	lsls	r2, r3
 80006b0:	0023      	movs	r3, r4
 80006b2:	40f3      	lsrs	r3, r6
 80006b4:	4644      	mov	r4, r8
 80006b6:	4313      	orrs	r3, r2
 80006b8:	002a      	movs	r2, r5
 80006ba:	40e2      	lsrs	r2, r4
 80006bc:	001c      	movs	r4, r3
 80006be:	465b      	mov	r3, fp
 80006c0:	0015      	movs	r5, r2
 80006c2:	2b00      	cmp	r3, #0
 80006c4:	dad4      	bge.n	8000670 <__udivmoddi4+0x12c>
 80006c6:	4642      	mov	r2, r8
 80006c8:	002f      	movs	r7, r5
 80006ca:	2320      	movs	r3, #32
 80006cc:	0026      	movs	r6, r4
 80006ce:	4097      	lsls	r7, r2
 80006d0:	1a9b      	subs	r3, r3, r2
 80006d2:	40de      	lsrs	r6, r3
 80006d4:	003b      	movs	r3, r7
 80006d6:	4333      	orrs	r3, r6
 80006d8:	e7cd      	b.n	8000676 <__udivmoddi4+0x132>
 80006da:	46c0      	nop			; (mov r8, r8)

080006dc <__aeabi_fdiv>:
 80006dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006de:	464f      	mov	r7, r9
 80006e0:	4646      	mov	r6, r8
 80006e2:	46d6      	mov	lr, sl
 80006e4:	0245      	lsls	r5, r0, #9
 80006e6:	b5c0      	push	{r6, r7, lr}
 80006e8:	0047      	lsls	r7, r0, #1
 80006ea:	1c0c      	adds	r4, r1, #0
 80006ec:	0a6d      	lsrs	r5, r5, #9
 80006ee:	0e3f      	lsrs	r7, r7, #24
 80006f0:	0fc6      	lsrs	r6, r0, #31
 80006f2:	2f00      	cmp	r7, #0
 80006f4:	d100      	bne.n	80006f8 <__aeabi_fdiv+0x1c>
 80006f6:	e070      	b.n	80007da <__aeabi_fdiv+0xfe>
 80006f8:	2fff      	cmp	r7, #255	; 0xff
 80006fa:	d100      	bne.n	80006fe <__aeabi_fdiv+0x22>
 80006fc:	e075      	b.n	80007ea <__aeabi_fdiv+0x10e>
 80006fe:	00eb      	lsls	r3, r5, #3
 8000700:	2580      	movs	r5, #128	; 0x80
 8000702:	04ed      	lsls	r5, r5, #19
 8000704:	431d      	orrs	r5, r3
 8000706:	2300      	movs	r3, #0
 8000708:	4699      	mov	r9, r3
 800070a:	469a      	mov	sl, r3
 800070c:	3f7f      	subs	r7, #127	; 0x7f
 800070e:	0260      	lsls	r0, r4, #9
 8000710:	0a43      	lsrs	r3, r0, #9
 8000712:	4698      	mov	r8, r3
 8000714:	0063      	lsls	r3, r4, #1
 8000716:	0e1b      	lsrs	r3, r3, #24
 8000718:	0fe4      	lsrs	r4, r4, #31
 800071a:	2b00      	cmp	r3, #0
 800071c:	d04e      	beq.n	80007bc <__aeabi_fdiv+0xe0>
 800071e:	2bff      	cmp	r3, #255	; 0xff
 8000720:	d046      	beq.n	80007b0 <__aeabi_fdiv+0xd4>
 8000722:	4642      	mov	r2, r8
 8000724:	00d0      	lsls	r0, r2, #3
 8000726:	2280      	movs	r2, #128	; 0x80
 8000728:	04d2      	lsls	r2, r2, #19
 800072a:	4302      	orrs	r2, r0
 800072c:	4690      	mov	r8, r2
 800072e:	2200      	movs	r2, #0
 8000730:	3b7f      	subs	r3, #127	; 0x7f
 8000732:	0031      	movs	r1, r6
 8000734:	1aff      	subs	r7, r7, r3
 8000736:	464b      	mov	r3, r9
 8000738:	4061      	eors	r1, r4
 800073a:	b2c9      	uxtb	r1, r1
 800073c:	4313      	orrs	r3, r2
 800073e:	2b0f      	cmp	r3, #15
 8000740:	d900      	bls.n	8000744 <__aeabi_fdiv+0x68>
 8000742:	e0b5      	b.n	80008b0 <__aeabi_fdiv+0x1d4>
 8000744:	486e      	ldr	r0, [pc, #440]	; (8000900 <__aeabi_fdiv+0x224>)
 8000746:	009b      	lsls	r3, r3, #2
 8000748:	58c3      	ldr	r3, [r0, r3]
 800074a:	469f      	mov	pc, r3
 800074c:	2300      	movs	r3, #0
 800074e:	4698      	mov	r8, r3
 8000750:	0026      	movs	r6, r4
 8000752:	4645      	mov	r5, r8
 8000754:	4692      	mov	sl, r2
 8000756:	4653      	mov	r3, sl
 8000758:	2b02      	cmp	r3, #2
 800075a:	d100      	bne.n	800075e <__aeabi_fdiv+0x82>
 800075c:	e089      	b.n	8000872 <__aeabi_fdiv+0x196>
 800075e:	2b03      	cmp	r3, #3
 8000760:	d100      	bne.n	8000764 <__aeabi_fdiv+0x88>
 8000762:	e09e      	b.n	80008a2 <__aeabi_fdiv+0x1c6>
 8000764:	2b01      	cmp	r3, #1
 8000766:	d018      	beq.n	800079a <__aeabi_fdiv+0xbe>
 8000768:	003b      	movs	r3, r7
 800076a:	337f      	adds	r3, #127	; 0x7f
 800076c:	2b00      	cmp	r3, #0
 800076e:	dd69      	ble.n	8000844 <__aeabi_fdiv+0x168>
 8000770:	076a      	lsls	r2, r5, #29
 8000772:	d004      	beq.n	800077e <__aeabi_fdiv+0xa2>
 8000774:	220f      	movs	r2, #15
 8000776:	402a      	ands	r2, r5
 8000778:	2a04      	cmp	r2, #4
 800077a:	d000      	beq.n	800077e <__aeabi_fdiv+0xa2>
 800077c:	3504      	adds	r5, #4
 800077e:	012a      	lsls	r2, r5, #4
 8000780:	d503      	bpl.n	800078a <__aeabi_fdiv+0xae>
 8000782:	4b60      	ldr	r3, [pc, #384]	; (8000904 <__aeabi_fdiv+0x228>)
 8000784:	401d      	ands	r5, r3
 8000786:	003b      	movs	r3, r7
 8000788:	3380      	adds	r3, #128	; 0x80
 800078a:	2bfe      	cmp	r3, #254	; 0xfe
 800078c:	dd00      	ble.n	8000790 <__aeabi_fdiv+0xb4>
 800078e:	e070      	b.n	8000872 <__aeabi_fdiv+0x196>
 8000790:	01ad      	lsls	r5, r5, #6
 8000792:	0a6d      	lsrs	r5, r5, #9
 8000794:	b2d8      	uxtb	r0, r3
 8000796:	e002      	b.n	800079e <__aeabi_fdiv+0xc2>
 8000798:	000e      	movs	r6, r1
 800079a:	2000      	movs	r0, #0
 800079c:	2500      	movs	r5, #0
 800079e:	05c0      	lsls	r0, r0, #23
 80007a0:	4328      	orrs	r0, r5
 80007a2:	07f6      	lsls	r6, r6, #31
 80007a4:	4330      	orrs	r0, r6
 80007a6:	bce0      	pop	{r5, r6, r7}
 80007a8:	46ba      	mov	sl, r7
 80007aa:	46b1      	mov	r9, r6
 80007ac:	46a8      	mov	r8, r5
 80007ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80007b0:	4643      	mov	r3, r8
 80007b2:	2b00      	cmp	r3, #0
 80007b4:	d13f      	bne.n	8000836 <__aeabi_fdiv+0x15a>
 80007b6:	2202      	movs	r2, #2
 80007b8:	3fff      	subs	r7, #255	; 0xff
 80007ba:	e003      	b.n	80007c4 <__aeabi_fdiv+0xe8>
 80007bc:	4643      	mov	r3, r8
 80007be:	2b00      	cmp	r3, #0
 80007c0:	d12d      	bne.n	800081e <__aeabi_fdiv+0x142>
 80007c2:	2201      	movs	r2, #1
 80007c4:	0031      	movs	r1, r6
 80007c6:	464b      	mov	r3, r9
 80007c8:	4061      	eors	r1, r4
 80007ca:	b2c9      	uxtb	r1, r1
 80007cc:	4313      	orrs	r3, r2
 80007ce:	2b0f      	cmp	r3, #15
 80007d0:	d834      	bhi.n	800083c <__aeabi_fdiv+0x160>
 80007d2:	484d      	ldr	r0, [pc, #308]	; (8000908 <__aeabi_fdiv+0x22c>)
 80007d4:	009b      	lsls	r3, r3, #2
 80007d6:	58c3      	ldr	r3, [r0, r3]
 80007d8:	469f      	mov	pc, r3
 80007da:	2d00      	cmp	r5, #0
 80007dc:	d113      	bne.n	8000806 <__aeabi_fdiv+0x12a>
 80007de:	2304      	movs	r3, #4
 80007e0:	4699      	mov	r9, r3
 80007e2:	3b03      	subs	r3, #3
 80007e4:	2700      	movs	r7, #0
 80007e6:	469a      	mov	sl, r3
 80007e8:	e791      	b.n	800070e <__aeabi_fdiv+0x32>
 80007ea:	2d00      	cmp	r5, #0
 80007ec:	d105      	bne.n	80007fa <__aeabi_fdiv+0x11e>
 80007ee:	2308      	movs	r3, #8
 80007f0:	4699      	mov	r9, r3
 80007f2:	3b06      	subs	r3, #6
 80007f4:	27ff      	movs	r7, #255	; 0xff
 80007f6:	469a      	mov	sl, r3
 80007f8:	e789      	b.n	800070e <__aeabi_fdiv+0x32>
 80007fa:	230c      	movs	r3, #12
 80007fc:	4699      	mov	r9, r3
 80007fe:	3b09      	subs	r3, #9
 8000800:	27ff      	movs	r7, #255	; 0xff
 8000802:	469a      	mov	sl, r3
 8000804:	e783      	b.n	800070e <__aeabi_fdiv+0x32>
 8000806:	0028      	movs	r0, r5
 8000808:	f001 fefc 	bl	8002604 <__clzsi2>
 800080c:	2776      	movs	r7, #118	; 0x76
 800080e:	1f43      	subs	r3, r0, #5
 8000810:	409d      	lsls	r5, r3
 8000812:	2300      	movs	r3, #0
 8000814:	427f      	negs	r7, r7
 8000816:	4699      	mov	r9, r3
 8000818:	469a      	mov	sl, r3
 800081a:	1a3f      	subs	r7, r7, r0
 800081c:	e777      	b.n	800070e <__aeabi_fdiv+0x32>
 800081e:	4640      	mov	r0, r8
 8000820:	f001 fef0 	bl	8002604 <__clzsi2>
 8000824:	4642      	mov	r2, r8
 8000826:	1f43      	subs	r3, r0, #5
 8000828:	409a      	lsls	r2, r3
 800082a:	2376      	movs	r3, #118	; 0x76
 800082c:	425b      	negs	r3, r3
 800082e:	4690      	mov	r8, r2
 8000830:	1a1b      	subs	r3, r3, r0
 8000832:	2200      	movs	r2, #0
 8000834:	e77d      	b.n	8000732 <__aeabi_fdiv+0x56>
 8000836:	23ff      	movs	r3, #255	; 0xff
 8000838:	2203      	movs	r2, #3
 800083a:	e77a      	b.n	8000732 <__aeabi_fdiv+0x56>
 800083c:	000e      	movs	r6, r1
 800083e:	20ff      	movs	r0, #255	; 0xff
 8000840:	2500      	movs	r5, #0
 8000842:	e7ac      	b.n	800079e <__aeabi_fdiv+0xc2>
 8000844:	2001      	movs	r0, #1
 8000846:	1ac0      	subs	r0, r0, r3
 8000848:	281b      	cmp	r0, #27
 800084a:	dca6      	bgt.n	800079a <__aeabi_fdiv+0xbe>
 800084c:	379e      	adds	r7, #158	; 0x9e
 800084e:	002a      	movs	r2, r5
 8000850:	40bd      	lsls	r5, r7
 8000852:	40c2      	lsrs	r2, r0
 8000854:	1e6b      	subs	r3, r5, #1
 8000856:	419d      	sbcs	r5, r3
 8000858:	4315      	orrs	r5, r2
 800085a:	076b      	lsls	r3, r5, #29
 800085c:	d004      	beq.n	8000868 <__aeabi_fdiv+0x18c>
 800085e:	230f      	movs	r3, #15
 8000860:	402b      	ands	r3, r5
 8000862:	2b04      	cmp	r3, #4
 8000864:	d000      	beq.n	8000868 <__aeabi_fdiv+0x18c>
 8000866:	3504      	adds	r5, #4
 8000868:	016b      	lsls	r3, r5, #5
 800086a:	d544      	bpl.n	80008f6 <__aeabi_fdiv+0x21a>
 800086c:	2001      	movs	r0, #1
 800086e:	2500      	movs	r5, #0
 8000870:	e795      	b.n	800079e <__aeabi_fdiv+0xc2>
 8000872:	20ff      	movs	r0, #255	; 0xff
 8000874:	2500      	movs	r5, #0
 8000876:	e792      	b.n	800079e <__aeabi_fdiv+0xc2>
 8000878:	2580      	movs	r5, #128	; 0x80
 800087a:	2600      	movs	r6, #0
 800087c:	20ff      	movs	r0, #255	; 0xff
 800087e:	03ed      	lsls	r5, r5, #15
 8000880:	e78d      	b.n	800079e <__aeabi_fdiv+0xc2>
 8000882:	2300      	movs	r3, #0
 8000884:	4698      	mov	r8, r3
 8000886:	2080      	movs	r0, #128	; 0x80
 8000888:	03c0      	lsls	r0, r0, #15
 800088a:	4205      	tst	r5, r0
 800088c:	d009      	beq.n	80008a2 <__aeabi_fdiv+0x1c6>
 800088e:	4643      	mov	r3, r8
 8000890:	4203      	tst	r3, r0
 8000892:	d106      	bne.n	80008a2 <__aeabi_fdiv+0x1c6>
 8000894:	4645      	mov	r5, r8
 8000896:	4305      	orrs	r5, r0
 8000898:	026d      	lsls	r5, r5, #9
 800089a:	0026      	movs	r6, r4
 800089c:	20ff      	movs	r0, #255	; 0xff
 800089e:	0a6d      	lsrs	r5, r5, #9
 80008a0:	e77d      	b.n	800079e <__aeabi_fdiv+0xc2>
 80008a2:	2080      	movs	r0, #128	; 0x80
 80008a4:	03c0      	lsls	r0, r0, #15
 80008a6:	4305      	orrs	r5, r0
 80008a8:	026d      	lsls	r5, r5, #9
 80008aa:	20ff      	movs	r0, #255	; 0xff
 80008ac:	0a6d      	lsrs	r5, r5, #9
 80008ae:	e776      	b.n	800079e <__aeabi_fdiv+0xc2>
 80008b0:	4642      	mov	r2, r8
 80008b2:	016b      	lsls	r3, r5, #5
 80008b4:	0150      	lsls	r0, r2, #5
 80008b6:	4283      	cmp	r3, r0
 80008b8:	d219      	bcs.n	80008ee <__aeabi_fdiv+0x212>
 80008ba:	221b      	movs	r2, #27
 80008bc:	2500      	movs	r5, #0
 80008be:	3f01      	subs	r7, #1
 80008c0:	2601      	movs	r6, #1
 80008c2:	001c      	movs	r4, r3
 80008c4:	006d      	lsls	r5, r5, #1
 80008c6:	005b      	lsls	r3, r3, #1
 80008c8:	2c00      	cmp	r4, #0
 80008ca:	db01      	blt.n	80008d0 <__aeabi_fdiv+0x1f4>
 80008cc:	4298      	cmp	r0, r3
 80008ce:	d801      	bhi.n	80008d4 <__aeabi_fdiv+0x1f8>
 80008d0:	1a1b      	subs	r3, r3, r0
 80008d2:	4335      	orrs	r5, r6
 80008d4:	3a01      	subs	r2, #1
 80008d6:	2a00      	cmp	r2, #0
 80008d8:	d1f3      	bne.n	80008c2 <__aeabi_fdiv+0x1e6>
 80008da:	1e5a      	subs	r2, r3, #1
 80008dc:	4193      	sbcs	r3, r2
 80008de:	431d      	orrs	r5, r3
 80008e0:	003b      	movs	r3, r7
 80008e2:	337f      	adds	r3, #127	; 0x7f
 80008e4:	000e      	movs	r6, r1
 80008e6:	2b00      	cmp	r3, #0
 80008e8:	dd00      	ble.n	80008ec <__aeabi_fdiv+0x210>
 80008ea:	e741      	b.n	8000770 <__aeabi_fdiv+0x94>
 80008ec:	e7aa      	b.n	8000844 <__aeabi_fdiv+0x168>
 80008ee:	221a      	movs	r2, #26
 80008f0:	2501      	movs	r5, #1
 80008f2:	1a1b      	subs	r3, r3, r0
 80008f4:	e7e4      	b.n	80008c0 <__aeabi_fdiv+0x1e4>
 80008f6:	01ad      	lsls	r5, r5, #6
 80008f8:	2000      	movs	r0, #0
 80008fa:	0a6d      	lsrs	r5, r5, #9
 80008fc:	e74f      	b.n	800079e <__aeabi_fdiv+0xc2>
 80008fe:	46c0      	nop			; (mov r8, r8)
 8000900:	0800783c 	.word	0x0800783c
 8000904:	f7ffffff 	.word	0xf7ffffff
 8000908:	0800787c 	.word	0x0800787c

0800090c <__aeabi_i2f>:
 800090c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800090e:	2800      	cmp	r0, #0
 8000910:	d013      	beq.n	800093a <__aeabi_i2f+0x2e>
 8000912:	17c3      	asrs	r3, r0, #31
 8000914:	18c6      	adds	r6, r0, r3
 8000916:	405e      	eors	r6, r3
 8000918:	0fc4      	lsrs	r4, r0, #31
 800091a:	0030      	movs	r0, r6
 800091c:	f001 fe72 	bl	8002604 <__clzsi2>
 8000920:	239e      	movs	r3, #158	; 0x9e
 8000922:	0005      	movs	r5, r0
 8000924:	1a1b      	subs	r3, r3, r0
 8000926:	2b96      	cmp	r3, #150	; 0x96
 8000928:	dc0f      	bgt.n	800094a <__aeabi_i2f+0x3e>
 800092a:	2808      	cmp	r0, #8
 800092c:	dd01      	ble.n	8000932 <__aeabi_i2f+0x26>
 800092e:	3d08      	subs	r5, #8
 8000930:	40ae      	lsls	r6, r5
 8000932:	0276      	lsls	r6, r6, #9
 8000934:	0a76      	lsrs	r6, r6, #9
 8000936:	b2d8      	uxtb	r0, r3
 8000938:	e002      	b.n	8000940 <__aeabi_i2f+0x34>
 800093a:	2400      	movs	r4, #0
 800093c:	2000      	movs	r0, #0
 800093e:	2600      	movs	r6, #0
 8000940:	05c0      	lsls	r0, r0, #23
 8000942:	4330      	orrs	r0, r6
 8000944:	07e4      	lsls	r4, r4, #31
 8000946:	4320      	orrs	r0, r4
 8000948:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800094a:	2b99      	cmp	r3, #153	; 0x99
 800094c:	dd0c      	ble.n	8000968 <__aeabi_i2f+0x5c>
 800094e:	2205      	movs	r2, #5
 8000950:	0031      	movs	r1, r6
 8000952:	1a12      	subs	r2, r2, r0
 8000954:	40d1      	lsrs	r1, r2
 8000956:	000a      	movs	r2, r1
 8000958:	0001      	movs	r1, r0
 800095a:	0030      	movs	r0, r6
 800095c:	311b      	adds	r1, #27
 800095e:	4088      	lsls	r0, r1
 8000960:	1e41      	subs	r1, r0, #1
 8000962:	4188      	sbcs	r0, r1
 8000964:	4302      	orrs	r2, r0
 8000966:	0016      	movs	r6, r2
 8000968:	2d05      	cmp	r5, #5
 800096a:	dc12      	bgt.n	8000992 <__aeabi_i2f+0x86>
 800096c:	0031      	movs	r1, r6
 800096e:	4f0d      	ldr	r7, [pc, #52]	; (80009a4 <__aeabi_i2f+0x98>)
 8000970:	4039      	ands	r1, r7
 8000972:	0772      	lsls	r2, r6, #29
 8000974:	d009      	beq.n	800098a <__aeabi_i2f+0x7e>
 8000976:	200f      	movs	r0, #15
 8000978:	4030      	ands	r0, r6
 800097a:	2804      	cmp	r0, #4
 800097c:	d005      	beq.n	800098a <__aeabi_i2f+0x7e>
 800097e:	3104      	adds	r1, #4
 8000980:	014a      	lsls	r2, r1, #5
 8000982:	d502      	bpl.n	800098a <__aeabi_i2f+0x7e>
 8000984:	239f      	movs	r3, #159	; 0x9f
 8000986:	4039      	ands	r1, r7
 8000988:	1b5b      	subs	r3, r3, r5
 800098a:	0189      	lsls	r1, r1, #6
 800098c:	0a4e      	lsrs	r6, r1, #9
 800098e:	b2d8      	uxtb	r0, r3
 8000990:	e7d6      	b.n	8000940 <__aeabi_i2f+0x34>
 8000992:	1f6a      	subs	r2, r5, #5
 8000994:	4096      	lsls	r6, r2
 8000996:	0031      	movs	r1, r6
 8000998:	4f02      	ldr	r7, [pc, #8]	; (80009a4 <__aeabi_i2f+0x98>)
 800099a:	4039      	ands	r1, r7
 800099c:	0772      	lsls	r2, r6, #29
 800099e:	d0f4      	beq.n	800098a <__aeabi_i2f+0x7e>
 80009a0:	e7e9      	b.n	8000976 <__aeabi_i2f+0x6a>
 80009a2:	46c0      	nop			; (mov r8, r8)
 80009a4:	fbffffff 	.word	0xfbffffff

080009a8 <__aeabi_dadd>:
 80009a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009aa:	464f      	mov	r7, r9
 80009ac:	4646      	mov	r6, r8
 80009ae:	46d6      	mov	lr, sl
 80009b0:	000d      	movs	r5, r1
 80009b2:	0004      	movs	r4, r0
 80009b4:	b5c0      	push	{r6, r7, lr}
 80009b6:	001f      	movs	r7, r3
 80009b8:	0011      	movs	r1, r2
 80009ba:	0328      	lsls	r0, r5, #12
 80009bc:	0f62      	lsrs	r2, r4, #29
 80009be:	0a40      	lsrs	r0, r0, #9
 80009c0:	4310      	orrs	r0, r2
 80009c2:	007a      	lsls	r2, r7, #1
 80009c4:	0d52      	lsrs	r2, r2, #21
 80009c6:	00e3      	lsls	r3, r4, #3
 80009c8:	033c      	lsls	r4, r7, #12
 80009ca:	4691      	mov	r9, r2
 80009cc:	0a64      	lsrs	r4, r4, #9
 80009ce:	0ffa      	lsrs	r2, r7, #31
 80009d0:	0f4f      	lsrs	r7, r1, #29
 80009d2:	006e      	lsls	r6, r5, #1
 80009d4:	4327      	orrs	r7, r4
 80009d6:	4692      	mov	sl, r2
 80009d8:	46b8      	mov	r8, r7
 80009da:	0d76      	lsrs	r6, r6, #21
 80009dc:	0fed      	lsrs	r5, r5, #31
 80009de:	00c9      	lsls	r1, r1, #3
 80009e0:	4295      	cmp	r5, r2
 80009e2:	d100      	bne.n	80009e6 <__aeabi_dadd+0x3e>
 80009e4:	e099      	b.n	8000b1a <__aeabi_dadd+0x172>
 80009e6:	464c      	mov	r4, r9
 80009e8:	1b34      	subs	r4, r6, r4
 80009ea:	46a4      	mov	ip, r4
 80009ec:	2c00      	cmp	r4, #0
 80009ee:	dc00      	bgt.n	80009f2 <__aeabi_dadd+0x4a>
 80009f0:	e07c      	b.n	8000aec <__aeabi_dadd+0x144>
 80009f2:	464a      	mov	r2, r9
 80009f4:	2a00      	cmp	r2, #0
 80009f6:	d100      	bne.n	80009fa <__aeabi_dadd+0x52>
 80009f8:	e0b8      	b.n	8000b6c <__aeabi_dadd+0x1c4>
 80009fa:	4ac5      	ldr	r2, [pc, #788]	; (8000d10 <__aeabi_dadd+0x368>)
 80009fc:	4296      	cmp	r6, r2
 80009fe:	d100      	bne.n	8000a02 <__aeabi_dadd+0x5a>
 8000a00:	e11c      	b.n	8000c3c <__aeabi_dadd+0x294>
 8000a02:	2280      	movs	r2, #128	; 0x80
 8000a04:	003c      	movs	r4, r7
 8000a06:	0412      	lsls	r2, r2, #16
 8000a08:	4314      	orrs	r4, r2
 8000a0a:	46a0      	mov	r8, r4
 8000a0c:	4662      	mov	r2, ip
 8000a0e:	2a38      	cmp	r2, #56	; 0x38
 8000a10:	dd00      	ble.n	8000a14 <__aeabi_dadd+0x6c>
 8000a12:	e161      	b.n	8000cd8 <__aeabi_dadd+0x330>
 8000a14:	2a1f      	cmp	r2, #31
 8000a16:	dd00      	ble.n	8000a1a <__aeabi_dadd+0x72>
 8000a18:	e1cc      	b.n	8000db4 <__aeabi_dadd+0x40c>
 8000a1a:	4664      	mov	r4, ip
 8000a1c:	2220      	movs	r2, #32
 8000a1e:	1b12      	subs	r2, r2, r4
 8000a20:	4644      	mov	r4, r8
 8000a22:	4094      	lsls	r4, r2
 8000a24:	000f      	movs	r7, r1
 8000a26:	46a1      	mov	r9, r4
 8000a28:	4664      	mov	r4, ip
 8000a2a:	4091      	lsls	r1, r2
 8000a2c:	40e7      	lsrs	r7, r4
 8000a2e:	464c      	mov	r4, r9
 8000a30:	1e4a      	subs	r2, r1, #1
 8000a32:	4191      	sbcs	r1, r2
 8000a34:	433c      	orrs	r4, r7
 8000a36:	4642      	mov	r2, r8
 8000a38:	4321      	orrs	r1, r4
 8000a3a:	4664      	mov	r4, ip
 8000a3c:	40e2      	lsrs	r2, r4
 8000a3e:	1a80      	subs	r0, r0, r2
 8000a40:	1a5c      	subs	r4, r3, r1
 8000a42:	42a3      	cmp	r3, r4
 8000a44:	419b      	sbcs	r3, r3
 8000a46:	425f      	negs	r7, r3
 8000a48:	1bc7      	subs	r7, r0, r7
 8000a4a:	023b      	lsls	r3, r7, #8
 8000a4c:	d400      	bmi.n	8000a50 <__aeabi_dadd+0xa8>
 8000a4e:	e0d0      	b.n	8000bf2 <__aeabi_dadd+0x24a>
 8000a50:	027f      	lsls	r7, r7, #9
 8000a52:	0a7f      	lsrs	r7, r7, #9
 8000a54:	2f00      	cmp	r7, #0
 8000a56:	d100      	bne.n	8000a5a <__aeabi_dadd+0xb2>
 8000a58:	e0ff      	b.n	8000c5a <__aeabi_dadd+0x2b2>
 8000a5a:	0038      	movs	r0, r7
 8000a5c:	f001 fdd2 	bl	8002604 <__clzsi2>
 8000a60:	0001      	movs	r1, r0
 8000a62:	3908      	subs	r1, #8
 8000a64:	2320      	movs	r3, #32
 8000a66:	0022      	movs	r2, r4
 8000a68:	1a5b      	subs	r3, r3, r1
 8000a6a:	408f      	lsls	r7, r1
 8000a6c:	40da      	lsrs	r2, r3
 8000a6e:	408c      	lsls	r4, r1
 8000a70:	4317      	orrs	r7, r2
 8000a72:	42b1      	cmp	r1, r6
 8000a74:	da00      	bge.n	8000a78 <__aeabi_dadd+0xd0>
 8000a76:	e0ff      	b.n	8000c78 <__aeabi_dadd+0x2d0>
 8000a78:	1b89      	subs	r1, r1, r6
 8000a7a:	1c4b      	adds	r3, r1, #1
 8000a7c:	2b1f      	cmp	r3, #31
 8000a7e:	dd00      	ble.n	8000a82 <__aeabi_dadd+0xda>
 8000a80:	e0a8      	b.n	8000bd4 <__aeabi_dadd+0x22c>
 8000a82:	2220      	movs	r2, #32
 8000a84:	0039      	movs	r1, r7
 8000a86:	1ad2      	subs	r2, r2, r3
 8000a88:	0020      	movs	r0, r4
 8000a8a:	4094      	lsls	r4, r2
 8000a8c:	4091      	lsls	r1, r2
 8000a8e:	40d8      	lsrs	r0, r3
 8000a90:	1e62      	subs	r2, r4, #1
 8000a92:	4194      	sbcs	r4, r2
 8000a94:	40df      	lsrs	r7, r3
 8000a96:	2600      	movs	r6, #0
 8000a98:	4301      	orrs	r1, r0
 8000a9a:	430c      	orrs	r4, r1
 8000a9c:	0763      	lsls	r3, r4, #29
 8000a9e:	d009      	beq.n	8000ab4 <__aeabi_dadd+0x10c>
 8000aa0:	230f      	movs	r3, #15
 8000aa2:	4023      	ands	r3, r4
 8000aa4:	2b04      	cmp	r3, #4
 8000aa6:	d005      	beq.n	8000ab4 <__aeabi_dadd+0x10c>
 8000aa8:	1d23      	adds	r3, r4, #4
 8000aaa:	42a3      	cmp	r3, r4
 8000aac:	41a4      	sbcs	r4, r4
 8000aae:	4264      	negs	r4, r4
 8000ab0:	193f      	adds	r7, r7, r4
 8000ab2:	001c      	movs	r4, r3
 8000ab4:	023b      	lsls	r3, r7, #8
 8000ab6:	d400      	bmi.n	8000aba <__aeabi_dadd+0x112>
 8000ab8:	e09e      	b.n	8000bf8 <__aeabi_dadd+0x250>
 8000aba:	4b95      	ldr	r3, [pc, #596]	; (8000d10 <__aeabi_dadd+0x368>)
 8000abc:	3601      	adds	r6, #1
 8000abe:	429e      	cmp	r6, r3
 8000ac0:	d100      	bne.n	8000ac4 <__aeabi_dadd+0x11c>
 8000ac2:	e0b7      	b.n	8000c34 <__aeabi_dadd+0x28c>
 8000ac4:	4a93      	ldr	r2, [pc, #588]	; (8000d14 <__aeabi_dadd+0x36c>)
 8000ac6:	08e4      	lsrs	r4, r4, #3
 8000ac8:	4017      	ands	r7, r2
 8000aca:	077b      	lsls	r3, r7, #29
 8000acc:	0571      	lsls	r1, r6, #21
 8000ace:	027f      	lsls	r7, r7, #9
 8000ad0:	4323      	orrs	r3, r4
 8000ad2:	0b3f      	lsrs	r7, r7, #12
 8000ad4:	0d4a      	lsrs	r2, r1, #21
 8000ad6:	0512      	lsls	r2, r2, #20
 8000ad8:	433a      	orrs	r2, r7
 8000ada:	07ed      	lsls	r5, r5, #31
 8000adc:	432a      	orrs	r2, r5
 8000ade:	0018      	movs	r0, r3
 8000ae0:	0011      	movs	r1, r2
 8000ae2:	bce0      	pop	{r5, r6, r7}
 8000ae4:	46ba      	mov	sl, r7
 8000ae6:	46b1      	mov	r9, r6
 8000ae8:	46a8      	mov	r8, r5
 8000aea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000aec:	2c00      	cmp	r4, #0
 8000aee:	d04b      	beq.n	8000b88 <__aeabi_dadd+0x1e0>
 8000af0:	464c      	mov	r4, r9
 8000af2:	1ba4      	subs	r4, r4, r6
 8000af4:	46a4      	mov	ip, r4
 8000af6:	2e00      	cmp	r6, #0
 8000af8:	d000      	beq.n	8000afc <__aeabi_dadd+0x154>
 8000afa:	e123      	b.n	8000d44 <__aeabi_dadd+0x39c>
 8000afc:	0004      	movs	r4, r0
 8000afe:	431c      	orrs	r4, r3
 8000b00:	d100      	bne.n	8000b04 <__aeabi_dadd+0x15c>
 8000b02:	e1af      	b.n	8000e64 <__aeabi_dadd+0x4bc>
 8000b04:	4662      	mov	r2, ip
 8000b06:	1e54      	subs	r4, r2, #1
 8000b08:	2a01      	cmp	r2, #1
 8000b0a:	d100      	bne.n	8000b0e <__aeabi_dadd+0x166>
 8000b0c:	e215      	b.n	8000f3a <__aeabi_dadd+0x592>
 8000b0e:	4d80      	ldr	r5, [pc, #512]	; (8000d10 <__aeabi_dadd+0x368>)
 8000b10:	45ac      	cmp	ip, r5
 8000b12:	d100      	bne.n	8000b16 <__aeabi_dadd+0x16e>
 8000b14:	e1c8      	b.n	8000ea8 <__aeabi_dadd+0x500>
 8000b16:	46a4      	mov	ip, r4
 8000b18:	e11b      	b.n	8000d52 <__aeabi_dadd+0x3aa>
 8000b1a:	464a      	mov	r2, r9
 8000b1c:	1ab2      	subs	r2, r6, r2
 8000b1e:	4694      	mov	ip, r2
 8000b20:	2a00      	cmp	r2, #0
 8000b22:	dc00      	bgt.n	8000b26 <__aeabi_dadd+0x17e>
 8000b24:	e0ac      	b.n	8000c80 <__aeabi_dadd+0x2d8>
 8000b26:	464a      	mov	r2, r9
 8000b28:	2a00      	cmp	r2, #0
 8000b2a:	d043      	beq.n	8000bb4 <__aeabi_dadd+0x20c>
 8000b2c:	4a78      	ldr	r2, [pc, #480]	; (8000d10 <__aeabi_dadd+0x368>)
 8000b2e:	4296      	cmp	r6, r2
 8000b30:	d100      	bne.n	8000b34 <__aeabi_dadd+0x18c>
 8000b32:	e1af      	b.n	8000e94 <__aeabi_dadd+0x4ec>
 8000b34:	2280      	movs	r2, #128	; 0x80
 8000b36:	003c      	movs	r4, r7
 8000b38:	0412      	lsls	r2, r2, #16
 8000b3a:	4314      	orrs	r4, r2
 8000b3c:	46a0      	mov	r8, r4
 8000b3e:	4662      	mov	r2, ip
 8000b40:	2a38      	cmp	r2, #56	; 0x38
 8000b42:	dc67      	bgt.n	8000c14 <__aeabi_dadd+0x26c>
 8000b44:	2a1f      	cmp	r2, #31
 8000b46:	dc00      	bgt.n	8000b4a <__aeabi_dadd+0x1a2>
 8000b48:	e15f      	b.n	8000e0a <__aeabi_dadd+0x462>
 8000b4a:	4647      	mov	r7, r8
 8000b4c:	3a20      	subs	r2, #32
 8000b4e:	40d7      	lsrs	r7, r2
 8000b50:	4662      	mov	r2, ip
 8000b52:	2a20      	cmp	r2, #32
 8000b54:	d005      	beq.n	8000b62 <__aeabi_dadd+0x1ba>
 8000b56:	4664      	mov	r4, ip
 8000b58:	2240      	movs	r2, #64	; 0x40
 8000b5a:	1b12      	subs	r2, r2, r4
 8000b5c:	4644      	mov	r4, r8
 8000b5e:	4094      	lsls	r4, r2
 8000b60:	4321      	orrs	r1, r4
 8000b62:	1e4a      	subs	r2, r1, #1
 8000b64:	4191      	sbcs	r1, r2
 8000b66:	000c      	movs	r4, r1
 8000b68:	433c      	orrs	r4, r7
 8000b6a:	e057      	b.n	8000c1c <__aeabi_dadd+0x274>
 8000b6c:	003a      	movs	r2, r7
 8000b6e:	430a      	orrs	r2, r1
 8000b70:	d100      	bne.n	8000b74 <__aeabi_dadd+0x1cc>
 8000b72:	e105      	b.n	8000d80 <__aeabi_dadd+0x3d8>
 8000b74:	0022      	movs	r2, r4
 8000b76:	3a01      	subs	r2, #1
 8000b78:	2c01      	cmp	r4, #1
 8000b7a:	d100      	bne.n	8000b7e <__aeabi_dadd+0x1d6>
 8000b7c:	e182      	b.n	8000e84 <__aeabi_dadd+0x4dc>
 8000b7e:	4c64      	ldr	r4, [pc, #400]	; (8000d10 <__aeabi_dadd+0x368>)
 8000b80:	45a4      	cmp	ip, r4
 8000b82:	d05b      	beq.n	8000c3c <__aeabi_dadd+0x294>
 8000b84:	4694      	mov	ip, r2
 8000b86:	e741      	b.n	8000a0c <__aeabi_dadd+0x64>
 8000b88:	4c63      	ldr	r4, [pc, #396]	; (8000d18 <__aeabi_dadd+0x370>)
 8000b8a:	1c77      	adds	r7, r6, #1
 8000b8c:	4227      	tst	r7, r4
 8000b8e:	d000      	beq.n	8000b92 <__aeabi_dadd+0x1ea>
 8000b90:	e0c4      	b.n	8000d1c <__aeabi_dadd+0x374>
 8000b92:	0004      	movs	r4, r0
 8000b94:	431c      	orrs	r4, r3
 8000b96:	2e00      	cmp	r6, #0
 8000b98:	d000      	beq.n	8000b9c <__aeabi_dadd+0x1f4>
 8000b9a:	e169      	b.n	8000e70 <__aeabi_dadd+0x4c8>
 8000b9c:	2c00      	cmp	r4, #0
 8000b9e:	d100      	bne.n	8000ba2 <__aeabi_dadd+0x1fa>
 8000ba0:	e1bf      	b.n	8000f22 <__aeabi_dadd+0x57a>
 8000ba2:	4644      	mov	r4, r8
 8000ba4:	430c      	orrs	r4, r1
 8000ba6:	d000      	beq.n	8000baa <__aeabi_dadd+0x202>
 8000ba8:	e1d0      	b.n	8000f4c <__aeabi_dadd+0x5a4>
 8000baa:	0742      	lsls	r2, r0, #29
 8000bac:	08db      	lsrs	r3, r3, #3
 8000bae:	4313      	orrs	r3, r2
 8000bb0:	08c0      	lsrs	r0, r0, #3
 8000bb2:	e029      	b.n	8000c08 <__aeabi_dadd+0x260>
 8000bb4:	003a      	movs	r2, r7
 8000bb6:	430a      	orrs	r2, r1
 8000bb8:	d100      	bne.n	8000bbc <__aeabi_dadd+0x214>
 8000bba:	e170      	b.n	8000e9e <__aeabi_dadd+0x4f6>
 8000bbc:	4662      	mov	r2, ip
 8000bbe:	4664      	mov	r4, ip
 8000bc0:	3a01      	subs	r2, #1
 8000bc2:	2c01      	cmp	r4, #1
 8000bc4:	d100      	bne.n	8000bc8 <__aeabi_dadd+0x220>
 8000bc6:	e0e0      	b.n	8000d8a <__aeabi_dadd+0x3e2>
 8000bc8:	4c51      	ldr	r4, [pc, #324]	; (8000d10 <__aeabi_dadd+0x368>)
 8000bca:	45a4      	cmp	ip, r4
 8000bcc:	d100      	bne.n	8000bd0 <__aeabi_dadd+0x228>
 8000bce:	e161      	b.n	8000e94 <__aeabi_dadd+0x4ec>
 8000bd0:	4694      	mov	ip, r2
 8000bd2:	e7b4      	b.n	8000b3e <__aeabi_dadd+0x196>
 8000bd4:	003a      	movs	r2, r7
 8000bd6:	391f      	subs	r1, #31
 8000bd8:	40ca      	lsrs	r2, r1
 8000bda:	0011      	movs	r1, r2
 8000bdc:	2b20      	cmp	r3, #32
 8000bde:	d003      	beq.n	8000be8 <__aeabi_dadd+0x240>
 8000be0:	2240      	movs	r2, #64	; 0x40
 8000be2:	1ad3      	subs	r3, r2, r3
 8000be4:	409f      	lsls	r7, r3
 8000be6:	433c      	orrs	r4, r7
 8000be8:	1e63      	subs	r3, r4, #1
 8000bea:	419c      	sbcs	r4, r3
 8000bec:	2700      	movs	r7, #0
 8000bee:	2600      	movs	r6, #0
 8000bf0:	430c      	orrs	r4, r1
 8000bf2:	0763      	lsls	r3, r4, #29
 8000bf4:	d000      	beq.n	8000bf8 <__aeabi_dadd+0x250>
 8000bf6:	e753      	b.n	8000aa0 <__aeabi_dadd+0xf8>
 8000bf8:	46b4      	mov	ip, r6
 8000bfa:	08e4      	lsrs	r4, r4, #3
 8000bfc:	077b      	lsls	r3, r7, #29
 8000bfe:	4323      	orrs	r3, r4
 8000c00:	08f8      	lsrs	r0, r7, #3
 8000c02:	4a43      	ldr	r2, [pc, #268]	; (8000d10 <__aeabi_dadd+0x368>)
 8000c04:	4594      	cmp	ip, r2
 8000c06:	d01d      	beq.n	8000c44 <__aeabi_dadd+0x29c>
 8000c08:	4662      	mov	r2, ip
 8000c0a:	0307      	lsls	r7, r0, #12
 8000c0c:	0552      	lsls	r2, r2, #21
 8000c0e:	0b3f      	lsrs	r7, r7, #12
 8000c10:	0d52      	lsrs	r2, r2, #21
 8000c12:	e760      	b.n	8000ad6 <__aeabi_dadd+0x12e>
 8000c14:	4644      	mov	r4, r8
 8000c16:	430c      	orrs	r4, r1
 8000c18:	1e62      	subs	r2, r4, #1
 8000c1a:	4194      	sbcs	r4, r2
 8000c1c:	18e4      	adds	r4, r4, r3
 8000c1e:	429c      	cmp	r4, r3
 8000c20:	419b      	sbcs	r3, r3
 8000c22:	425f      	negs	r7, r3
 8000c24:	183f      	adds	r7, r7, r0
 8000c26:	023b      	lsls	r3, r7, #8
 8000c28:	d5e3      	bpl.n	8000bf2 <__aeabi_dadd+0x24a>
 8000c2a:	4b39      	ldr	r3, [pc, #228]	; (8000d10 <__aeabi_dadd+0x368>)
 8000c2c:	3601      	adds	r6, #1
 8000c2e:	429e      	cmp	r6, r3
 8000c30:	d000      	beq.n	8000c34 <__aeabi_dadd+0x28c>
 8000c32:	e0b5      	b.n	8000da0 <__aeabi_dadd+0x3f8>
 8000c34:	0032      	movs	r2, r6
 8000c36:	2700      	movs	r7, #0
 8000c38:	2300      	movs	r3, #0
 8000c3a:	e74c      	b.n	8000ad6 <__aeabi_dadd+0x12e>
 8000c3c:	0742      	lsls	r2, r0, #29
 8000c3e:	08db      	lsrs	r3, r3, #3
 8000c40:	4313      	orrs	r3, r2
 8000c42:	08c0      	lsrs	r0, r0, #3
 8000c44:	001a      	movs	r2, r3
 8000c46:	4302      	orrs	r2, r0
 8000c48:	d100      	bne.n	8000c4c <__aeabi_dadd+0x2a4>
 8000c4a:	e1e1      	b.n	8001010 <__aeabi_dadd+0x668>
 8000c4c:	2780      	movs	r7, #128	; 0x80
 8000c4e:	033f      	lsls	r7, r7, #12
 8000c50:	4307      	orrs	r7, r0
 8000c52:	033f      	lsls	r7, r7, #12
 8000c54:	4a2e      	ldr	r2, [pc, #184]	; (8000d10 <__aeabi_dadd+0x368>)
 8000c56:	0b3f      	lsrs	r7, r7, #12
 8000c58:	e73d      	b.n	8000ad6 <__aeabi_dadd+0x12e>
 8000c5a:	0020      	movs	r0, r4
 8000c5c:	f001 fcd2 	bl	8002604 <__clzsi2>
 8000c60:	0001      	movs	r1, r0
 8000c62:	3118      	adds	r1, #24
 8000c64:	291f      	cmp	r1, #31
 8000c66:	dc00      	bgt.n	8000c6a <__aeabi_dadd+0x2c2>
 8000c68:	e6fc      	b.n	8000a64 <__aeabi_dadd+0xbc>
 8000c6a:	3808      	subs	r0, #8
 8000c6c:	4084      	lsls	r4, r0
 8000c6e:	0027      	movs	r7, r4
 8000c70:	2400      	movs	r4, #0
 8000c72:	42b1      	cmp	r1, r6
 8000c74:	db00      	blt.n	8000c78 <__aeabi_dadd+0x2d0>
 8000c76:	e6ff      	b.n	8000a78 <__aeabi_dadd+0xd0>
 8000c78:	4a26      	ldr	r2, [pc, #152]	; (8000d14 <__aeabi_dadd+0x36c>)
 8000c7a:	1a76      	subs	r6, r6, r1
 8000c7c:	4017      	ands	r7, r2
 8000c7e:	e70d      	b.n	8000a9c <__aeabi_dadd+0xf4>
 8000c80:	2a00      	cmp	r2, #0
 8000c82:	d02f      	beq.n	8000ce4 <__aeabi_dadd+0x33c>
 8000c84:	464a      	mov	r2, r9
 8000c86:	1b92      	subs	r2, r2, r6
 8000c88:	4694      	mov	ip, r2
 8000c8a:	2e00      	cmp	r6, #0
 8000c8c:	d100      	bne.n	8000c90 <__aeabi_dadd+0x2e8>
 8000c8e:	e0ad      	b.n	8000dec <__aeabi_dadd+0x444>
 8000c90:	4a1f      	ldr	r2, [pc, #124]	; (8000d10 <__aeabi_dadd+0x368>)
 8000c92:	4591      	cmp	r9, r2
 8000c94:	d100      	bne.n	8000c98 <__aeabi_dadd+0x2f0>
 8000c96:	e10f      	b.n	8000eb8 <__aeabi_dadd+0x510>
 8000c98:	2280      	movs	r2, #128	; 0x80
 8000c9a:	0412      	lsls	r2, r2, #16
 8000c9c:	4310      	orrs	r0, r2
 8000c9e:	4662      	mov	r2, ip
 8000ca0:	2a38      	cmp	r2, #56	; 0x38
 8000ca2:	dd00      	ble.n	8000ca6 <__aeabi_dadd+0x2fe>
 8000ca4:	e10f      	b.n	8000ec6 <__aeabi_dadd+0x51e>
 8000ca6:	2a1f      	cmp	r2, #31
 8000ca8:	dd00      	ble.n	8000cac <__aeabi_dadd+0x304>
 8000caa:	e180      	b.n	8000fae <__aeabi_dadd+0x606>
 8000cac:	4664      	mov	r4, ip
 8000cae:	2220      	movs	r2, #32
 8000cb0:	001e      	movs	r6, r3
 8000cb2:	1b12      	subs	r2, r2, r4
 8000cb4:	4667      	mov	r7, ip
 8000cb6:	0004      	movs	r4, r0
 8000cb8:	4093      	lsls	r3, r2
 8000cba:	4094      	lsls	r4, r2
 8000cbc:	40fe      	lsrs	r6, r7
 8000cbe:	1e5a      	subs	r2, r3, #1
 8000cc0:	4193      	sbcs	r3, r2
 8000cc2:	40f8      	lsrs	r0, r7
 8000cc4:	4334      	orrs	r4, r6
 8000cc6:	431c      	orrs	r4, r3
 8000cc8:	4480      	add	r8, r0
 8000cca:	1864      	adds	r4, r4, r1
 8000ccc:	428c      	cmp	r4, r1
 8000cce:	41bf      	sbcs	r7, r7
 8000cd0:	427f      	negs	r7, r7
 8000cd2:	464e      	mov	r6, r9
 8000cd4:	4447      	add	r7, r8
 8000cd6:	e7a6      	b.n	8000c26 <__aeabi_dadd+0x27e>
 8000cd8:	4642      	mov	r2, r8
 8000cda:	430a      	orrs	r2, r1
 8000cdc:	0011      	movs	r1, r2
 8000cde:	1e4a      	subs	r2, r1, #1
 8000ce0:	4191      	sbcs	r1, r2
 8000ce2:	e6ad      	b.n	8000a40 <__aeabi_dadd+0x98>
 8000ce4:	4c0c      	ldr	r4, [pc, #48]	; (8000d18 <__aeabi_dadd+0x370>)
 8000ce6:	1c72      	adds	r2, r6, #1
 8000ce8:	4222      	tst	r2, r4
 8000cea:	d000      	beq.n	8000cee <__aeabi_dadd+0x346>
 8000cec:	e0a1      	b.n	8000e32 <__aeabi_dadd+0x48a>
 8000cee:	0002      	movs	r2, r0
 8000cf0:	431a      	orrs	r2, r3
 8000cf2:	2e00      	cmp	r6, #0
 8000cf4:	d000      	beq.n	8000cf8 <__aeabi_dadd+0x350>
 8000cf6:	e0fa      	b.n	8000eee <__aeabi_dadd+0x546>
 8000cf8:	2a00      	cmp	r2, #0
 8000cfa:	d100      	bne.n	8000cfe <__aeabi_dadd+0x356>
 8000cfc:	e145      	b.n	8000f8a <__aeabi_dadd+0x5e2>
 8000cfe:	003a      	movs	r2, r7
 8000d00:	430a      	orrs	r2, r1
 8000d02:	d000      	beq.n	8000d06 <__aeabi_dadd+0x35e>
 8000d04:	e146      	b.n	8000f94 <__aeabi_dadd+0x5ec>
 8000d06:	0742      	lsls	r2, r0, #29
 8000d08:	08db      	lsrs	r3, r3, #3
 8000d0a:	4313      	orrs	r3, r2
 8000d0c:	08c0      	lsrs	r0, r0, #3
 8000d0e:	e77b      	b.n	8000c08 <__aeabi_dadd+0x260>
 8000d10:	000007ff 	.word	0x000007ff
 8000d14:	ff7fffff 	.word	0xff7fffff
 8000d18:	000007fe 	.word	0x000007fe
 8000d1c:	4647      	mov	r7, r8
 8000d1e:	1a5c      	subs	r4, r3, r1
 8000d20:	1bc2      	subs	r2, r0, r7
 8000d22:	42a3      	cmp	r3, r4
 8000d24:	41bf      	sbcs	r7, r7
 8000d26:	427f      	negs	r7, r7
 8000d28:	46b9      	mov	r9, r7
 8000d2a:	0017      	movs	r7, r2
 8000d2c:	464a      	mov	r2, r9
 8000d2e:	1abf      	subs	r7, r7, r2
 8000d30:	023a      	lsls	r2, r7, #8
 8000d32:	d500      	bpl.n	8000d36 <__aeabi_dadd+0x38e>
 8000d34:	e08d      	b.n	8000e52 <__aeabi_dadd+0x4aa>
 8000d36:	0023      	movs	r3, r4
 8000d38:	433b      	orrs	r3, r7
 8000d3a:	d000      	beq.n	8000d3e <__aeabi_dadd+0x396>
 8000d3c:	e68a      	b.n	8000a54 <__aeabi_dadd+0xac>
 8000d3e:	2000      	movs	r0, #0
 8000d40:	2500      	movs	r5, #0
 8000d42:	e761      	b.n	8000c08 <__aeabi_dadd+0x260>
 8000d44:	4cb4      	ldr	r4, [pc, #720]	; (8001018 <__aeabi_dadd+0x670>)
 8000d46:	45a1      	cmp	r9, r4
 8000d48:	d100      	bne.n	8000d4c <__aeabi_dadd+0x3a4>
 8000d4a:	e0ad      	b.n	8000ea8 <__aeabi_dadd+0x500>
 8000d4c:	2480      	movs	r4, #128	; 0x80
 8000d4e:	0424      	lsls	r4, r4, #16
 8000d50:	4320      	orrs	r0, r4
 8000d52:	4664      	mov	r4, ip
 8000d54:	2c38      	cmp	r4, #56	; 0x38
 8000d56:	dc3d      	bgt.n	8000dd4 <__aeabi_dadd+0x42c>
 8000d58:	4662      	mov	r2, ip
 8000d5a:	2c1f      	cmp	r4, #31
 8000d5c:	dd00      	ble.n	8000d60 <__aeabi_dadd+0x3b8>
 8000d5e:	e0b7      	b.n	8000ed0 <__aeabi_dadd+0x528>
 8000d60:	2520      	movs	r5, #32
 8000d62:	001e      	movs	r6, r3
 8000d64:	1b2d      	subs	r5, r5, r4
 8000d66:	0004      	movs	r4, r0
 8000d68:	40ab      	lsls	r3, r5
 8000d6a:	40ac      	lsls	r4, r5
 8000d6c:	40d6      	lsrs	r6, r2
 8000d6e:	40d0      	lsrs	r0, r2
 8000d70:	4642      	mov	r2, r8
 8000d72:	1e5d      	subs	r5, r3, #1
 8000d74:	41ab      	sbcs	r3, r5
 8000d76:	4334      	orrs	r4, r6
 8000d78:	1a12      	subs	r2, r2, r0
 8000d7a:	4690      	mov	r8, r2
 8000d7c:	4323      	orrs	r3, r4
 8000d7e:	e02c      	b.n	8000dda <__aeabi_dadd+0x432>
 8000d80:	0742      	lsls	r2, r0, #29
 8000d82:	08db      	lsrs	r3, r3, #3
 8000d84:	4313      	orrs	r3, r2
 8000d86:	08c0      	lsrs	r0, r0, #3
 8000d88:	e73b      	b.n	8000c02 <__aeabi_dadd+0x25a>
 8000d8a:	185c      	adds	r4, r3, r1
 8000d8c:	429c      	cmp	r4, r3
 8000d8e:	419b      	sbcs	r3, r3
 8000d90:	4440      	add	r0, r8
 8000d92:	425b      	negs	r3, r3
 8000d94:	18c7      	adds	r7, r0, r3
 8000d96:	2601      	movs	r6, #1
 8000d98:	023b      	lsls	r3, r7, #8
 8000d9a:	d400      	bmi.n	8000d9e <__aeabi_dadd+0x3f6>
 8000d9c:	e729      	b.n	8000bf2 <__aeabi_dadd+0x24a>
 8000d9e:	2602      	movs	r6, #2
 8000da0:	4a9e      	ldr	r2, [pc, #632]	; (800101c <__aeabi_dadd+0x674>)
 8000da2:	0863      	lsrs	r3, r4, #1
 8000da4:	4017      	ands	r7, r2
 8000da6:	2201      	movs	r2, #1
 8000da8:	4014      	ands	r4, r2
 8000daa:	431c      	orrs	r4, r3
 8000dac:	07fb      	lsls	r3, r7, #31
 8000dae:	431c      	orrs	r4, r3
 8000db0:	087f      	lsrs	r7, r7, #1
 8000db2:	e673      	b.n	8000a9c <__aeabi_dadd+0xf4>
 8000db4:	4644      	mov	r4, r8
 8000db6:	3a20      	subs	r2, #32
 8000db8:	40d4      	lsrs	r4, r2
 8000dba:	4662      	mov	r2, ip
 8000dbc:	2a20      	cmp	r2, #32
 8000dbe:	d005      	beq.n	8000dcc <__aeabi_dadd+0x424>
 8000dc0:	4667      	mov	r7, ip
 8000dc2:	2240      	movs	r2, #64	; 0x40
 8000dc4:	1bd2      	subs	r2, r2, r7
 8000dc6:	4647      	mov	r7, r8
 8000dc8:	4097      	lsls	r7, r2
 8000dca:	4339      	orrs	r1, r7
 8000dcc:	1e4a      	subs	r2, r1, #1
 8000dce:	4191      	sbcs	r1, r2
 8000dd0:	4321      	orrs	r1, r4
 8000dd2:	e635      	b.n	8000a40 <__aeabi_dadd+0x98>
 8000dd4:	4303      	orrs	r3, r0
 8000dd6:	1e58      	subs	r0, r3, #1
 8000dd8:	4183      	sbcs	r3, r0
 8000dda:	1acc      	subs	r4, r1, r3
 8000ddc:	42a1      	cmp	r1, r4
 8000dde:	41bf      	sbcs	r7, r7
 8000de0:	4643      	mov	r3, r8
 8000de2:	427f      	negs	r7, r7
 8000de4:	4655      	mov	r5, sl
 8000de6:	464e      	mov	r6, r9
 8000de8:	1bdf      	subs	r7, r3, r7
 8000dea:	e62e      	b.n	8000a4a <__aeabi_dadd+0xa2>
 8000dec:	0002      	movs	r2, r0
 8000dee:	431a      	orrs	r2, r3
 8000df0:	d100      	bne.n	8000df4 <__aeabi_dadd+0x44c>
 8000df2:	e0bd      	b.n	8000f70 <__aeabi_dadd+0x5c8>
 8000df4:	4662      	mov	r2, ip
 8000df6:	4664      	mov	r4, ip
 8000df8:	3a01      	subs	r2, #1
 8000dfa:	2c01      	cmp	r4, #1
 8000dfc:	d100      	bne.n	8000e00 <__aeabi_dadd+0x458>
 8000dfe:	e0e5      	b.n	8000fcc <__aeabi_dadd+0x624>
 8000e00:	4c85      	ldr	r4, [pc, #532]	; (8001018 <__aeabi_dadd+0x670>)
 8000e02:	45a4      	cmp	ip, r4
 8000e04:	d058      	beq.n	8000eb8 <__aeabi_dadd+0x510>
 8000e06:	4694      	mov	ip, r2
 8000e08:	e749      	b.n	8000c9e <__aeabi_dadd+0x2f6>
 8000e0a:	4664      	mov	r4, ip
 8000e0c:	2220      	movs	r2, #32
 8000e0e:	1b12      	subs	r2, r2, r4
 8000e10:	4644      	mov	r4, r8
 8000e12:	4094      	lsls	r4, r2
 8000e14:	000f      	movs	r7, r1
 8000e16:	46a1      	mov	r9, r4
 8000e18:	4664      	mov	r4, ip
 8000e1a:	4091      	lsls	r1, r2
 8000e1c:	40e7      	lsrs	r7, r4
 8000e1e:	464c      	mov	r4, r9
 8000e20:	1e4a      	subs	r2, r1, #1
 8000e22:	4191      	sbcs	r1, r2
 8000e24:	433c      	orrs	r4, r7
 8000e26:	4642      	mov	r2, r8
 8000e28:	430c      	orrs	r4, r1
 8000e2a:	4661      	mov	r1, ip
 8000e2c:	40ca      	lsrs	r2, r1
 8000e2e:	1880      	adds	r0, r0, r2
 8000e30:	e6f4      	b.n	8000c1c <__aeabi_dadd+0x274>
 8000e32:	4c79      	ldr	r4, [pc, #484]	; (8001018 <__aeabi_dadd+0x670>)
 8000e34:	42a2      	cmp	r2, r4
 8000e36:	d100      	bne.n	8000e3a <__aeabi_dadd+0x492>
 8000e38:	e6fd      	b.n	8000c36 <__aeabi_dadd+0x28e>
 8000e3a:	1859      	adds	r1, r3, r1
 8000e3c:	4299      	cmp	r1, r3
 8000e3e:	419b      	sbcs	r3, r3
 8000e40:	4440      	add	r0, r8
 8000e42:	425f      	negs	r7, r3
 8000e44:	19c7      	adds	r7, r0, r7
 8000e46:	07fc      	lsls	r4, r7, #31
 8000e48:	0849      	lsrs	r1, r1, #1
 8000e4a:	0016      	movs	r6, r2
 8000e4c:	430c      	orrs	r4, r1
 8000e4e:	087f      	lsrs	r7, r7, #1
 8000e50:	e6cf      	b.n	8000bf2 <__aeabi_dadd+0x24a>
 8000e52:	1acc      	subs	r4, r1, r3
 8000e54:	42a1      	cmp	r1, r4
 8000e56:	41bf      	sbcs	r7, r7
 8000e58:	4643      	mov	r3, r8
 8000e5a:	427f      	negs	r7, r7
 8000e5c:	1a18      	subs	r0, r3, r0
 8000e5e:	4655      	mov	r5, sl
 8000e60:	1bc7      	subs	r7, r0, r7
 8000e62:	e5f7      	b.n	8000a54 <__aeabi_dadd+0xac>
 8000e64:	08c9      	lsrs	r1, r1, #3
 8000e66:	077b      	lsls	r3, r7, #29
 8000e68:	4655      	mov	r5, sl
 8000e6a:	430b      	orrs	r3, r1
 8000e6c:	08f8      	lsrs	r0, r7, #3
 8000e6e:	e6c8      	b.n	8000c02 <__aeabi_dadd+0x25a>
 8000e70:	2c00      	cmp	r4, #0
 8000e72:	d000      	beq.n	8000e76 <__aeabi_dadd+0x4ce>
 8000e74:	e081      	b.n	8000f7a <__aeabi_dadd+0x5d2>
 8000e76:	4643      	mov	r3, r8
 8000e78:	430b      	orrs	r3, r1
 8000e7a:	d115      	bne.n	8000ea8 <__aeabi_dadd+0x500>
 8000e7c:	2080      	movs	r0, #128	; 0x80
 8000e7e:	2500      	movs	r5, #0
 8000e80:	0300      	lsls	r0, r0, #12
 8000e82:	e6e3      	b.n	8000c4c <__aeabi_dadd+0x2a4>
 8000e84:	1a5c      	subs	r4, r3, r1
 8000e86:	42a3      	cmp	r3, r4
 8000e88:	419b      	sbcs	r3, r3
 8000e8a:	1bc7      	subs	r7, r0, r7
 8000e8c:	425b      	negs	r3, r3
 8000e8e:	2601      	movs	r6, #1
 8000e90:	1aff      	subs	r7, r7, r3
 8000e92:	e5da      	b.n	8000a4a <__aeabi_dadd+0xa2>
 8000e94:	0742      	lsls	r2, r0, #29
 8000e96:	08db      	lsrs	r3, r3, #3
 8000e98:	4313      	orrs	r3, r2
 8000e9a:	08c0      	lsrs	r0, r0, #3
 8000e9c:	e6d2      	b.n	8000c44 <__aeabi_dadd+0x29c>
 8000e9e:	0742      	lsls	r2, r0, #29
 8000ea0:	08db      	lsrs	r3, r3, #3
 8000ea2:	4313      	orrs	r3, r2
 8000ea4:	08c0      	lsrs	r0, r0, #3
 8000ea6:	e6ac      	b.n	8000c02 <__aeabi_dadd+0x25a>
 8000ea8:	4643      	mov	r3, r8
 8000eaa:	4642      	mov	r2, r8
 8000eac:	08c9      	lsrs	r1, r1, #3
 8000eae:	075b      	lsls	r3, r3, #29
 8000eb0:	4655      	mov	r5, sl
 8000eb2:	430b      	orrs	r3, r1
 8000eb4:	08d0      	lsrs	r0, r2, #3
 8000eb6:	e6c5      	b.n	8000c44 <__aeabi_dadd+0x29c>
 8000eb8:	4643      	mov	r3, r8
 8000eba:	4642      	mov	r2, r8
 8000ebc:	075b      	lsls	r3, r3, #29
 8000ebe:	08c9      	lsrs	r1, r1, #3
 8000ec0:	430b      	orrs	r3, r1
 8000ec2:	08d0      	lsrs	r0, r2, #3
 8000ec4:	e6be      	b.n	8000c44 <__aeabi_dadd+0x29c>
 8000ec6:	4303      	orrs	r3, r0
 8000ec8:	001c      	movs	r4, r3
 8000eca:	1e63      	subs	r3, r4, #1
 8000ecc:	419c      	sbcs	r4, r3
 8000ece:	e6fc      	b.n	8000cca <__aeabi_dadd+0x322>
 8000ed0:	0002      	movs	r2, r0
 8000ed2:	3c20      	subs	r4, #32
 8000ed4:	40e2      	lsrs	r2, r4
 8000ed6:	0014      	movs	r4, r2
 8000ed8:	4662      	mov	r2, ip
 8000eda:	2a20      	cmp	r2, #32
 8000edc:	d003      	beq.n	8000ee6 <__aeabi_dadd+0x53e>
 8000ede:	2540      	movs	r5, #64	; 0x40
 8000ee0:	1aad      	subs	r5, r5, r2
 8000ee2:	40a8      	lsls	r0, r5
 8000ee4:	4303      	orrs	r3, r0
 8000ee6:	1e58      	subs	r0, r3, #1
 8000ee8:	4183      	sbcs	r3, r0
 8000eea:	4323      	orrs	r3, r4
 8000eec:	e775      	b.n	8000dda <__aeabi_dadd+0x432>
 8000eee:	2a00      	cmp	r2, #0
 8000ef0:	d0e2      	beq.n	8000eb8 <__aeabi_dadd+0x510>
 8000ef2:	003a      	movs	r2, r7
 8000ef4:	430a      	orrs	r2, r1
 8000ef6:	d0cd      	beq.n	8000e94 <__aeabi_dadd+0x4ec>
 8000ef8:	0742      	lsls	r2, r0, #29
 8000efa:	08db      	lsrs	r3, r3, #3
 8000efc:	4313      	orrs	r3, r2
 8000efe:	2280      	movs	r2, #128	; 0x80
 8000f00:	08c0      	lsrs	r0, r0, #3
 8000f02:	0312      	lsls	r2, r2, #12
 8000f04:	4210      	tst	r0, r2
 8000f06:	d006      	beq.n	8000f16 <__aeabi_dadd+0x56e>
 8000f08:	08fc      	lsrs	r4, r7, #3
 8000f0a:	4214      	tst	r4, r2
 8000f0c:	d103      	bne.n	8000f16 <__aeabi_dadd+0x56e>
 8000f0e:	0020      	movs	r0, r4
 8000f10:	08cb      	lsrs	r3, r1, #3
 8000f12:	077a      	lsls	r2, r7, #29
 8000f14:	4313      	orrs	r3, r2
 8000f16:	0f5a      	lsrs	r2, r3, #29
 8000f18:	00db      	lsls	r3, r3, #3
 8000f1a:	0752      	lsls	r2, r2, #29
 8000f1c:	08db      	lsrs	r3, r3, #3
 8000f1e:	4313      	orrs	r3, r2
 8000f20:	e690      	b.n	8000c44 <__aeabi_dadd+0x29c>
 8000f22:	4643      	mov	r3, r8
 8000f24:	430b      	orrs	r3, r1
 8000f26:	d100      	bne.n	8000f2a <__aeabi_dadd+0x582>
 8000f28:	e709      	b.n	8000d3e <__aeabi_dadd+0x396>
 8000f2a:	4643      	mov	r3, r8
 8000f2c:	4642      	mov	r2, r8
 8000f2e:	08c9      	lsrs	r1, r1, #3
 8000f30:	075b      	lsls	r3, r3, #29
 8000f32:	4655      	mov	r5, sl
 8000f34:	430b      	orrs	r3, r1
 8000f36:	08d0      	lsrs	r0, r2, #3
 8000f38:	e666      	b.n	8000c08 <__aeabi_dadd+0x260>
 8000f3a:	1acc      	subs	r4, r1, r3
 8000f3c:	42a1      	cmp	r1, r4
 8000f3e:	4189      	sbcs	r1, r1
 8000f40:	1a3f      	subs	r7, r7, r0
 8000f42:	4249      	negs	r1, r1
 8000f44:	4655      	mov	r5, sl
 8000f46:	2601      	movs	r6, #1
 8000f48:	1a7f      	subs	r7, r7, r1
 8000f4a:	e57e      	b.n	8000a4a <__aeabi_dadd+0xa2>
 8000f4c:	4642      	mov	r2, r8
 8000f4e:	1a5c      	subs	r4, r3, r1
 8000f50:	1a87      	subs	r7, r0, r2
 8000f52:	42a3      	cmp	r3, r4
 8000f54:	4192      	sbcs	r2, r2
 8000f56:	4252      	negs	r2, r2
 8000f58:	1abf      	subs	r7, r7, r2
 8000f5a:	023a      	lsls	r2, r7, #8
 8000f5c:	d53d      	bpl.n	8000fda <__aeabi_dadd+0x632>
 8000f5e:	1acc      	subs	r4, r1, r3
 8000f60:	42a1      	cmp	r1, r4
 8000f62:	4189      	sbcs	r1, r1
 8000f64:	4643      	mov	r3, r8
 8000f66:	4249      	negs	r1, r1
 8000f68:	1a1f      	subs	r7, r3, r0
 8000f6a:	4655      	mov	r5, sl
 8000f6c:	1a7f      	subs	r7, r7, r1
 8000f6e:	e595      	b.n	8000a9c <__aeabi_dadd+0xf4>
 8000f70:	077b      	lsls	r3, r7, #29
 8000f72:	08c9      	lsrs	r1, r1, #3
 8000f74:	430b      	orrs	r3, r1
 8000f76:	08f8      	lsrs	r0, r7, #3
 8000f78:	e643      	b.n	8000c02 <__aeabi_dadd+0x25a>
 8000f7a:	4644      	mov	r4, r8
 8000f7c:	08db      	lsrs	r3, r3, #3
 8000f7e:	430c      	orrs	r4, r1
 8000f80:	d130      	bne.n	8000fe4 <__aeabi_dadd+0x63c>
 8000f82:	0742      	lsls	r2, r0, #29
 8000f84:	4313      	orrs	r3, r2
 8000f86:	08c0      	lsrs	r0, r0, #3
 8000f88:	e65c      	b.n	8000c44 <__aeabi_dadd+0x29c>
 8000f8a:	077b      	lsls	r3, r7, #29
 8000f8c:	08c9      	lsrs	r1, r1, #3
 8000f8e:	430b      	orrs	r3, r1
 8000f90:	08f8      	lsrs	r0, r7, #3
 8000f92:	e639      	b.n	8000c08 <__aeabi_dadd+0x260>
 8000f94:	185c      	adds	r4, r3, r1
 8000f96:	429c      	cmp	r4, r3
 8000f98:	419b      	sbcs	r3, r3
 8000f9a:	4440      	add	r0, r8
 8000f9c:	425b      	negs	r3, r3
 8000f9e:	18c7      	adds	r7, r0, r3
 8000fa0:	023b      	lsls	r3, r7, #8
 8000fa2:	d400      	bmi.n	8000fa6 <__aeabi_dadd+0x5fe>
 8000fa4:	e625      	b.n	8000bf2 <__aeabi_dadd+0x24a>
 8000fa6:	4b1d      	ldr	r3, [pc, #116]	; (800101c <__aeabi_dadd+0x674>)
 8000fa8:	2601      	movs	r6, #1
 8000faa:	401f      	ands	r7, r3
 8000fac:	e621      	b.n	8000bf2 <__aeabi_dadd+0x24a>
 8000fae:	0004      	movs	r4, r0
 8000fb0:	3a20      	subs	r2, #32
 8000fb2:	40d4      	lsrs	r4, r2
 8000fb4:	4662      	mov	r2, ip
 8000fb6:	2a20      	cmp	r2, #32
 8000fb8:	d004      	beq.n	8000fc4 <__aeabi_dadd+0x61c>
 8000fba:	2240      	movs	r2, #64	; 0x40
 8000fbc:	4666      	mov	r6, ip
 8000fbe:	1b92      	subs	r2, r2, r6
 8000fc0:	4090      	lsls	r0, r2
 8000fc2:	4303      	orrs	r3, r0
 8000fc4:	1e5a      	subs	r2, r3, #1
 8000fc6:	4193      	sbcs	r3, r2
 8000fc8:	431c      	orrs	r4, r3
 8000fca:	e67e      	b.n	8000cca <__aeabi_dadd+0x322>
 8000fcc:	185c      	adds	r4, r3, r1
 8000fce:	428c      	cmp	r4, r1
 8000fd0:	4189      	sbcs	r1, r1
 8000fd2:	4440      	add	r0, r8
 8000fd4:	4249      	negs	r1, r1
 8000fd6:	1847      	adds	r7, r0, r1
 8000fd8:	e6dd      	b.n	8000d96 <__aeabi_dadd+0x3ee>
 8000fda:	0023      	movs	r3, r4
 8000fdc:	433b      	orrs	r3, r7
 8000fde:	d100      	bne.n	8000fe2 <__aeabi_dadd+0x63a>
 8000fe0:	e6ad      	b.n	8000d3e <__aeabi_dadd+0x396>
 8000fe2:	e606      	b.n	8000bf2 <__aeabi_dadd+0x24a>
 8000fe4:	0744      	lsls	r4, r0, #29
 8000fe6:	4323      	orrs	r3, r4
 8000fe8:	2480      	movs	r4, #128	; 0x80
 8000fea:	08c0      	lsrs	r0, r0, #3
 8000fec:	0324      	lsls	r4, r4, #12
 8000fee:	4220      	tst	r0, r4
 8000ff0:	d008      	beq.n	8001004 <__aeabi_dadd+0x65c>
 8000ff2:	4642      	mov	r2, r8
 8000ff4:	08d6      	lsrs	r6, r2, #3
 8000ff6:	4226      	tst	r6, r4
 8000ff8:	d104      	bne.n	8001004 <__aeabi_dadd+0x65c>
 8000ffa:	4655      	mov	r5, sl
 8000ffc:	0030      	movs	r0, r6
 8000ffe:	08cb      	lsrs	r3, r1, #3
 8001000:	0751      	lsls	r1, r2, #29
 8001002:	430b      	orrs	r3, r1
 8001004:	0f5a      	lsrs	r2, r3, #29
 8001006:	00db      	lsls	r3, r3, #3
 8001008:	08db      	lsrs	r3, r3, #3
 800100a:	0752      	lsls	r2, r2, #29
 800100c:	4313      	orrs	r3, r2
 800100e:	e619      	b.n	8000c44 <__aeabi_dadd+0x29c>
 8001010:	2300      	movs	r3, #0
 8001012:	4a01      	ldr	r2, [pc, #4]	; (8001018 <__aeabi_dadd+0x670>)
 8001014:	001f      	movs	r7, r3
 8001016:	e55e      	b.n	8000ad6 <__aeabi_dadd+0x12e>
 8001018:	000007ff 	.word	0x000007ff
 800101c:	ff7fffff 	.word	0xff7fffff

08001020 <__aeabi_ddiv>:
 8001020:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001022:	4657      	mov	r7, sl
 8001024:	464e      	mov	r6, r9
 8001026:	4645      	mov	r5, r8
 8001028:	46de      	mov	lr, fp
 800102a:	b5e0      	push	{r5, r6, r7, lr}
 800102c:	4681      	mov	r9, r0
 800102e:	0005      	movs	r5, r0
 8001030:	030c      	lsls	r4, r1, #12
 8001032:	0048      	lsls	r0, r1, #1
 8001034:	4692      	mov	sl, r2
 8001036:	001f      	movs	r7, r3
 8001038:	b085      	sub	sp, #20
 800103a:	0b24      	lsrs	r4, r4, #12
 800103c:	0d40      	lsrs	r0, r0, #21
 800103e:	0fce      	lsrs	r6, r1, #31
 8001040:	2800      	cmp	r0, #0
 8001042:	d100      	bne.n	8001046 <__aeabi_ddiv+0x26>
 8001044:	e156      	b.n	80012f4 <__aeabi_ddiv+0x2d4>
 8001046:	4bd4      	ldr	r3, [pc, #848]	; (8001398 <__aeabi_ddiv+0x378>)
 8001048:	4298      	cmp	r0, r3
 800104a:	d100      	bne.n	800104e <__aeabi_ddiv+0x2e>
 800104c:	e172      	b.n	8001334 <__aeabi_ddiv+0x314>
 800104e:	0f6b      	lsrs	r3, r5, #29
 8001050:	00e4      	lsls	r4, r4, #3
 8001052:	431c      	orrs	r4, r3
 8001054:	2380      	movs	r3, #128	; 0x80
 8001056:	041b      	lsls	r3, r3, #16
 8001058:	4323      	orrs	r3, r4
 800105a:	4698      	mov	r8, r3
 800105c:	4bcf      	ldr	r3, [pc, #828]	; (800139c <__aeabi_ddiv+0x37c>)
 800105e:	00ed      	lsls	r5, r5, #3
 8001060:	469b      	mov	fp, r3
 8001062:	2300      	movs	r3, #0
 8001064:	4699      	mov	r9, r3
 8001066:	4483      	add	fp, r0
 8001068:	9300      	str	r3, [sp, #0]
 800106a:	033c      	lsls	r4, r7, #12
 800106c:	007b      	lsls	r3, r7, #1
 800106e:	4650      	mov	r0, sl
 8001070:	0b24      	lsrs	r4, r4, #12
 8001072:	0d5b      	lsrs	r3, r3, #21
 8001074:	0fff      	lsrs	r7, r7, #31
 8001076:	2b00      	cmp	r3, #0
 8001078:	d100      	bne.n	800107c <__aeabi_ddiv+0x5c>
 800107a:	e11f      	b.n	80012bc <__aeabi_ddiv+0x29c>
 800107c:	4ac6      	ldr	r2, [pc, #792]	; (8001398 <__aeabi_ddiv+0x378>)
 800107e:	4293      	cmp	r3, r2
 8001080:	d100      	bne.n	8001084 <__aeabi_ddiv+0x64>
 8001082:	e162      	b.n	800134a <__aeabi_ddiv+0x32a>
 8001084:	49c5      	ldr	r1, [pc, #788]	; (800139c <__aeabi_ddiv+0x37c>)
 8001086:	0f42      	lsrs	r2, r0, #29
 8001088:	468c      	mov	ip, r1
 800108a:	00e4      	lsls	r4, r4, #3
 800108c:	4659      	mov	r1, fp
 800108e:	4314      	orrs	r4, r2
 8001090:	2280      	movs	r2, #128	; 0x80
 8001092:	4463      	add	r3, ip
 8001094:	0412      	lsls	r2, r2, #16
 8001096:	1acb      	subs	r3, r1, r3
 8001098:	4314      	orrs	r4, r2
 800109a:	469b      	mov	fp, r3
 800109c:	00c2      	lsls	r2, r0, #3
 800109e:	2000      	movs	r0, #0
 80010a0:	0033      	movs	r3, r6
 80010a2:	407b      	eors	r3, r7
 80010a4:	469a      	mov	sl, r3
 80010a6:	464b      	mov	r3, r9
 80010a8:	2b0f      	cmp	r3, #15
 80010aa:	d827      	bhi.n	80010fc <__aeabi_ddiv+0xdc>
 80010ac:	49bc      	ldr	r1, [pc, #752]	; (80013a0 <__aeabi_ddiv+0x380>)
 80010ae:	009b      	lsls	r3, r3, #2
 80010b0:	58cb      	ldr	r3, [r1, r3]
 80010b2:	469f      	mov	pc, r3
 80010b4:	46b2      	mov	sl, r6
 80010b6:	9b00      	ldr	r3, [sp, #0]
 80010b8:	2b02      	cmp	r3, #2
 80010ba:	d016      	beq.n	80010ea <__aeabi_ddiv+0xca>
 80010bc:	2b03      	cmp	r3, #3
 80010be:	d100      	bne.n	80010c2 <__aeabi_ddiv+0xa2>
 80010c0:	e28e      	b.n	80015e0 <__aeabi_ddiv+0x5c0>
 80010c2:	2b01      	cmp	r3, #1
 80010c4:	d000      	beq.n	80010c8 <__aeabi_ddiv+0xa8>
 80010c6:	e0d9      	b.n	800127c <__aeabi_ddiv+0x25c>
 80010c8:	2300      	movs	r3, #0
 80010ca:	2400      	movs	r4, #0
 80010cc:	2500      	movs	r5, #0
 80010ce:	4652      	mov	r2, sl
 80010d0:	051b      	lsls	r3, r3, #20
 80010d2:	4323      	orrs	r3, r4
 80010d4:	07d2      	lsls	r2, r2, #31
 80010d6:	4313      	orrs	r3, r2
 80010d8:	0028      	movs	r0, r5
 80010da:	0019      	movs	r1, r3
 80010dc:	b005      	add	sp, #20
 80010de:	bcf0      	pop	{r4, r5, r6, r7}
 80010e0:	46bb      	mov	fp, r7
 80010e2:	46b2      	mov	sl, r6
 80010e4:	46a9      	mov	r9, r5
 80010e6:	46a0      	mov	r8, r4
 80010e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010ea:	2400      	movs	r4, #0
 80010ec:	2500      	movs	r5, #0
 80010ee:	4baa      	ldr	r3, [pc, #680]	; (8001398 <__aeabi_ddiv+0x378>)
 80010f0:	e7ed      	b.n	80010ce <__aeabi_ddiv+0xae>
 80010f2:	46ba      	mov	sl, r7
 80010f4:	46a0      	mov	r8, r4
 80010f6:	0015      	movs	r5, r2
 80010f8:	9000      	str	r0, [sp, #0]
 80010fa:	e7dc      	b.n	80010b6 <__aeabi_ddiv+0x96>
 80010fc:	4544      	cmp	r4, r8
 80010fe:	d200      	bcs.n	8001102 <__aeabi_ddiv+0xe2>
 8001100:	e1c7      	b.n	8001492 <__aeabi_ddiv+0x472>
 8001102:	d100      	bne.n	8001106 <__aeabi_ddiv+0xe6>
 8001104:	e1c2      	b.n	800148c <__aeabi_ddiv+0x46c>
 8001106:	2301      	movs	r3, #1
 8001108:	425b      	negs	r3, r3
 800110a:	469c      	mov	ip, r3
 800110c:	002e      	movs	r6, r5
 800110e:	4640      	mov	r0, r8
 8001110:	2500      	movs	r5, #0
 8001112:	44e3      	add	fp, ip
 8001114:	0223      	lsls	r3, r4, #8
 8001116:	0e14      	lsrs	r4, r2, #24
 8001118:	431c      	orrs	r4, r3
 800111a:	0c1b      	lsrs	r3, r3, #16
 800111c:	4699      	mov	r9, r3
 800111e:	0423      	lsls	r3, r4, #16
 8001120:	0c1f      	lsrs	r7, r3, #16
 8001122:	0212      	lsls	r2, r2, #8
 8001124:	4649      	mov	r1, r9
 8001126:	9200      	str	r2, [sp, #0]
 8001128:	9701      	str	r7, [sp, #4]
 800112a:	f7ff f88f 	bl	800024c <__aeabi_uidivmod>
 800112e:	0002      	movs	r2, r0
 8001130:	437a      	muls	r2, r7
 8001132:	040b      	lsls	r3, r1, #16
 8001134:	0c31      	lsrs	r1, r6, #16
 8001136:	4680      	mov	r8, r0
 8001138:	4319      	orrs	r1, r3
 800113a:	428a      	cmp	r2, r1
 800113c:	d907      	bls.n	800114e <__aeabi_ddiv+0x12e>
 800113e:	2301      	movs	r3, #1
 8001140:	425b      	negs	r3, r3
 8001142:	469c      	mov	ip, r3
 8001144:	1909      	adds	r1, r1, r4
 8001146:	44e0      	add	r8, ip
 8001148:	428c      	cmp	r4, r1
 800114a:	d800      	bhi.n	800114e <__aeabi_ddiv+0x12e>
 800114c:	e207      	b.n	800155e <__aeabi_ddiv+0x53e>
 800114e:	1a88      	subs	r0, r1, r2
 8001150:	4649      	mov	r1, r9
 8001152:	f7ff f87b 	bl	800024c <__aeabi_uidivmod>
 8001156:	0409      	lsls	r1, r1, #16
 8001158:	468c      	mov	ip, r1
 800115a:	0431      	lsls	r1, r6, #16
 800115c:	4666      	mov	r6, ip
 800115e:	9a01      	ldr	r2, [sp, #4]
 8001160:	0c09      	lsrs	r1, r1, #16
 8001162:	4342      	muls	r2, r0
 8001164:	0003      	movs	r3, r0
 8001166:	4331      	orrs	r1, r6
 8001168:	428a      	cmp	r2, r1
 800116a:	d904      	bls.n	8001176 <__aeabi_ddiv+0x156>
 800116c:	1909      	adds	r1, r1, r4
 800116e:	3b01      	subs	r3, #1
 8001170:	428c      	cmp	r4, r1
 8001172:	d800      	bhi.n	8001176 <__aeabi_ddiv+0x156>
 8001174:	e1ed      	b.n	8001552 <__aeabi_ddiv+0x532>
 8001176:	1a88      	subs	r0, r1, r2
 8001178:	4642      	mov	r2, r8
 800117a:	0412      	lsls	r2, r2, #16
 800117c:	431a      	orrs	r2, r3
 800117e:	4690      	mov	r8, r2
 8001180:	4641      	mov	r1, r8
 8001182:	9b00      	ldr	r3, [sp, #0]
 8001184:	040e      	lsls	r6, r1, #16
 8001186:	0c1b      	lsrs	r3, r3, #16
 8001188:	001f      	movs	r7, r3
 800118a:	9302      	str	r3, [sp, #8]
 800118c:	9b00      	ldr	r3, [sp, #0]
 800118e:	0c36      	lsrs	r6, r6, #16
 8001190:	041b      	lsls	r3, r3, #16
 8001192:	0c19      	lsrs	r1, r3, #16
 8001194:	000b      	movs	r3, r1
 8001196:	4373      	muls	r3, r6
 8001198:	0c12      	lsrs	r2, r2, #16
 800119a:	437e      	muls	r6, r7
 800119c:	9103      	str	r1, [sp, #12]
 800119e:	4351      	muls	r1, r2
 80011a0:	437a      	muls	r2, r7
 80011a2:	0c1f      	lsrs	r7, r3, #16
 80011a4:	46bc      	mov	ip, r7
 80011a6:	1876      	adds	r6, r6, r1
 80011a8:	4466      	add	r6, ip
 80011aa:	42b1      	cmp	r1, r6
 80011ac:	d903      	bls.n	80011b6 <__aeabi_ddiv+0x196>
 80011ae:	2180      	movs	r1, #128	; 0x80
 80011b0:	0249      	lsls	r1, r1, #9
 80011b2:	468c      	mov	ip, r1
 80011b4:	4462      	add	r2, ip
 80011b6:	0c31      	lsrs	r1, r6, #16
 80011b8:	188a      	adds	r2, r1, r2
 80011ba:	0431      	lsls	r1, r6, #16
 80011bc:	041e      	lsls	r6, r3, #16
 80011be:	0c36      	lsrs	r6, r6, #16
 80011c0:	198e      	adds	r6, r1, r6
 80011c2:	4290      	cmp	r0, r2
 80011c4:	d302      	bcc.n	80011cc <__aeabi_ddiv+0x1ac>
 80011c6:	d112      	bne.n	80011ee <__aeabi_ddiv+0x1ce>
 80011c8:	42b5      	cmp	r5, r6
 80011ca:	d210      	bcs.n	80011ee <__aeabi_ddiv+0x1ce>
 80011cc:	4643      	mov	r3, r8
 80011ce:	1e59      	subs	r1, r3, #1
 80011d0:	9b00      	ldr	r3, [sp, #0]
 80011d2:	469c      	mov	ip, r3
 80011d4:	4465      	add	r5, ip
 80011d6:	001f      	movs	r7, r3
 80011d8:	429d      	cmp	r5, r3
 80011da:	419b      	sbcs	r3, r3
 80011dc:	425b      	negs	r3, r3
 80011de:	191b      	adds	r3, r3, r4
 80011e0:	18c0      	adds	r0, r0, r3
 80011e2:	4284      	cmp	r4, r0
 80011e4:	d200      	bcs.n	80011e8 <__aeabi_ddiv+0x1c8>
 80011e6:	e1a0      	b.n	800152a <__aeabi_ddiv+0x50a>
 80011e8:	d100      	bne.n	80011ec <__aeabi_ddiv+0x1cc>
 80011ea:	e19b      	b.n	8001524 <__aeabi_ddiv+0x504>
 80011ec:	4688      	mov	r8, r1
 80011ee:	1bae      	subs	r6, r5, r6
 80011f0:	42b5      	cmp	r5, r6
 80011f2:	41ad      	sbcs	r5, r5
 80011f4:	1a80      	subs	r0, r0, r2
 80011f6:	426d      	negs	r5, r5
 80011f8:	1b40      	subs	r0, r0, r5
 80011fa:	4284      	cmp	r4, r0
 80011fc:	d100      	bne.n	8001200 <__aeabi_ddiv+0x1e0>
 80011fe:	e1d5      	b.n	80015ac <__aeabi_ddiv+0x58c>
 8001200:	4649      	mov	r1, r9
 8001202:	f7ff f823 	bl	800024c <__aeabi_uidivmod>
 8001206:	9a01      	ldr	r2, [sp, #4]
 8001208:	040b      	lsls	r3, r1, #16
 800120a:	4342      	muls	r2, r0
 800120c:	0c31      	lsrs	r1, r6, #16
 800120e:	0005      	movs	r5, r0
 8001210:	4319      	orrs	r1, r3
 8001212:	428a      	cmp	r2, r1
 8001214:	d900      	bls.n	8001218 <__aeabi_ddiv+0x1f8>
 8001216:	e16c      	b.n	80014f2 <__aeabi_ddiv+0x4d2>
 8001218:	1a88      	subs	r0, r1, r2
 800121a:	4649      	mov	r1, r9
 800121c:	f7ff f816 	bl	800024c <__aeabi_uidivmod>
 8001220:	9a01      	ldr	r2, [sp, #4]
 8001222:	0436      	lsls	r6, r6, #16
 8001224:	4342      	muls	r2, r0
 8001226:	0409      	lsls	r1, r1, #16
 8001228:	0c36      	lsrs	r6, r6, #16
 800122a:	0003      	movs	r3, r0
 800122c:	430e      	orrs	r6, r1
 800122e:	42b2      	cmp	r2, r6
 8001230:	d900      	bls.n	8001234 <__aeabi_ddiv+0x214>
 8001232:	e153      	b.n	80014dc <__aeabi_ddiv+0x4bc>
 8001234:	9803      	ldr	r0, [sp, #12]
 8001236:	1ab6      	subs	r6, r6, r2
 8001238:	0002      	movs	r2, r0
 800123a:	042d      	lsls	r5, r5, #16
 800123c:	431d      	orrs	r5, r3
 800123e:	9f02      	ldr	r7, [sp, #8]
 8001240:	042b      	lsls	r3, r5, #16
 8001242:	0c1b      	lsrs	r3, r3, #16
 8001244:	435a      	muls	r2, r3
 8001246:	437b      	muls	r3, r7
 8001248:	469c      	mov	ip, r3
 800124a:	0c29      	lsrs	r1, r5, #16
 800124c:	4348      	muls	r0, r1
 800124e:	0c13      	lsrs	r3, r2, #16
 8001250:	4484      	add	ip, r0
 8001252:	4463      	add	r3, ip
 8001254:	4379      	muls	r1, r7
 8001256:	4298      	cmp	r0, r3
 8001258:	d903      	bls.n	8001262 <__aeabi_ddiv+0x242>
 800125a:	2080      	movs	r0, #128	; 0x80
 800125c:	0240      	lsls	r0, r0, #9
 800125e:	4684      	mov	ip, r0
 8001260:	4461      	add	r1, ip
 8001262:	0c18      	lsrs	r0, r3, #16
 8001264:	0412      	lsls	r2, r2, #16
 8001266:	041b      	lsls	r3, r3, #16
 8001268:	0c12      	lsrs	r2, r2, #16
 800126a:	1841      	adds	r1, r0, r1
 800126c:	189b      	adds	r3, r3, r2
 800126e:	428e      	cmp	r6, r1
 8001270:	d200      	bcs.n	8001274 <__aeabi_ddiv+0x254>
 8001272:	e0ff      	b.n	8001474 <__aeabi_ddiv+0x454>
 8001274:	d100      	bne.n	8001278 <__aeabi_ddiv+0x258>
 8001276:	e0fa      	b.n	800146e <__aeabi_ddiv+0x44e>
 8001278:	2301      	movs	r3, #1
 800127a:	431d      	orrs	r5, r3
 800127c:	4a49      	ldr	r2, [pc, #292]	; (80013a4 <__aeabi_ddiv+0x384>)
 800127e:	445a      	add	r2, fp
 8001280:	2a00      	cmp	r2, #0
 8001282:	dc00      	bgt.n	8001286 <__aeabi_ddiv+0x266>
 8001284:	e0aa      	b.n	80013dc <__aeabi_ddiv+0x3bc>
 8001286:	076b      	lsls	r3, r5, #29
 8001288:	d000      	beq.n	800128c <__aeabi_ddiv+0x26c>
 800128a:	e13d      	b.n	8001508 <__aeabi_ddiv+0x4e8>
 800128c:	08ed      	lsrs	r5, r5, #3
 800128e:	4643      	mov	r3, r8
 8001290:	01db      	lsls	r3, r3, #7
 8001292:	d506      	bpl.n	80012a2 <__aeabi_ddiv+0x282>
 8001294:	4642      	mov	r2, r8
 8001296:	4b44      	ldr	r3, [pc, #272]	; (80013a8 <__aeabi_ddiv+0x388>)
 8001298:	401a      	ands	r2, r3
 800129a:	4690      	mov	r8, r2
 800129c:	2280      	movs	r2, #128	; 0x80
 800129e:	00d2      	lsls	r2, r2, #3
 80012a0:	445a      	add	r2, fp
 80012a2:	4b42      	ldr	r3, [pc, #264]	; (80013ac <__aeabi_ddiv+0x38c>)
 80012a4:	429a      	cmp	r2, r3
 80012a6:	dd00      	ble.n	80012aa <__aeabi_ddiv+0x28a>
 80012a8:	e71f      	b.n	80010ea <__aeabi_ddiv+0xca>
 80012aa:	4643      	mov	r3, r8
 80012ac:	075b      	lsls	r3, r3, #29
 80012ae:	431d      	orrs	r5, r3
 80012b0:	4643      	mov	r3, r8
 80012b2:	0552      	lsls	r2, r2, #21
 80012b4:	025c      	lsls	r4, r3, #9
 80012b6:	0b24      	lsrs	r4, r4, #12
 80012b8:	0d53      	lsrs	r3, r2, #21
 80012ba:	e708      	b.n	80010ce <__aeabi_ddiv+0xae>
 80012bc:	4652      	mov	r2, sl
 80012be:	4322      	orrs	r2, r4
 80012c0:	d100      	bne.n	80012c4 <__aeabi_ddiv+0x2a4>
 80012c2:	e07b      	b.n	80013bc <__aeabi_ddiv+0x39c>
 80012c4:	2c00      	cmp	r4, #0
 80012c6:	d100      	bne.n	80012ca <__aeabi_ddiv+0x2aa>
 80012c8:	e0fa      	b.n	80014c0 <__aeabi_ddiv+0x4a0>
 80012ca:	0020      	movs	r0, r4
 80012cc:	f001 f99a 	bl	8002604 <__clzsi2>
 80012d0:	0002      	movs	r2, r0
 80012d2:	3a0b      	subs	r2, #11
 80012d4:	231d      	movs	r3, #29
 80012d6:	0001      	movs	r1, r0
 80012d8:	1a9b      	subs	r3, r3, r2
 80012da:	4652      	mov	r2, sl
 80012dc:	3908      	subs	r1, #8
 80012de:	40da      	lsrs	r2, r3
 80012e0:	408c      	lsls	r4, r1
 80012e2:	4314      	orrs	r4, r2
 80012e4:	4652      	mov	r2, sl
 80012e6:	408a      	lsls	r2, r1
 80012e8:	4b31      	ldr	r3, [pc, #196]	; (80013b0 <__aeabi_ddiv+0x390>)
 80012ea:	4458      	add	r0, fp
 80012ec:	469b      	mov	fp, r3
 80012ee:	4483      	add	fp, r0
 80012f0:	2000      	movs	r0, #0
 80012f2:	e6d5      	b.n	80010a0 <__aeabi_ddiv+0x80>
 80012f4:	464b      	mov	r3, r9
 80012f6:	4323      	orrs	r3, r4
 80012f8:	4698      	mov	r8, r3
 80012fa:	d044      	beq.n	8001386 <__aeabi_ddiv+0x366>
 80012fc:	2c00      	cmp	r4, #0
 80012fe:	d100      	bne.n	8001302 <__aeabi_ddiv+0x2e2>
 8001300:	e0ce      	b.n	80014a0 <__aeabi_ddiv+0x480>
 8001302:	0020      	movs	r0, r4
 8001304:	f001 f97e 	bl	8002604 <__clzsi2>
 8001308:	0001      	movs	r1, r0
 800130a:	0002      	movs	r2, r0
 800130c:	390b      	subs	r1, #11
 800130e:	231d      	movs	r3, #29
 8001310:	1a5b      	subs	r3, r3, r1
 8001312:	4649      	mov	r1, r9
 8001314:	0010      	movs	r0, r2
 8001316:	40d9      	lsrs	r1, r3
 8001318:	3808      	subs	r0, #8
 800131a:	4084      	lsls	r4, r0
 800131c:	000b      	movs	r3, r1
 800131e:	464d      	mov	r5, r9
 8001320:	4323      	orrs	r3, r4
 8001322:	4698      	mov	r8, r3
 8001324:	4085      	lsls	r5, r0
 8001326:	4823      	ldr	r0, [pc, #140]	; (80013b4 <__aeabi_ddiv+0x394>)
 8001328:	1a83      	subs	r3, r0, r2
 800132a:	469b      	mov	fp, r3
 800132c:	2300      	movs	r3, #0
 800132e:	4699      	mov	r9, r3
 8001330:	9300      	str	r3, [sp, #0]
 8001332:	e69a      	b.n	800106a <__aeabi_ddiv+0x4a>
 8001334:	464b      	mov	r3, r9
 8001336:	4323      	orrs	r3, r4
 8001338:	4698      	mov	r8, r3
 800133a:	d11d      	bne.n	8001378 <__aeabi_ddiv+0x358>
 800133c:	2308      	movs	r3, #8
 800133e:	4699      	mov	r9, r3
 8001340:	3b06      	subs	r3, #6
 8001342:	2500      	movs	r5, #0
 8001344:	4683      	mov	fp, r0
 8001346:	9300      	str	r3, [sp, #0]
 8001348:	e68f      	b.n	800106a <__aeabi_ddiv+0x4a>
 800134a:	4652      	mov	r2, sl
 800134c:	4322      	orrs	r2, r4
 800134e:	d109      	bne.n	8001364 <__aeabi_ddiv+0x344>
 8001350:	2302      	movs	r3, #2
 8001352:	4649      	mov	r1, r9
 8001354:	4319      	orrs	r1, r3
 8001356:	4b18      	ldr	r3, [pc, #96]	; (80013b8 <__aeabi_ddiv+0x398>)
 8001358:	4689      	mov	r9, r1
 800135a:	469c      	mov	ip, r3
 800135c:	2400      	movs	r4, #0
 800135e:	2002      	movs	r0, #2
 8001360:	44e3      	add	fp, ip
 8001362:	e69d      	b.n	80010a0 <__aeabi_ddiv+0x80>
 8001364:	2303      	movs	r3, #3
 8001366:	464a      	mov	r2, r9
 8001368:	431a      	orrs	r2, r3
 800136a:	4b13      	ldr	r3, [pc, #76]	; (80013b8 <__aeabi_ddiv+0x398>)
 800136c:	4691      	mov	r9, r2
 800136e:	469c      	mov	ip, r3
 8001370:	4652      	mov	r2, sl
 8001372:	2003      	movs	r0, #3
 8001374:	44e3      	add	fp, ip
 8001376:	e693      	b.n	80010a0 <__aeabi_ddiv+0x80>
 8001378:	230c      	movs	r3, #12
 800137a:	4699      	mov	r9, r3
 800137c:	3b09      	subs	r3, #9
 800137e:	46a0      	mov	r8, r4
 8001380:	4683      	mov	fp, r0
 8001382:	9300      	str	r3, [sp, #0]
 8001384:	e671      	b.n	800106a <__aeabi_ddiv+0x4a>
 8001386:	2304      	movs	r3, #4
 8001388:	4699      	mov	r9, r3
 800138a:	2300      	movs	r3, #0
 800138c:	469b      	mov	fp, r3
 800138e:	3301      	adds	r3, #1
 8001390:	2500      	movs	r5, #0
 8001392:	9300      	str	r3, [sp, #0]
 8001394:	e669      	b.n	800106a <__aeabi_ddiv+0x4a>
 8001396:	46c0      	nop			; (mov r8, r8)
 8001398:	000007ff 	.word	0x000007ff
 800139c:	fffffc01 	.word	0xfffffc01
 80013a0:	080078bc 	.word	0x080078bc
 80013a4:	000003ff 	.word	0x000003ff
 80013a8:	feffffff 	.word	0xfeffffff
 80013ac:	000007fe 	.word	0x000007fe
 80013b0:	000003f3 	.word	0x000003f3
 80013b4:	fffffc0d 	.word	0xfffffc0d
 80013b8:	fffff801 	.word	0xfffff801
 80013bc:	4649      	mov	r1, r9
 80013be:	2301      	movs	r3, #1
 80013c0:	4319      	orrs	r1, r3
 80013c2:	4689      	mov	r9, r1
 80013c4:	2400      	movs	r4, #0
 80013c6:	2001      	movs	r0, #1
 80013c8:	e66a      	b.n	80010a0 <__aeabi_ddiv+0x80>
 80013ca:	2300      	movs	r3, #0
 80013cc:	2480      	movs	r4, #128	; 0x80
 80013ce:	469a      	mov	sl, r3
 80013d0:	2500      	movs	r5, #0
 80013d2:	4b8a      	ldr	r3, [pc, #552]	; (80015fc <__aeabi_ddiv+0x5dc>)
 80013d4:	0324      	lsls	r4, r4, #12
 80013d6:	e67a      	b.n	80010ce <__aeabi_ddiv+0xae>
 80013d8:	2501      	movs	r5, #1
 80013da:	426d      	negs	r5, r5
 80013dc:	2301      	movs	r3, #1
 80013de:	1a9b      	subs	r3, r3, r2
 80013e0:	2b38      	cmp	r3, #56	; 0x38
 80013e2:	dd00      	ble.n	80013e6 <__aeabi_ddiv+0x3c6>
 80013e4:	e670      	b.n	80010c8 <__aeabi_ddiv+0xa8>
 80013e6:	2b1f      	cmp	r3, #31
 80013e8:	dc00      	bgt.n	80013ec <__aeabi_ddiv+0x3cc>
 80013ea:	e0bf      	b.n	800156c <__aeabi_ddiv+0x54c>
 80013ec:	211f      	movs	r1, #31
 80013ee:	4249      	negs	r1, r1
 80013f0:	1a8a      	subs	r2, r1, r2
 80013f2:	4641      	mov	r1, r8
 80013f4:	40d1      	lsrs	r1, r2
 80013f6:	000a      	movs	r2, r1
 80013f8:	2b20      	cmp	r3, #32
 80013fa:	d004      	beq.n	8001406 <__aeabi_ddiv+0x3e6>
 80013fc:	4641      	mov	r1, r8
 80013fe:	4b80      	ldr	r3, [pc, #512]	; (8001600 <__aeabi_ddiv+0x5e0>)
 8001400:	445b      	add	r3, fp
 8001402:	4099      	lsls	r1, r3
 8001404:	430d      	orrs	r5, r1
 8001406:	1e6b      	subs	r3, r5, #1
 8001408:	419d      	sbcs	r5, r3
 800140a:	2307      	movs	r3, #7
 800140c:	432a      	orrs	r2, r5
 800140e:	001d      	movs	r5, r3
 8001410:	2400      	movs	r4, #0
 8001412:	4015      	ands	r5, r2
 8001414:	4213      	tst	r3, r2
 8001416:	d100      	bne.n	800141a <__aeabi_ddiv+0x3fa>
 8001418:	e0d4      	b.n	80015c4 <__aeabi_ddiv+0x5a4>
 800141a:	210f      	movs	r1, #15
 800141c:	2300      	movs	r3, #0
 800141e:	4011      	ands	r1, r2
 8001420:	2904      	cmp	r1, #4
 8001422:	d100      	bne.n	8001426 <__aeabi_ddiv+0x406>
 8001424:	e0cb      	b.n	80015be <__aeabi_ddiv+0x59e>
 8001426:	1d11      	adds	r1, r2, #4
 8001428:	4291      	cmp	r1, r2
 800142a:	4192      	sbcs	r2, r2
 800142c:	4252      	negs	r2, r2
 800142e:	189b      	adds	r3, r3, r2
 8001430:	000a      	movs	r2, r1
 8001432:	0219      	lsls	r1, r3, #8
 8001434:	d400      	bmi.n	8001438 <__aeabi_ddiv+0x418>
 8001436:	e0c2      	b.n	80015be <__aeabi_ddiv+0x59e>
 8001438:	2301      	movs	r3, #1
 800143a:	2400      	movs	r4, #0
 800143c:	2500      	movs	r5, #0
 800143e:	e646      	b.n	80010ce <__aeabi_ddiv+0xae>
 8001440:	2380      	movs	r3, #128	; 0x80
 8001442:	4641      	mov	r1, r8
 8001444:	031b      	lsls	r3, r3, #12
 8001446:	4219      	tst	r1, r3
 8001448:	d008      	beq.n	800145c <__aeabi_ddiv+0x43c>
 800144a:	421c      	tst	r4, r3
 800144c:	d106      	bne.n	800145c <__aeabi_ddiv+0x43c>
 800144e:	431c      	orrs	r4, r3
 8001450:	0324      	lsls	r4, r4, #12
 8001452:	46ba      	mov	sl, r7
 8001454:	0015      	movs	r5, r2
 8001456:	4b69      	ldr	r3, [pc, #420]	; (80015fc <__aeabi_ddiv+0x5dc>)
 8001458:	0b24      	lsrs	r4, r4, #12
 800145a:	e638      	b.n	80010ce <__aeabi_ddiv+0xae>
 800145c:	2480      	movs	r4, #128	; 0x80
 800145e:	4643      	mov	r3, r8
 8001460:	0324      	lsls	r4, r4, #12
 8001462:	431c      	orrs	r4, r3
 8001464:	0324      	lsls	r4, r4, #12
 8001466:	46b2      	mov	sl, r6
 8001468:	4b64      	ldr	r3, [pc, #400]	; (80015fc <__aeabi_ddiv+0x5dc>)
 800146a:	0b24      	lsrs	r4, r4, #12
 800146c:	e62f      	b.n	80010ce <__aeabi_ddiv+0xae>
 800146e:	2b00      	cmp	r3, #0
 8001470:	d100      	bne.n	8001474 <__aeabi_ddiv+0x454>
 8001472:	e703      	b.n	800127c <__aeabi_ddiv+0x25c>
 8001474:	19a6      	adds	r6, r4, r6
 8001476:	1e68      	subs	r0, r5, #1
 8001478:	42a6      	cmp	r6, r4
 800147a:	d200      	bcs.n	800147e <__aeabi_ddiv+0x45e>
 800147c:	e08d      	b.n	800159a <__aeabi_ddiv+0x57a>
 800147e:	428e      	cmp	r6, r1
 8001480:	d200      	bcs.n	8001484 <__aeabi_ddiv+0x464>
 8001482:	e0a3      	b.n	80015cc <__aeabi_ddiv+0x5ac>
 8001484:	d100      	bne.n	8001488 <__aeabi_ddiv+0x468>
 8001486:	e0b3      	b.n	80015f0 <__aeabi_ddiv+0x5d0>
 8001488:	0005      	movs	r5, r0
 800148a:	e6f5      	b.n	8001278 <__aeabi_ddiv+0x258>
 800148c:	42aa      	cmp	r2, r5
 800148e:	d900      	bls.n	8001492 <__aeabi_ddiv+0x472>
 8001490:	e639      	b.n	8001106 <__aeabi_ddiv+0xe6>
 8001492:	4643      	mov	r3, r8
 8001494:	07de      	lsls	r6, r3, #31
 8001496:	0858      	lsrs	r0, r3, #1
 8001498:	086b      	lsrs	r3, r5, #1
 800149a:	431e      	orrs	r6, r3
 800149c:	07ed      	lsls	r5, r5, #31
 800149e:	e639      	b.n	8001114 <__aeabi_ddiv+0xf4>
 80014a0:	4648      	mov	r0, r9
 80014a2:	f001 f8af 	bl	8002604 <__clzsi2>
 80014a6:	0001      	movs	r1, r0
 80014a8:	0002      	movs	r2, r0
 80014aa:	3115      	adds	r1, #21
 80014ac:	3220      	adds	r2, #32
 80014ae:	291c      	cmp	r1, #28
 80014b0:	dc00      	bgt.n	80014b4 <__aeabi_ddiv+0x494>
 80014b2:	e72c      	b.n	800130e <__aeabi_ddiv+0x2ee>
 80014b4:	464b      	mov	r3, r9
 80014b6:	3808      	subs	r0, #8
 80014b8:	4083      	lsls	r3, r0
 80014ba:	2500      	movs	r5, #0
 80014bc:	4698      	mov	r8, r3
 80014be:	e732      	b.n	8001326 <__aeabi_ddiv+0x306>
 80014c0:	f001 f8a0 	bl	8002604 <__clzsi2>
 80014c4:	0003      	movs	r3, r0
 80014c6:	001a      	movs	r2, r3
 80014c8:	3215      	adds	r2, #21
 80014ca:	3020      	adds	r0, #32
 80014cc:	2a1c      	cmp	r2, #28
 80014ce:	dc00      	bgt.n	80014d2 <__aeabi_ddiv+0x4b2>
 80014d0:	e700      	b.n	80012d4 <__aeabi_ddiv+0x2b4>
 80014d2:	4654      	mov	r4, sl
 80014d4:	3b08      	subs	r3, #8
 80014d6:	2200      	movs	r2, #0
 80014d8:	409c      	lsls	r4, r3
 80014da:	e705      	b.n	80012e8 <__aeabi_ddiv+0x2c8>
 80014dc:	1936      	adds	r6, r6, r4
 80014de:	3b01      	subs	r3, #1
 80014e0:	42b4      	cmp	r4, r6
 80014e2:	d900      	bls.n	80014e6 <__aeabi_ddiv+0x4c6>
 80014e4:	e6a6      	b.n	8001234 <__aeabi_ddiv+0x214>
 80014e6:	42b2      	cmp	r2, r6
 80014e8:	d800      	bhi.n	80014ec <__aeabi_ddiv+0x4cc>
 80014ea:	e6a3      	b.n	8001234 <__aeabi_ddiv+0x214>
 80014ec:	1e83      	subs	r3, r0, #2
 80014ee:	1936      	adds	r6, r6, r4
 80014f0:	e6a0      	b.n	8001234 <__aeabi_ddiv+0x214>
 80014f2:	1909      	adds	r1, r1, r4
 80014f4:	3d01      	subs	r5, #1
 80014f6:	428c      	cmp	r4, r1
 80014f8:	d900      	bls.n	80014fc <__aeabi_ddiv+0x4dc>
 80014fa:	e68d      	b.n	8001218 <__aeabi_ddiv+0x1f8>
 80014fc:	428a      	cmp	r2, r1
 80014fe:	d800      	bhi.n	8001502 <__aeabi_ddiv+0x4e2>
 8001500:	e68a      	b.n	8001218 <__aeabi_ddiv+0x1f8>
 8001502:	1e85      	subs	r5, r0, #2
 8001504:	1909      	adds	r1, r1, r4
 8001506:	e687      	b.n	8001218 <__aeabi_ddiv+0x1f8>
 8001508:	230f      	movs	r3, #15
 800150a:	402b      	ands	r3, r5
 800150c:	2b04      	cmp	r3, #4
 800150e:	d100      	bne.n	8001512 <__aeabi_ddiv+0x4f2>
 8001510:	e6bc      	b.n	800128c <__aeabi_ddiv+0x26c>
 8001512:	2305      	movs	r3, #5
 8001514:	425b      	negs	r3, r3
 8001516:	42ab      	cmp	r3, r5
 8001518:	419b      	sbcs	r3, r3
 800151a:	3504      	adds	r5, #4
 800151c:	425b      	negs	r3, r3
 800151e:	08ed      	lsrs	r5, r5, #3
 8001520:	4498      	add	r8, r3
 8001522:	e6b4      	b.n	800128e <__aeabi_ddiv+0x26e>
 8001524:	42af      	cmp	r7, r5
 8001526:	d900      	bls.n	800152a <__aeabi_ddiv+0x50a>
 8001528:	e660      	b.n	80011ec <__aeabi_ddiv+0x1cc>
 800152a:	4282      	cmp	r2, r0
 800152c:	d804      	bhi.n	8001538 <__aeabi_ddiv+0x518>
 800152e:	d000      	beq.n	8001532 <__aeabi_ddiv+0x512>
 8001530:	e65c      	b.n	80011ec <__aeabi_ddiv+0x1cc>
 8001532:	42ae      	cmp	r6, r5
 8001534:	d800      	bhi.n	8001538 <__aeabi_ddiv+0x518>
 8001536:	e659      	b.n	80011ec <__aeabi_ddiv+0x1cc>
 8001538:	2302      	movs	r3, #2
 800153a:	425b      	negs	r3, r3
 800153c:	469c      	mov	ip, r3
 800153e:	9b00      	ldr	r3, [sp, #0]
 8001540:	44e0      	add	r8, ip
 8001542:	469c      	mov	ip, r3
 8001544:	4465      	add	r5, ip
 8001546:	429d      	cmp	r5, r3
 8001548:	419b      	sbcs	r3, r3
 800154a:	425b      	negs	r3, r3
 800154c:	191b      	adds	r3, r3, r4
 800154e:	18c0      	adds	r0, r0, r3
 8001550:	e64d      	b.n	80011ee <__aeabi_ddiv+0x1ce>
 8001552:	428a      	cmp	r2, r1
 8001554:	d800      	bhi.n	8001558 <__aeabi_ddiv+0x538>
 8001556:	e60e      	b.n	8001176 <__aeabi_ddiv+0x156>
 8001558:	1e83      	subs	r3, r0, #2
 800155a:	1909      	adds	r1, r1, r4
 800155c:	e60b      	b.n	8001176 <__aeabi_ddiv+0x156>
 800155e:	428a      	cmp	r2, r1
 8001560:	d800      	bhi.n	8001564 <__aeabi_ddiv+0x544>
 8001562:	e5f4      	b.n	800114e <__aeabi_ddiv+0x12e>
 8001564:	1e83      	subs	r3, r0, #2
 8001566:	4698      	mov	r8, r3
 8001568:	1909      	adds	r1, r1, r4
 800156a:	e5f0      	b.n	800114e <__aeabi_ddiv+0x12e>
 800156c:	4925      	ldr	r1, [pc, #148]	; (8001604 <__aeabi_ddiv+0x5e4>)
 800156e:	0028      	movs	r0, r5
 8001570:	4459      	add	r1, fp
 8001572:	408d      	lsls	r5, r1
 8001574:	4642      	mov	r2, r8
 8001576:	408a      	lsls	r2, r1
 8001578:	1e69      	subs	r1, r5, #1
 800157a:	418d      	sbcs	r5, r1
 800157c:	4641      	mov	r1, r8
 800157e:	40d8      	lsrs	r0, r3
 8001580:	40d9      	lsrs	r1, r3
 8001582:	4302      	orrs	r2, r0
 8001584:	432a      	orrs	r2, r5
 8001586:	000b      	movs	r3, r1
 8001588:	0751      	lsls	r1, r2, #29
 800158a:	d100      	bne.n	800158e <__aeabi_ddiv+0x56e>
 800158c:	e751      	b.n	8001432 <__aeabi_ddiv+0x412>
 800158e:	210f      	movs	r1, #15
 8001590:	4011      	ands	r1, r2
 8001592:	2904      	cmp	r1, #4
 8001594:	d000      	beq.n	8001598 <__aeabi_ddiv+0x578>
 8001596:	e746      	b.n	8001426 <__aeabi_ddiv+0x406>
 8001598:	e74b      	b.n	8001432 <__aeabi_ddiv+0x412>
 800159a:	0005      	movs	r5, r0
 800159c:	428e      	cmp	r6, r1
 800159e:	d000      	beq.n	80015a2 <__aeabi_ddiv+0x582>
 80015a0:	e66a      	b.n	8001278 <__aeabi_ddiv+0x258>
 80015a2:	9a00      	ldr	r2, [sp, #0]
 80015a4:	4293      	cmp	r3, r2
 80015a6:	d000      	beq.n	80015aa <__aeabi_ddiv+0x58a>
 80015a8:	e666      	b.n	8001278 <__aeabi_ddiv+0x258>
 80015aa:	e667      	b.n	800127c <__aeabi_ddiv+0x25c>
 80015ac:	4a16      	ldr	r2, [pc, #88]	; (8001608 <__aeabi_ddiv+0x5e8>)
 80015ae:	445a      	add	r2, fp
 80015b0:	2a00      	cmp	r2, #0
 80015b2:	dc00      	bgt.n	80015b6 <__aeabi_ddiv+0x596>
 80015b4:	e710      	b.n	80013d8 <__aeabi_ddiv+0x3b8>
 80015b6:	2301      	movs	r3, #1
 80015b8:	2500      	movs	r5, #0
 80015ba:	4498      	add	r8, r3
 80015bc:	e667      	b.n	800128e <__aeabi_ddiv+0x26e>
 80015be:	075d      	lsls	r5, r3, #29
 80015c0:	025b      	lsls	r3, r3, #9
 80015c2:	0b1c      	lsrs	r4, r3, #12
 80015c4:	08d2      	lsrs	r2, r2, #3
 80015c6:	2300      	movs	r3, #0
 80015c8:	4315      	orrs	r5, r2
 80015ca:	e580      	b.n	80010ce <__aeabi_ddiv+0xae>
 80015cc:	9800      	ldr	r0, [sp, #0]
 80015ce:	3d02      	subs	r5, #2
 80015d0:	0042      	lsls	r2, r0, #1
 80015d2:	4282      	cmp	r2, r0
 80015d4:	41bf      	sbcs	r7, r7
 80015d6:	427f      	negs	r7, r7
 80015d8:	193c      	adds	r4, r7, r4
 80015da:	1936      	adds	r6, r6, r4
 80015dc:	9200      	str	r2, [sp, #0]
 80015de:	e7dd      	b.n	800159c <__aeabi_ddiv+0x57c>
 80015e0:	2480      	movs	r4, #128	; 0x80
 80015e2:	4643      	mov	r3, r8
 80015e4:	0324      	lsls	r4, r4, #12
 80015e6:	431c      	orrs	r4, r3
 80015e8:	0324      	lsls	r4, r4, #12
 80015ea:	4b04      	ldr	r3, [pc, #16]	; (80015fc <__aeabi_ddiv+0x5dc>)
 80015ec:	0b24      	lsrs	r4, r4, #12
 80015ee:	e56e      	b.n	80010ce <__aeabi_ddiv+0xae>
 80015f0:	9a00      	ldr	r2, [sp, #0]
 80015f2:	429a      	cmp	r2, r3
 80015f4:	d3ea      	bcc.n	80015cc <__aeabi_ddiv+0x5ac>
 80015f6:	0005      	movs	r5, r0
 80015f8:	e7d3      	b.n	80015a2 <__aeabi_ddiv+0x582>
 80015fa:	46c0      	nop			; (mov r8, r8)
 80015fc:	000007ff 	.word	0x000007ff
 8001600:	0000043e 	.word	0x0000043e
 8001604:	0000041e 	.word	0x0000041e
 8001608:	000003ff 	.word	0x000003ff

0800160c <__eqdf2>:
 800160c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800160e:	464e      	mov	r6, r9
 8001610:	4645      	mov	r5, r8
 8001612:	46de      	mov	lr, fp
 8001614:	4657      	mov	r7, sl
 8001616:	4690      	mov	r8, r2
 8001618:	b5e0      	push	{r5, r6, r7, lr}
 800161a:	0017      	movs	r7, r2
 800161c:	031a      	lsls	r2, r3, #12
 800161e:	0b12      	lsrs	r2, r2, #12
 8001620:	0005      	movs	r5, r0
 8001622:	4684      	mov	ip, r0
 8001624:	4819      	ldr	r0, [pc, #100]	; (800168c <__eqdf2+0x80>)
 8001626:	030e      	lsls	r6, r1, #12
 8001628:	004c      	lsls	r4, r1, #1
 800162a:	4691      	mov	r9, r2
 800162c:	005a      	lsls	r2, r3, #1
 800162e:	0fdb      	lsrs	r3, r3, #31
 8001630:	469b      	mov	fp, r3
 8001632:	0b36      	lsrs	r6, r6, #12
 8001634:	0d64      	lsrs	r4, r4, #21
 8001636:	0fc9      	lsrs	r1, r1, #31
 8001638:	0d52      	lsrs	r2, r2, #21
 800163a:	4284      	cmp	r4, r0
 800163c:	d019      	beq.n	8001672 <__eqdf2+0x66>
 800163e:	4282      	cmp	r2, r0
 8001640:	d010      	beq.n	8001664 <__eqdf2+0x58>
 8001642:	2001      	movs	r0, #1
 8001644:	4294      	cmp	r4, r2
 8001646:	d10e      	bne.n	8001666 <__eqdf2+0x5a>
 8001648:	454e      	cmp	r6, r9
 800164a:	d10c      	bne.n	8001666 <__eqdf2+0x5a>
 800164c:	2001      	movs	r0, #1
 800164e:	45c4      	cmp	ip, r8
 8001650:	d109      	bne.n	8001666 <__eqdf2+0x5a>
 8001652:	4559      	cmp	r1, fp
 8001654:	d017      	beq.n	8001686 <__eqdf2+0x7a>
 8001656:	2c00      	cmp	r4, #0
 8001658:	d105      	bne.n	8001666 <__eqdf2+0x5a>
 800165a:	0030      	movs	r0, r6
 800165c:	4328      	orrs	r0, r5
 800165e:	1e43      	subs	r3, r0, #1
 8001660:	4198      	sbcs	r0, r3
 8001662:	e000      	b.n	8001666 <__eqdf2+0x5a>
 8001664:	2001      	movs	r0, #1
 8001666:	bcf0      	pop	{r4, r5, r6, r7}
 8001668:	46bb      	mov	fp, r7
 800166a:	46b2      	mov	sl, r6
 800166c:	46a9      	mov	r9, r5
 800166e:	46a0      	mov	r8, r4
 8001670:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001672:	0033      	movs	r3, r6
 8001674:	2001      	movs	r0, #1
 8001676:	432b      	orrs	r3, r5
 8001678:	d1f5      	bne.n	8001666 <__eqdf2+0x5a>
 800167a:	42a2      	cmp	r2, r4
 800167c:	d1f3      	bne.n	8001666 <__eqdf2+0x5a>
 800167e:	464b      	mov	r3, r9
 8001680:	433b      	orrs	r3, r7
 8001682:	d1f0      	bne.n	8001666 <__eqdf2+0x5a>
 8001684:	e7e2      	b.n	800164c <__eqdf2+0x40>
 8001686:	2000      	movs	r0, #0
 8001688:	e7ed      	b.n	8001666 <__eqdf2+0x5a>
 800168a:	46c0      	nop			; (mov r8, r8)
 800168c:	000007ff 	.word	0x000007ff

08001690 <__gedf2>:
 8001690:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001692:	4647      	mov	r7, r8
 8001694:	46ce      	mov	lr, r9
 8001696:	0004      	movs	r4, r0
 8001698:	0018      	movs	r0, r3
 800169a:	0016      	movs	r6, r2
 800169c:	031b      	lsls	r3, r3, #12
 800169e:	0b1b      	lsrs	r3, r3, #12
 80016a0:	4d2d      	ldr	r5, [pc, #180]	; (8001758 <__gedf2+0xc8>)
 80016a2:	004a      	lsls	r2, r1, #1
 80016a4:	4699      	mov	r9, r3
 80016a6:	b580      	push	{r7, lr}
 80016a8:	0043      	lsls	r3, r0, #1
 80016aa:	030f      	lsls	r7, r1, #12
 80016ac:	46a4      	mov	ip, r4
 80016ae:	46b0      	mov	r8, r6
 80016b0:	0b3f      	lsrs	r7, r7, #12
 80016b2:	0d52      	lsrs	r2, r2, #21
 80016b4:	0fc9      	lsrs	r1, r1, #31
 80016b6:	0d5b      	lsrs	r3, r3, #21
 80016b8:	0fc0      	lsrs	r0, r0, #31
 80016ba:	42aa      	cmp	r2, r5
 80016bc:	d021      	beq.n	8001702 <__gedf2+0x72>
 80016be:	42ab      	cmp	r3, r5
 80016c0:	d013      	beq.n	80016ea <__gedf2+0x5a>
 80016c2:	2a00      	cmp	r2, #0
 80016c4:	d122      	bne.n	800170c <__gedf2+0x7c>
 80016c6:	433c      	orrs	r4, r7
 80016c8:	2b00      	cmp	r3, #0
 80016ca:	d102      	bne.n	80016d2 <__gedf2+0x42>
 80016cc:	464d      	mov	r5, r9
 80016ce:	432e      	orrs	r6, r5
 80016d0:	d022      	beq.n	8001718 <__gedf2+0x88>
 80016d2:	2c00      	cmp	r4, #0
 80016d4:	d010      	beq.n	80016f8 <__gedf2+0x68>
 80016d6:	4281      	cmp	r1, r0
 80016d8:	d022      	beq.n	8001720 <__gedf2+0x90>
 80016da:	2002      	movs	r0, #2
 80016dc:	3901      	subs	r1, #1
 80016de:	4008      	ands	r0, r1
 80016e0:	3801      	subs	r0, #1
 80016e2:	bcc0      	pop	{r6, r7}
 80016e4:	46b9      	mov	r9, r7
 80016e6:	46b0      	mov	r8, r6
 80016e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016ea:	464d      	mov	r5, r9
 80016ec:	432e      	orrs	r6, r5
 80016ee:	d129      	bne.n	8001744 <__gedf2+0xb4>
 80016f0:	2a00      	cmp	r2, #0
 80016f2:	d1f0      	bne.n	80016d6 <__gedf2+0x46>
 80016f4:	433c      	orrs	r4, r7
 80016f6:	d1ee      	bne.n	80016d6 <__gedf2+0x46>
 80016f8:	2800      	cmp	r0, #0
 80016fa:	d1f2      	bne.n	80016e2 <__gedf2+0x52>
 80016fc:	2001      	movs	r0, #1
 80016fe:	4240      	negs	r0, r0
 8001700:	e7ef      	b.n	80016e2 <__gedf2+0x52>
 8001702:	003d      	movs	r5, r7
 8001704:	4325      	orrs	r5, r4
 8001706:	d11d      	bne.n	8001744 <__gedf2+0xb4>
 8001708:	4293      	cmp	r3, r2
 800170a:	d0ee      	beq.n	80016ea <__gedf2+0x5a>
 800170c:	2b00      	cmp	r3, #0
 800170e:	d1e2      	bne.n	80016d6 <__gedf2+0x46>
 8001710:	464c      	mov	r4, r9
 8001712:	4326      	orrs	r6, r4
 8001714:	d1df      	bne.n	80016d6 <__gedf2+0x46>
 8001716:	e7e0      	b.n	80016da <__gedf2+0x4a>
 8001718:	2000      	movs	r0, #0
 800171a:	2c00      	cmp	r4, #0
 800171c:	d0e1      	beq.n	80016e2 <__gedf2+0x52>
 800171e:	e7dc      	b.n	80016da <__gedf2+0x4a>
 8001720:	429a      	cmp	r2, r3
 8001722:	dc0a      	bgt.n	800173a <__gedf2+0xaa>
 8001724:	dbe8      	blt.n	80016f8 <__gedf2+0x68>
 8001726:	454f      	cmp	r7, r9
 8001728:	d8d7      	bhi.n	80016da <__gedf2+0x4a>
 800172a:	d00e      	beq.n	800174a <__gedf2+0xba>
 800172c:	2000      	movs	r0, #0
 800172e:	454f      	cmp	r7, r9
 8001730:	d2d7      	bcs.n	80016e2 <__gedf2+0x52>
 8001732:	2900      	cmp	r1, #0
 8001734:	d0e2      	beq.n	80016fc <__gedf2+0x6c>
 8001736:	0008      	movs	r0, r1
 8001738:	e7d3      	b.n	80016e2 <__gedf2+0x52>
 800173a:	4243      	negs	r3, r0
 800173c:	4158      	adcs	r0, r3
 800173e:	0040      	lsls	r0, r0, #1
 8001740:	3801      	subs	r0, #1
 8001742:	e7ce      	b.n	80016e2 <__gedf2+0x52>
 8001744:	2002      	movs	r0, #2
 8001746:	4240      	negs	r0, r0
 8001748:	e7cb      	b.n	80016e2 <__gedf2+0x52>
 800174a:	45c4      	cmp	ip, r8
 800174c:	d8c5      	bhi.n	80016da <__gedf2+0x4a>
 800174e:	2000      	movs	r0, #0
 8001750:	45c4      	cmp	ip, r8
 8001752:	d2c6      	bcs.n	80016e2 <__gedf2+0x52>
 8001754:	e7ed      	b.n	8001732 <__gedf2+0xa2>
 8001756:	46c0      	nop			; (mov r8, r8)
 8001758:	000007ff 	.word	0x000007ff

0800175c <__ledf2>:
 800175c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800175e:	4647      	mov	r7, r8
 8001760:	46ce      	mov	lr, r9
 8001762:	0004      	movs	r4, r0
 8001764:	0018      	movs	r0, r3
 8001766:	0016      	movs	r6, r2
 8001768:	031b      	lsls	r3, r3, #12
 800176a:	0b1b      	lsrs	r3, r3, #12
 800176c:	4d2c      	ldr	r5, [pc, #176]	; (8001820 <__ledf2+0xc4>)
 800176e:	004a      	lsls	r2, r1, #1
 8001770:	4699      	mov	r9, r3
 8001772:	b580      	push	{r7, lr}
 8001774:	0043      	lsls	r3, r0, #1
 8001776:	030f      	lsls	r7, r1, #12
 8001778:	46a4      	mov	ip, r4
 800177a:	46b0      	mov	r8, r6
 800177c:	0b3f      	lsrs	r7, r7, #12
 800177e:	0d52      	lsrs	r2, r2, #21
 8001780:	0fc9      	lsrs	r1, r1, #31
 8001782:	0d5b      	lsrs	r3, r3, #21
 8001784:	0fc0      	lsrs	r0, r0, #31
 8001786:	42aa      	cmp	r2, r5
 8001788:	d00d      	beq.n	80017a6 <__ledf2+0x4a>
 800178a:	42ab      	cmp	r3, r5
 800178c:	d010      	beq.n	80017b0 <__ledf2+0x54>
 800178e:	2a00      	cmp	r2, #0
 8001790:	d127      	bne.n	80017e2 <__ledf2+0x86>
 8001792:	433c      	orrs	r4, r7
 8001794:	2b00      	cmp	r3, #0
 8001796:	d111      	bne.n	80017bc <__ledf2+0x60>
 8001798:	464d      	mov	r5, r9
 800179a:	432e      	orrs	r6, r5
 800179c:	d10e      	bne.n	80017bc <__ledf2+0x60>
 800179e:	2000      	movs	r0, #0
 80017a0:	2c00      	cmp	r4, #0
 80017a2:	d015      	beq.n	80017d0 <__ledf2+0x74>
 80017a4:	e00e      	b.n	80017c4 <__ledf2+0x68>
 80017a6:	003d      	movs	r5, r7
 80017a8:	4325      	orrs	r5, r4
 80017aa:	d110      	bne.n	80017ce <__ledf2+0x72>
 80017ac:	4293      	cmp	r3, r2
 80017ae:	d118      	bne.n	80017e2 <__ledf2+0x86>
 80017b0:	464d      	mov	r5, r9
 80017b2:	432e      	orrs	r6, r5
 80017b4:	d10b      	bne.n	80017ce <__ledf2+0x72>
 80017b6:	2a00      	cmp	r2, #0
 80017b8:	d102      	bne.n	80017c0 <__ledf2+0x64>
 80017ba:	433c      	orrs	r4, r7
 80017bc:	2c00      	cmp	r4, #0
 80017be:	d00b      	beq.n	80017d8 <__ledf2+0x7c>
 80017c0:	4281      	cmp	r1, r0
 80017c2:	d014      	beq.n	80017ee <__ledf2+0x92>
 80017c4:	2002      	movs	r0, #2
 80017c6:	3901      	subs	r1, #1
 80017c8:	4008      	ands	r0, r1
 80017ca:	3801      	subs	r0, #1
 80017cc:	e000      	b.n	80017d0 <__ledf2+0x74>
 80017ce:	2002      	movs	r0, #2
 80017d0:	bcc0      	pop	{r6, r7}
 80017d2:	46b9      	mov	r9, r7
 80017d4:	46b0      	mov	r8, r6
 80017d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017d8:	2800      	cmp	r0, #0
 80017da:	d1f9      	bne.n	80017d0 <__ledf2+0x74>
 80017dc:	2001      	movs	r0, #1
 80017de:	4240      	negs	r0, r0
 80017e0:	e7f6      	b.n	80017d0 <__ledf2+0x74>
 80017e2:	2b00      	cmp	r3, #0
 80017e4:	d1ec      	bne.n	80017c0 <__ledf2+0x64>
 80017e6:	464c      	mov	r4, r9
 80017e8:	4326      	orrs	r6, r4
 80017ea:	d1e9      	bne.n	80017c0 <__ledf2+0x64>
 80017ec:	e7ea      	b.n	80017c4 <__ledf2+0x68>
 80017ee:	429a      	cmp	r2, r3
 80017f0:	dd04      	ble.n	80017fc <__ledf2+0xa0>
 80017f2:	4243      	negs	r3, r0
 80017f4:	4158      	adcs	r0, r3
 80017f6:	0040      	lsls	r0, r0, #1
 80017f8:	3801      	subs	r0, #1
 80017fa:	e7e9      	b.n	80017d0 <__ledf2+0x74>
 80017fc:	429a      	cmp	r2, r3
 80017fe:	dbeb      	blt.n	80017d8 <__ledf2+0x7c>
 8001800:	454f      	cmp	r7, r9
 8001802:	d8df      	bhi.n	80017c4 <__ledf2+0x68>
 8001804:	d006      	beq.n	8001814 <__ledf2+0xb8>
 8001806:	2000      	movs	r0, #0
 8001808:	454f      	cmp	r7, r9
 800180a:	d2e1      	bcs.n	80017d0 <__ledf2+0x74>
 800180c:	2900      	cmp	r1, #0
 800180e:	d0e5      	beq.n	80017dc <__ledf2+0x80>
 8001810:	0008      	movs	r0, r1
 8001812:	e7dd      	b.n	80017d0 <__ledf2+0x74>
 8001814:	45c4      	cmp	ip, r8
 8001816:	d8d5      	bhi.n	80017c4 <__ledf2+0x68>
 8001818:	2000      	movs	r0, #0
 800181a:	45c4      	cmp	ip, r8
 800181c:	d2d8      	bcs.n	80017d0 <__ledf2+0x74>
 800181e:	e7f5      	b.n	800180c <__ledf2+0xb0>
 8001820:	000007ff 	.word	0x000007ff

08001824 <__aeabi_dmul>:
 8001824:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001826:	4657      	mov	r7, sl
 8001828:	464e      	mov	r6, r9
 800182a:	4645      	mov	r5, r8
 800182c:	46de      	mov	lr, fp
 800182e:	b5e0      	push	{r5, r6, r7, lr}
 8001830:	4698      	mov	r8, r3
 8001832:	030c      	lsls	r4, r1, #12
 8001834:	004b      	lsls	r3, r1, #1
 8001836:	0006      	movs	r6, r0
 8001838:	4692      	mov	sl, r2
 800183a:	b087      	sub	sp, #28
 800183c:	0b24      	lsrs	r4, r4, #12
 800183e:	0d5b      	lsrs	r3, r3, #21
 8001840:	0fcf      	lsrs	r7, r1, #31
 8001842:	2b00      	cmp	r3, #0
 8001844:	d100      	bne.n	8001848 <__aeabi_dmul+0x24>
 8001846:	e15c      	b.n	8001b02 <__aeabi_dmul+0x2de>
 8001848:	4ad9      	ldr	r2, [pc, #868]	; (8001bb0 <__aeabi_dmul+0x38c>)
 800184a:	4293      	cmp	r3, r2
 800184c:	d100      	bne.n	8001850 <__aeabi_dmul+0x2c>
 800184e:	e175      	b.n	8001b3c <__aeabi_dmul+0x318>
 8001850:	0f42      	lsrs	r2, r0, #29
 8001852:	00e4      	lsls	r4, r4, #3
 8001854:	4314      	orrs	r4, r2
 8001856:	2280      	movs	r2, #128	; 0x80
 8001858:	0412      	lsls	r2, r2, #16
 800185a:	4314      	orrs	r4, r2
 800185c:	4ad5      	ldr	r2, [pc, #852]	; (8001bb4 <__aeabi_dmul+0x390>)
 800185e:	00c5      	lsls	r5, r0, #3
 8001860:	4694      	mov	ip, r2
 8001862:	4463      	add	r3, ip
 8001864:	9300      	str	r3, [sp, #0]
 8001866:	2300      	movs	r3, #0
 8001868:	4699      	mov	r9, r3
 800186a:	469b      	mov	fp, r3
 800186c:	4643      	mov	r3, r8
 800186e:	4642      	mov	r2, r8
 8001870:	031e      	lsls	r6, r3, #12
 8001872:	0fd2      	lsrs	r2, r2, #31
 8001874:	005b      	lsls	r3, r3, #1
 8001876:	4650      	mov	r0, sl
 8001878:	4690      	mov	r8, r2
 800187a:	0b36      	lsrs	r6, r6, #12
 800187c:	0d5b      	lsrs	r3, r3, #21
 800187e:	d100      	bne.n	8001882 <__aeabi_dmul+0x5e>
 8001880:	e120      	b.n	8001ac4 <__aeabi_dmul+0x2a0>
 8001882:	4acb      	ldr	r2, [pc, #812]	; (8001bb0 <__aeabi_dmul+0x38c>)
 8001884:	4293      	cmp	r3, r2
 8001886:	d100      	bne.n	800188a <__aeabi_dmul+0x66>
 8001888:	e162      	b.n	8001b50 <__aeabi_dmul+0x32c>
 800188a:	49ca      	ldr	r1, [pc, #808]	; (8001bb4 <__aeabi_dmul+0x390>)
 800188c:	0f42      	lsrs	r2, r0, #29
 800188e:	468c      	mov	ip, r1
 8001890:	9900      	ldr	r1, [sp, #0]
 8001892:	4463      	add	r3, ip
 8001894:	00f6      	lsls	r6, r6, #3
 8001896:	468c      	mov	ip, r1
 8001898:	4316      	orrs	r6, r2
 800189a:	2280      	movs	r2, #128	; 0x80
 800189c:	449c      	add	ip, r3
 800189e:	0412      	lsls	r2, r2, #16
 80018a0:	4663      	mov	r3, ip
 80018a2:	4316      	orrs	r6, r2
 80018a4:	00c2      	lsls	r2, r0, #3
 80018a6:	2000      	movs	r0, #0
 80018a8:	9300      	str	r3, [sp, #0]
 80018aa:	9900      	ldr	r1, [sp, #0]
 80018ac:	4643      	mov	r3, r8
 80018ae:	3101      	adds	r1, #1
 80018b0:	468c      	mov	ip, r1
 80018b2:	4649      	mov	r1, r9
 80018b4:	407b      	eors	r3, r7
 80018b6:	9301      	str	r3, [sp, #4]
 80018b8:	290f      	cmp	r1, #15
 80018ba:	d826      	bhi.n	800190a <__aeabi_dmul+0xe6>
 80018bc:	4bbe      	ldr	r3, [pc, #760]	; (8001bb8 <__aeabi_dmul+0x394>)
 80018be:	0089      	lsls	r1, r1, #2
 80018c0:	5859      	ldr	r1, [r3, r1]
 80018c2:	468f      	mov	pc, r1
 80018c4:	4643      	mov	r3, r8
 80018c6:	9301      	str	r3, [sp, #4]
 80018c8:	0034      	movs	r4, r6
 80018ca:	0015      	movs	r5, r2
 80018cc:	4683      	mov	fp, r0
 80018ce:	465b      	mov	r3, fp
 80018d0:	2b02      	cmp	r3, #2
 80018d2:	d016      	beq.n	8001902 <__aeabi_dmul+0xde>
 80018d4:	2b03      	cmp	r3, #3
 80018d6:	d100      	bne.n	80018da <__aeabi_dmul+0xb6>
 80018d8:	e203      	b.n	8001ce2 <__aeabi_dmul+0x4be>
 80018da:	2b01      	cmp	r3, #1
 80018dc:	d000      	beq.n	80018e0 <__aeabi_dmul+0xbc>
 80018de:	e0cd      	b.n	8001a7c <__aeabi_dmul+0x258>
 80018e0:	2200      	movs	r2, #0
 80018e2:	2400      	movs	r4, #0
 80018e4:	2500      	movs	r5, #0
 80018e6:	9b01      	ldr	r3, [sp, #4]
 80018e8:	0512      	lsls	r2, r2, #20
 80018ea:	4322      	orrs	r2, r4
 80018ec:	07db      	lsls	r3, r3, #31
 80018ee:	431a      	orrs	r2, r3
 80018f0:	0028      	movs	r0, r5
 80018f2:	0011      	movs	r1, r2
 80018f4:	b007      	add	sp, #28
 80018f6:	bcf0      	pop	{r4, r5, r6, r7}
 80018f8:	46bb      	mov	fp, r7
 80018fa:	46b2      	mov	sl, r6
 80018fc:	46a9      	mov	r9, r5
 80018fe:	46a0      	mov	r8, r4
 8001900:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001902:	2400      	movs	r4, #0
 8001904:	2500      	movs	r5, #0
 8001906:	4aaa      	ldr	r2, [pc, #680]	; (8001bb0 <__aeabi_dmul+0x38c>)
 8001908:	e7ed      	b.n	80018e6 <__aeabi_dmul+0xc2>
 800190a:	0c28      	lsrs	r0, r5, #16
 800190c:	042d      	lsls	r5, r5, #16
 800190e:	0c2d      	lsrs	r5, r5, #16
 8001910:	002b      	movs	r3, r5
 8001912:	0c11      	lsrs	r1, r2, #16
 8001914:	0412      	lsls	r2, r2, #16
 8001916:	0c12      	lsrs	r2, r2, #16
 8001918:	4353      	muls	r3, r2
 800191a:	4698      	mov	r8, r3
 800191c:	0013      	movs	r3, r2
 800191e:	002f      	movs	r7, r5
 8001920:	4343      	muls	r3, r0
 8001922:	4699      	mov	r9, r3
 8001924:	434f      	muls	r7, r1
 8001926:	444f      	add	r7, r9
 8001928:	46bb      	mov	fp, r7
 800192a:	4647      	mov	r7, r8
 800192c:	000b      	movs	r3, r1
 800192e:	0c3f      	lsrs	r7, r7, #16
 8001930:	46ba      	mov	sl, r7
 8001932:	4343      	muls	r3, r0
 8001934:	44da      	add	sl, fp
 8001936:	9302      	str	r3, [sp, #8]
 8001938:	45d1      	cmp	r9, sl
 800193a:	d904      	bls.n	8001946 <__aeabi_dmul+0x122>
 800193c:	2780      	movs	r7, #128	; 0x80
 800193e:	027f      	lsls	r7, r7, #9
 8001940:	46b9      	mov	r9, r7
 8001942:	444b      	add	r3, r9
 8001944:	9302      	str	r3, [sp, #8]
 8001946:	4653      	mov	r3, sl
 8001948:	0c1b      	lsrs	r3, r3, #16
 800194a:	469b      	mov	fp, r3
 800194c:	4653      	mov	r3, sl
 800194e:	041f      	lsls	r7, r3, #16
 8001950:	4643      	mov	r3, r8
 8001952:	041b      	lsls	r3, r3, #16
 8001954:	0c1b      	lsrs	r3, r3, #16
 8001956:	4698      	mov	r8, r3
 8001958:	003b      	movs	r3, r7
 800195a:	4443      	add	r3, r8
 800195c:	9304      	str	r3, [sp, #16]
 800195e:	0c33      	lsrs	r3, r6, #16
 8001960:	0436      	lsls	r6, r6, #16
 8001962:	0c36      	lsrs	r6, r6, #16
 8001964:	4698      	mov	r8, r3
 8001966:	0033      	movs	r3, r6
 8001968:	4343      	muls	r3, r0
 800196a:	4699      	mov	r9, r3
 800196c:	4643      	mov	r3, r8
 800196e:	4343      	muls	r3, r0
 8001970:	002f      	movs	r7, r5
 8001972:	469a      	mov	sl, r3
 8001974:	4643      	mov	r3, r8
 8001976:	4377      	muls	r7, r6
 8001978:	435d      	muls	r5, r3
 800197a:	0c38      	lsrs	r0, r7, #16
 800197c:	444d      	add	r5, r9
 800197e:	1945      	adds	r5, r0, r5
 8001980:	45a9      	cmp	r9, r5
 8001982:	d903      	bls.n	800198c <__aeabi_dmul+0x168>
 8001984:	2380      	movs	r3, #128	; 0x80
 8001986:	025b      	lsls	r3, r3, #9
 8001988:	4699      	mov	r9, r3
 800198a:	44ca      	add	sl, r9
 800198c:	043f      	lsls	r7, r7, #16
 800198e:	0c28      	lsrs	r0, r5, #16
 8001990:	0c3f      	lsrs	r7, r7, #16
 8001992:	042d      	lsls	r5, r5, #16
 8001994:	19ed      	adds	r5, r5, r7
 8001996:	0c27      	lsrs	r7, r4, #16
 8001998:	0424      	lsls	r4, r4, #16
 800199a:	0c24      	lsrs	r4, r4, #16
 800199c:	0003      	movs	r3, r0
 800199e:	0020      	movs	r0, r4
 80019a0:	4350      	muls	r0, r2
 80019a2:	437a      	muls	r2, r7
 80019a4:	4691      	mov	r9, r2
 80019a6:	003a      	movs	r2, r7
 80019a8:	4453      	add	r3, sl
 80019aa:	9305      	str	r3, [sp, #20]
 80019ac:	0c03      	lsrs	r3, r0, #16
 80019ae:	469a      	mov	sl, r3
 80019b0:	434a      	muls	r2, r1
 80019b2:	4361      	muls	r1, r4
 80019b4:	4449      	add	r1, r9
 80019b6:	4451      	add	r1, sl
 80019b8:	44ab      	add	fp, r5
 80019ba:	4589      	cmp	r9, r1
 80019bc:	d903      	bls.n	80019c6 <__aeabi_dmul+0x1a2>
 80019be:	2380      	movs	r3, #128	; 0x80
 80019c0:	025b      	lsls	r3, r3, #9
 80019c2:	4699      	mov	r9, r3
 80019c4:	444a      	add	r2, r9
 80019c6:	0400      	lsls	r0, r0, #16
 80019c8:	0c0b      	lsrs	r3, r1, #16
 80019ca:	0c00      	lsrs	r0, r0, #16
 80019cc:	0409      	lsls	r1, r1, #16
 80019ce:	1809      	adds	r1, r1, r0
 80019d0:	0020      	movs	r0, r4
 80019d2:	4699      	mov	r9, r3
 80019d4:	4643      	mov	r3, r8
 80019d6:	4370      	muls	r0, r6
 80019d8:	435c      	muls	r4, r3
 80019da:	437e      	muls	r6, r7
 80019dc:	435f      	muls	r7, r3
 80019de:	0c03      	lsrs	r3, r0, #16
 80019e0:	4698      	mov	r8, r3
 80019e2:	19a4      	adds	r4, r4, r6
 80019e4:	4444      	add	r4, r8
 80019e6:	444a      	add	r2, r9
 80019e8:	9703      	str	r7, [sp, #12]
 80019ea:	42a6      	cmp	r6, r4
 80019ec:	d904      	bls.n	80019f8 <__aeabi_dmul+0x1d4>
 80019ee:	2380      	movs	r3, #128	; 0x80
 80019f0:	025b      	lsls	r3, r3, #9
 80019f2:	4698      	mov	r8, r3
 80019f4:	4447      	add	r7, r8
 80019f6:	9703      	str	r7, [sp, #12]
 80019f8:	0423      	lsls	r3, r4, #16
 80019fa:	9e02      	ldr	r6, [sp, #8]
 80019fc:	469a      	mov	sl, r3
 80019fe:	9b05      	ldr	r3, [sp, #20]
 8001a00:	445e      	add	r6, fp
 8001a02:	4698      	mov	r8, r3
 8001a04:	42ae      	cmp	r6, r5
 8001a06:	41ad      	sbcs	r5, r5
 8001a08:	1876      	adds	r6, r6, r1
 8001a0a:	428e      	cmp	r6, r1
 8001a0c:	4189      	sbcs	r1, r1
 8001a0e:	0400      	lsls	r0, r0, #16
 8001a10:	0c00      	lsrs	r0, r0, #16
 8001a12:	4450      	add	r0, sl
 8001a14:	4440      	add	r0, r8
 8001a16:	426d      	negs	r5, r5
 8001a18:	1947      	adds	r7, r0, r5
 8001a1a:	46b8      	mov	r8, r7
 8001a1c:	4693      	mov	fp, r2
 8001a1e:	4249      	negs	r1, r1
 8001a20:	4689      	mov	r9, r1
 8001a22:	44c3      	add	fp, r8
 8001a24:	44d9      	add	r9, fp
 8001a26:	4298      	cmp	r0, r3
 8001a28:	4180      	sbcs	r0, r0
 8001a2a:	45a8      	cmp	r8, r5
 8001a2c:	41ad      	sbcs	r5, r5
 8001a2e:	4593      	cmp	fp, r2
 8001a30:	4192      	sbcs	r2, r2
 8001a32:	4589      	cmp	r9, r1
 8001a34:	4189      	sbcs	r1, r1
 8001a36:	426d      	negs	r5, r5
 8001a38:	4240      	negs	r0, r0
 8001a3a:	4328      	orrs	r0, r5
 8001a3c:	0c24      	lsrs	r4, r4, #16
 8001a3e:	4252      	negs	r2, r2
 8001a40:	4249      	negs	r1, r1
 8001a42:	430a      	orrs	r2, r1
 8001a44:	9b03      	ldr	r3, [sp, #12]
 8001a46:	1900      	adds	r0, r0, r4
 8001a48:	1880      	adds	r0, r0, r2
 8001a4a:	18c7      	adds	r7, r0, r3
 8001a4c:	464b      	mov	r3, r9
 8001a4e:	0ddc      	lsrs	r4, r3, #23
 8001a50:	9b04      	ldr	r3, [sp, #16]
 8001a52:	0275      	lsls	r5, r6, #9
 8001a54:	431d      	orrs	r5, r3
 8001a56:	1e6a      	subs	r2, r5, #1
 8001a58:	4195      	sbcs	r5, r2
 8001a5a:	464b      	mov	r3, r9
 8001a5c:	0df6      	lsrs	r6, r6, #23
 8001a5e:	027f      	lsls	r7, r7, #9
 8001a60:	4335      	orrs	r5, r6
 8001a62:	025a      	lsls	r2, r3, #9
 8001a64:	433c      	orrs	r4, r7
 8001a66:	4315      	orrs	r5, r2
 8001a68:	01fb      	lsls	r3, r7, #7
 8001a6a:	d400      	bmi.n	8001a6e <__aeabi_dmul+0x24a>
 8001a6c:	e11c      	b.n	8001ca8 <__aeabi_dmul+0x484>
 8001a6e:	2101      	movs	r1, #1
 8001a70:	086a      	lsrs	r2, r5, #1
 8001a72:	400d      	ands	r5, r1
 8001a74:	4315      	orrs	r5, r2
 8001a76:	07e2      	lsls	r2, r4, #31
 8001a78:	4315      	orrs	r5, r2
 8001a7a:	0864      	lsrs	r4, r4, #1
 8001a7c:	494f      	ldr	r1, [pc, #316]	; (8001bbc <__aeabi_dmul+0x398>)
 8001a7e:	4461      	add	r1, ip
 8001a80:	2900      	cmp	r1, #0
 8001a82:	dc00      	bgt.n	8001a86 <__aeabi_dmul+0x262>
 8001a84:	e0b0      	b.n	8001be8 <__aeabi_dmul+0x3c4>
 8001a86:	076b      	lsls	r3, r5, #29
 8001a88:	d009      	beq.n	8001a9e <__aeabi_dmul+0x27a>
 8001a8a:	220f      	movs	r2, #15
 8001a8c:	402a      	ands	r2, r5
 8001a8e:	2a04      	cmp	r2, #4
 8001a90:	d005      	beq.n	8001a9e <__aeabi_dmul+0x27a>
 8001a92:	1d2a      	adds	r2, r5, #4
 8001a94:	42aa      	cmp	r2, r5
 8001a96:	41ad      	sbcs	r5, r5
 8001a98:	426d      	negs	r5, r5
 8001a9a:	1964      	adds	r4, r4, r5
 8001a9c:	0015      	movs	r5, r2
 8001a9e:	01e3      	lsls	r3, r4, #7
 8001aa0:	d504      	bpl.n	8001aac <__aeabi_dmul+0x288>
 8001aa2:	2180      	movs	r1, #128	; 0x80
 8001aa4:	4a46      	ldr	r2, [pc, #280]	; (8001bc0 <__aeabi_dmul+0x39c>)
 8001aa6:	00c9      	lsls	r1, r1, #3
 8001aa8:	4014      	ands	r4, r2
 8001aaa:	4461      	add	r1, ip
 8001aac:	4a45      	ldr	r2, [pc, #276]	; (8001bc4 <__aeabi_dmul+0x3a0>)
 8001aae:	4291      	cmp	r1, r2
 8001ab0:	dd00      	ble.n	8001ab4 <__aeabi_dmul+0x290>
 8001ab2:	e726      	b.n	8001902 <__aeabi_dmul+0xde>
 8001ab4:	0762      	lsls	r2, r4, #29
 8001ab6:	08ed      	lsrs	r5, r5, #3
 8001ab8:	0264      	lsls	r4, r4, #9
 8001aba:	0549      	lsls	r1, r1, #21
 8001abc:	4315      	orrs	r5, r2
 8001abe:	0b24      	lsrs	r4, r4, #12
 8001ac0:	0d4a      	lsrs	r2, r1, #21
 8001ac2:	e710      	b.n	80018e6 <__aeabi_dmul+0xc2>
 8001ac4:	4652      	mov	r2, sl
 8001ac6:	4332      	orrs	r2, r6
 8001ac8:	d100      	bne.n	8001acc <__aeabi_dmul+0x2a8>
 8001aca:	e07f      	b.n	8001bcc <__aeabi_dmul+0x3a8>
 8001acc:	2e00      	cmp	r6, #0
 8001ace:	d100      	bne.n	8001ad2 <__aeabi_dmul+0x2ae>
 8001ad0:	e0dc      	b.n	8001c8c <__aeabi_dmul+0x468>
 8001ad2:	0030      	movs	r0, r6
 8001ad4:	f000 fd96 	bl	8002604 <__clzsi2>
 8001ad8:	0002      	movs	r2, r0
 8001ada:	3a0b      	subs	r2, #11
 8001adc:	231d      	movs	r3, #29
 8001ade:	0001      	movs	r1, r0
 8001ae0:	1a9b      	subs	r3, r3, r2
 8001ae2:	4652      	mov	r2, sl
 8001ae4:	3908      	subs	r1, #8
 8001ae6:	40da      	lsrs	r2, r3
 8001ae8:	408e      	lsls	r6, r1
 8001aea:	4316      	orrs	r6, r2
 8001aec:	4652      	mov	r2, sl
 8001aee:	408a      	lsls	r2, r1
 8001af0:	9b00      	ldr	r3, [sp, #0]
 8001af2:	4935      	ldr	r1, [pc, #212]	; (8001bc8 <__aeabi_dmul+0x3a4>)
 8001af4:	1a18      	subs	r0, r3, r0
 8001af6:	0003      	movs	r3, r0
 8001af8:	468c      	mov	ip, r1
 8001afa:	4463      	add	r3, ip
 8001afc:	2000      	movs	r0, #0
 8001afe:	9300      	str	r3, [sp, #0]
 8001b00:	e6d3      	b.n	80018aa <__aeabi_dmul+0x86>
 8001b02:	0025      	movs	r5, r4
 8001b04:	4305      	orrs	r5, r0
 8001b06:	d04a      	beq.n	8001b9e <__aeabi_dmul+0x37a>
 8001b08:	2c00      	cmp	r4, #0
 8001b0a:	d100      	bne.n	8001b0e <__aeabi_dmul+0x2ea>
 8001b0c:	e0b0      	b.n	8001c70 <__aeabi_dmul+0x44c>
 8001b0e:	0020      	movs	r0, r4
 8001b10:	f000 fd78 	bl	8002604 <__clzsi2>
 8001b14:	0001      	movs	r1, r0
 8001b16:	0002      	movs	r2, r0
 8001b18:	390b      	subs	r1, #11
 8001b1a:	231d      	movs	r3, #29
 8001b1c:	0010      	movs	r0, r2
 8001b1e:	1a5b      	subs	r3, r3, r1
 8001b20:	0031      	movs	r1, r6
 8001b22:	0035      	movs	r5, r6
 8001b24:	3808      	subs	r0, #8
 8001b26:	4084      	lsls	r4, r0
 8001b28:	40d9      	lsrs	r1, r3
 8001b2a:	4085      	lsls	r5, r0
 8001b2c:	430c      	orrs	r4, r1
 8001b2e:	4826      	ldr	r0, [pc, #152]	; (8001bc8 <__aeabi_dmul+0x3a4>)
 8001b30:	1a83      	subs	r3, r0, r2
 8001b32:	9300      	str	r3, [sp, #0]
 8001b34:	2300      	movs	r3, #0
 8001b36:	4699      	mov	r9, r3
 8001b38:	469b      	mov	fp, r3
 8001b3a:	e697      	b.n	800186c <__aeabi_dmul+0x48>
 8001b3c:	0005      	movs	r5, r0
 8001b3e:	4325      	orrs	r5, r4
 8001b40:	d126      	bne.n	8001b90 <__aeabi_dmul+0x36c>
 8001b42:	2208      	movs	r2, #8
 8001b44:	9300      	str	r3, [sp, #0]
 8001b46:	2302      	movs	r3, #2
 8001b48:	2400      	movs	r4, #0
 8001b4a:	4691      	mov	r9, r2
 8001b4c:	469b      	mov	fp, r3
 8001b4e:	e68d      	b.n	800186c <__aeabi_dmul+0x48>
 8001b50:	4652      	mov	r2, sl
 8001b52:	9b00      	ldr	r3, [sp, #0]
 8001b54:	4332      	orrs	r2, r6
 8001b56:	d110      	bne.n	8001b7a <__aeabi_dmul+0x356>
 8001b58:	4915      	ldr	r1, [pc, #84]	; (8001bb0 <__aeabi_dmul+0x38c>)
 8001b5a:	2600      	movs	r6, #0
 8001b5c:	468c      	mov	ip, r1
 8001b5e:	4463      	add	r3, ip
 8001b60:	4649      	mov	r1, r9
 8001b62:	9300      	str	r3, [sp, #0]
 8001b64:	2302      	movs	r3, #2
 8001b66:	4319      	orrs	r1, r3
 8001b68:	4689      	mov	r9, r1
 8001b6a:	2002      	movs	r0, #2
 8001b6c:	e69d      	b.n	80018aa <__aeabi_dmul+0x86>
 8001b6e:	465b      	mov	r3, fp
 8001b70:	9701      	str	r7, [sp, #4]
 8001b72:	2b02      	cmp	r3, #2
 8001b74:	d000      	beq.n	8001b78 <__aeabi_dmul+0x354>
 8001b76:	e6ad      	b.n	80018d4 <__aeabi_dmul+0xb0>
 8001b78:	e6c3      	b.n	8001902 <__aeabi_dmul+0xde>
 8001b7a:	4a0d      	ldr	r2, [pc, #52]	; (8001bb0 <__aeabi_dmul+0x38c>)
 8001b7c:	2003      	movs	r0, #3
 8001b7e:	4694      	mov	ip, r2
 8001b80:	4463      	add	r3, ip
 8001b82:	464a      	mov	r2, r9
 8001b84:	9300      	str	r3, [sp, #0]
 8001b86:	2303      	movs	r3, #3
 8001b88:	431a      	orrs	r2, r3
 8001b8a:	4691      	mov	r9, r2
 8001b8c:	4652      	mov	r2, sl
 8001b8e:	e68c      	b.n	80018aa <__aeabi_dmul+0x86>
 8001b90:	220c      	movs	r2, #12
 8001b92:	9300      	str	r3, [sp, #0]
 8001b94:	2303      	movs	r3, #3
 8001b96:	0005      	movs	r5, r0
 8001b98:	4691      	mov	r9, r2
 8001b9a:	469b      	mov	fp, r3
 8001b9c:	e666      	b.n	800186c <__aeabi_dmul+0x48>
 8001b9e:	2304      	movs	r3, #4
 8001ba0:	4699      	mov	r9, r3
 8001ba2:	2300      	movs	r3, #0
 8001ba4:	9300      	str	r3, [sp, #0]
 8001ba6:	3301      	adds	r3, #1
 8001ba8:	2400      	movs	r4, #0
 8001baa:	469b      	mov	fp, r3
 8001bac:	e65e      	b.n	800186c <__aeabi_dmul+0x48>
 8001bae:	46c0      	nop			; (mov r8, r8)
 8001bb0:	000007ff 	.word	0x000007ff
 8001bb4:	fffffc01 	.word	0xfffffc01
 8001bb8:	080078fc 	.word	0x080078fc
 8001bbc:	000003ff 	.word	0x000003ff
 8001bc0:	feffffff 	.word	0xfeffffff
 8001bc4:	000007fe 	.word	0x000007fe
 8001bc8:	fffffc0d 	.word	0xfffffc0d
 8001bcc:	4649      	mov	r1, r9
 8001bce:	2301      	movs	r3, #1
 8001bd0:	4319      	orrs	r1, r3
 8001bd2:	4689      	mov	r9, r1
 8001bd4:	2600      	movs	r6, #0
 8001bd6:	2001      	movs	r0, #1
 8001bd8:	e667      	b.n	80018aa <__aeabi_dmul+0x86>
 8001bda:	2300      	movs	r3, #0
 8001bdc:	2480      	movs	r4, #128	; 0x80
 8001bde:	2500      	movs	r5, #0
 8001be0:	4a43      	ldr	r2, [pc, #268]	; (8001cf0 <__aeabi_dmul+0x4cc>)
 8001be2:	9301      	str	r3, [sp, #4]
 8001be4:	0324      	lsls	r4, r4, #12
 8001be6:	e67e      	b.n	80018e6 <__aeabi_dmul+0xc2>
 8001be8:	2001      	movs	r0, #1
 8001bea:	1a40      	subs	r0, r0, r1
 8001bec:	2838      	cmp	r0, #56	; 0x38
 8001bee:	dd00      	ble.n	8001bf2 <__aeabi_dmul+0x3ce>
 8001bf0:	e676      	b.n	80018e0 <__aeabi_dmul+0xbc>
 8001bf2:	281f      	cmp	r0, #31
 8001bf4:	dd5b      	ble.n	8001cae <__aeabi_dmul+0x48a>
 8001bf6:	221f      	movs	r2, #31
 8001bf8:	0023      	movs	r3, r4
 8001bfa:	4252      	negs	r2, r2
 8001bfc:	1a51      	subs	r1, r2, r1
 8001bfe:	40cb      	lsrs	r3, r1
 8001c00:	0019      	movs	r1, r3
 8001c02:	2820      	cmp	r0, #32
 8001c04:	d003      	beq.n	8001c0e <__aeabi_dmul+0x3ea>
 8001c06:	4a3b      	ldr	r2, [pc, #236]	; (8001cf4 <__aeabi_dmul+0x4d0>)
 8001c08:	4462      	add	r2, ip
 8001c0a:	4094      	lsls	r4, r2
 8001c0c:	4325      	orrs	r5, r4
 8001c0e:	1e6a      	subs	r2, r5, #1
 8001c10:	4195      	sbcs	r5, r2
 8001c12:	002a      	movs	r2, r5
 8001c14:	430a      	orrs	r2, r1
 8001c16:	2107      	movs	r1, #7
 8001c18:	000d      	movs	r5, r1
 8001c1a:	2400      	movs	r4, #0
 8001c1c:	4015      	ands	r5, r2
 8001c1e:	4211      	tst	r1, r2
 8001c20:	d05b      	beq.n	8001cda <__aeabi_dmul+0x4b6>
 8001c22:	210f      	movs	r1, #15
 8001c24:	2400      	movs	r4, #0
 8001c26:	4011      	ands	r1, r2
 8001c28:	2904      	cmp	r1, #4
 8001c2a:	d053      	beq.n	8001cd4 <__aeabi_dmul+0x4b0>
 8001c2c:	1d11      	adds	r1, r2, #4
 8001c2e:	4291      	cmp	r1, r2
 8001c30:	4192      	sbcs	r2, r2
 8001c32:	4252      	negs	r2, r2
 8001c34:	18a4      	adds	r4, r4, r2
 8001c36:	000a      	movs	r2, r1
 8001c38:	0223      	lsls	r3, r4, #8
 8001c3a:	d54b      	bpl.n	8001cd4 <__aeabi_dmul+0x4b0>
 8001c3c:	2201      	movs	r2, #1
 8001c3e:	2400      	movs	r4, #0
 8001c40:	2500      	movs	r5, #0
 8001c42:	e650      	b.n	80018e6 <__aeabi_dmul+0xc2>
 8001c44:	2380      	movs	r3, #128	; 0x80
 8001c46:	031b      	lsls	r3, r3, #12
 8001c48:	421c      	tst	r4, r3
 8001c4a:	d009      	beq.n	8001c60 <__aeabi_dmul+0x43c>
 8001c4c:	421e      	tst	r6, r3
 8001c4e:	d107      	bne.n	8001c60 <__aeabi_dmul+0x43c>
 8001c50:	4333      	orrs	r3, r6
 8001c52:	031c      	lsls	r4, r3, #12
 8001c54:	4643      	mov	r3, r8
 8001c56:	0015      	movs	r5, r2
 8001c58:	0b24      	lsrs	r4, r4, #12
 8001c5a:	4a25      	ldr	r2, [pc, #148]	; (8001cf0 <__aeabi_dmul+0x4cc>)
 8001c5c:	9301      	str	r3, [sp, #4]
 8001c5e:	e642      	b.n	80018e6 <__aeabi_dmul+0xc2>
 8001c60:	2280      	movs	r2, #128	; 0x80
 8001c62:	0312      	lsls	r2, r2, #12
 8001c64:	4314      	orrs	r4, r2
 8001c66:	0324      	lsls	r4, r4, #12
 8001c68:	4a21      	ldr	r2, [pc, #132]	; (8001cf0 <__aeabi_dmul+0x4cc>)
 8001c6a:	0b24      	lsrs	r4, r4, #12
 8001c6c:	9701      	str	r7, [sp, #4]
 8001c6e:	e63a      	b.n	80018e6 <__aeabi_dmul+0xc2>
 8001c70:	f000 fcc8 	bl	8002604 <__clzsi2>
 8001c74:	0001      	movs	r1, r0
 8001c76:	0002      	movs	r2, r0
 8001c78:	3115      	adds	r1, #21
 8001c7a:	3220      	adds	r2, #32
 8001c7c:	291c      	cmp	r1, #28
 8001c7e:	dc00      	bgt.n	8001c82 <__aeabi_dmul+0x45e>
 8001c80:	e74b      	b.n	8001b1a <__aeabi_dmul+0x2f6>
 8001c82:	0034      	movs	r4, r6
 8001c84:	3808      	subs	r0, #8
 8001c86:	2500      	movs	r5, #0
 8001c88:	4084      	lsls	r4, r0
 8001c8a:	e750      	b.n	8001b2e <__aeabi_dmul+0x30a>
 8001c8c:	f000 fcba 	bl	8002604 <__clzsi2>
 8001c90:	0003      	movs	r3, r0
 8001c92:	001a      	movs	r2, r3
 8001c94:	3215      	adds	r2, #21
 8001c96:	3020      	adds	r0, #32
 8001c98:	2a1c      	cmp	r2, #28
 8001c9a:	dc00      	bgt.n	8001c9e <__aeabi_dmul+0x47a>
 8001c9c:	e71e      	b.n	8001adc <__aeabi_dmul+0x2b8>
 8001c9e:	4656      	mov	r6, sl
 8001ca0:	3b08      	subs	r3, #8
 8001ca2:	2200      	movs	r2, #0
 8001ca4:	409e      	lsls	r6, r3
 8001ca6:	e723      	b.n	8001af0 <__aeabi_dmul+0x2cc>
 8001ca8:	9b00      	ldr	r3, [sp, #0]
 8001caa:	469c      	mov	ip, r3
 8001cac:	e6e6      	b.n	8001a7c <__aeabi_dmul+0x258>
 8001cae:	4912      	ldr	r1, [pc, #72]	; (8001cf8 <__aeabi_dmul+0x4d4>)
 8001cb0:	0022      	movs	r2, r4
 8001cb2:	4461      	add	r1, ip
 8001cb4:	002e      	movs	r6, r5
 8001cb6:	408d      	lsls	r5, r1
 8001cb8:	408a      	lsls	r2, r1
 8001cba:	40c6      	lsrs	r6, r0
 8001cbc:	1e69      	subs	r1, r5, #1
 8001cbe:	418d      	sbcs	r5, r1
 8001cc0:	4332      	orrs	r2, r6
 8001cc2:	432a      	orrs	r2, r5
 8001cc4:	40c4      	lsrs	r4, r0
 8001cc6:	0753      	lsls	r3, r2, #29
 8001cc8:	d0b6      	beq.n	8001c38 <__aeabi_dmul+0x414>
 8001cca:	210f      	movs	r1, #15
 8001ccc:	4011      	ands	r1, r2
 8001cce:	2904      	cmp	r1, #4
 8001cd0:	d1ac      	bne.n	8001c2c <__aeabi_dmul+0x408>
 8001cd2:	e7b1      	b.n	8001c38 <__aeabi_dmul+0x414>
 8001cd4:	0765      	lsls	r5, r4, #29
 8001cd6:	0264      	lsls	r4, r4, #9
 8001cd8:	0b24      	lsrs	r4, r4, #12
 8001cda:	08d2      	lsrs	r2, r2, #3
 8001cdc:	4315      	orrs	r5, r2
 8001cde:	2200      	movs	r2, #0
 8001ce0:	e601      	b.n	80018e6 <__aeabi_dmul+0xc2>
 8001ce2:	2280      	movs	r2, #128	; 0x80
 8001ce4:	0312      	lsls	r2, r2, #12
 8001ce6:	4314      	orrs	r4, r2
 8001ce8:	0324      	lsls	r4, r4, #12
 8001cea:	4a01      	ldr	r2, [pc, #4]	; (8001cf0 <__aeabi_dmul+0x4cc>)
 8001cec:	0b24      	lsrs	r4, r4, #12
 8001cee:	e5fa      	b.n	80018e6 <__aeabi_dmul+0xc2>
 8001cf0:	000007ff 	.word	0x000007ff
 8001cf4:	0000043e 	.word	0x0000043e
 8001cf8:	0000041e 	.word	0x0000041e

08001cfc <__aeabi_dsub>:
 8001cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cfe:	4657      	mov	r7, sl
 8001d00:	464e      	mov	r6, r9
 8001d02:	4645      	mov	r5, r8
 8001d04:	46de      	mov	lr, fp
 8001d06:	b5e0      	push	{r5, r6, r7, lr}
 8001d08:	001e      	movs	r6, r3
 8001d0a:	0017      	movs	r7, r2
 8001d0c:	004a      	lsls	r2, r1, #1
 8001d0e:	030b      	lsls	r3, r1, #12
 8001d10:	0d52      	lsrs	r2, r2, #21
 8001d12:	0a5b      	lsrs	r3, r3, #9
 8001d14:	4690      	mov	r8, r2
 8001d16:	0f42      	lsrs	r2, r0, #29
 8001d18:	431a      	orrs	r2, r3
 8001d1a:	0fcd      	lsrs	r5, r1, #31
 8001d1c:	4ccd      	ldr	r4, [pc, #820]	; (8002054 <__aeabi_dsub+0x358>)
 8001d1e:	0331      	lsls	r1, r6, #12
 8001d20:	00c3      	lsls	r3, r0, #3
 8001d22:	4694      	mov	ip, r2
 8001d24:	0070      	lsls	r0, r6, #1
 8001d26:	0f7a      	lsrs	r2, r7, #29
 8001d28:	0a49      	lsrs	r1, r1, #9
 8001d2a:	00ff      	lsls	r7, r7, #3
 8001d2c:	469a      	mov	sl, r3
 8001d2e:	46b9      	mov	r9, r7
 8001d30:	0d40      	lsrs	r0, r0, #21
 8001d32:	0ff6      	lsrs	r6, r6, #31
 8001d34:	4311      	orrs	r1, r2
 8001d36:	42a0      	cmp	r0, r4
 8001d38:	d100      	bne.n	8001d3c <__aeabi_dsub+0x40>
 8001d3a:	e0b1      	b.n	8001ea0 <__aeabi_dsub+0x1a4>
 8001d3c:	2201      	movs	r2, #1
 8001d3e:	4056      	eors	r6, r2
 8001d40:	46b3      	mov	fp, r6
 8001d42:	42b5      	cmp	r5, r6
 8001d44:	d100      	bne.n	8001d48 <__aeabi_dsub+0x4c>
 8001d46:	e088      	b.n	8001e5a <__aeabi_dsub+0x15e>
 8001d48:	4642      	mov	r2, r8
 8001d4a:	1a12      	subs	r2, r2, r0
 8001d4c:	2a00      	cmp	r2, #0
 8001d4e:	dc00      	bgt.n	8001d52 <__aeabi_dsub+0x56>
 8001d50:	e0ae      	b.n	8001eb0 <__aeabi_dsub+0x1b4>
 8001d52:	2800      	cmp	r0, #0
 8001d54:	d100      	bne.n	8001d58 <__aeabi_dsub+0x5c>
 8001d56:	e0c1      	b.n	8001edc <__aeabi_dsub+0x1e0>
 8001d58:	48be      	ldr	r0, [pc, #760]	; (8002054 <__aeabi_dsub+0x358>)
 8001d5a:	4580      	cmp	r8, r0
 8001d5c:	d100      	bne.n	8001d60 <__aeabi_dsub+0x64>
 8001d5e:	e151      	b.n	8002004 <__aeabi_dsub+0x308>
 8001d60:	2080      	movs	r0, #128	; 0x80
 8001d62:	0400      	lsls	r0, r0, #16
 8001d64:	4301      	orrs	r1, r0
 8001d66:	2a38      	cmp	r2, #56	; 0x38
 8001d68:	dd00      	ble.n	8001d6c <__aeabi_dsub+0x70>
 8001d6a:	e17b      	b.n	8002064 <__aeabi_dsub+0x368>
 8001d6c:	2a1f      	cmp	r2, #31
 8001d6e:	dd00      	ble.n	8001d72 <__aeabi_dsub+0x76>
 8001d70:	e1ee      	b.n	8002150 <__aeabi_dsub+0x454>
 8001d72:	2020      	movs	r0, #32
 8001d74:	003e      	movs	r6, r7
 8001d76:	1a80      	subs	r0, r0, r2
 8001d78:	000c      	movs	r4, r1
 8001d7a:	40d6      	lsrs	r6, r2
 8001d7c:	40d1      	lsrs	r1, r2
 8001d7e:	4087      	lsls	r7, r0
 8001d80:	4662      	mov	r2, ip
 8001d82:	4084      	lsls	r4, r0
 8001d84:	1a52      	subs	r2, r2, r1
 8001d86:	1e78      	subs	r0, r7, #1
 8001d88:	4187      	sbcs	r7, r0
 8001d8a:	4694      	mov	ip, r2
 8001d8c:	4334      	orrs	r4, r6
 8001d8e:	4327      	orrs	r7, r4
 8001d90:	1bdc      	subs	r4, r3, r7
 8001d92:	42a3      	cmp	r3, r4
 8001d94:	419b      	sbcs	r3, r3
 8001d96:	4662      	mov	r2, ip
 8001d98:	425b      	negs	r3, r3
 8001d9a:	1ad3      	subs	r3, r2, r3
 8001d9c:	4699      	mov	r9, r3
 8001d9e:	464b      	mov	r3, r9
 8001da0:	021b      	lsls	r3, r3, #8
 8001da2:	d400      	bmi.n	8001da6 <__aeabi_dsub+0xaa>
 8001da4:	e118      	b.n	8001fd8 <__aeabi_dsub+0x2dc>
 8001da6:	464b      	mov	r3, r9
 8001da8:	0258      	lsls	r0, r3, #9
 8001daa:	0a43      	lsrs	r3, r0, #9
 8001dac:	4699      	mov	r9, r3
 8001dae:	464b      	mov	r3, r9
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	d100      	bne.n	8001db6 <__aeabi_dsub+0xba>
 8001db4:	e137      	b.n	8002026 <__aeabi_dsub+0x32a>
 8001db6:	4648      	mov	r0, r9
 8001db8:	f000 fc24 	bl	8002604 <__clzsi2>
 8001dbc:	0001      	movs	r1, r0
 8001dbe:	3908      	subs	r1, #8
 8001dc0:	2320      	movs	r3, #32
 8001dc2:	0022      	movs	r2, r4
 8001dc4:	4648      	mov	r0, r9
 8001dc6:	1a5b      	subs	r3, r3, r1
 8001dc8:	40da      	lsrs	r2, r3
 8001dca:	4088      	lsls	r0, r1
 8001dcc:	408c      	lsls	r4, r1
 8001dce:	4643      	mov	r3, r8
 8001dd0:	4310      	orrs	r0, r2
 8001dd2:	4588      	cmp	r8, r1
 8001dd4:	dd00      	ble.n	8001dd8 <__aeabi_dsub+0xdc>
 8001dd6:	e136      	b.n	8002046 <__aeabi_dsub+0x34a>
 8001dd8:	1ac9      	subs	r1, r1, r3
 8001dda:	1c4b      	adds	r3, r1, #1
 8001ddc:	2b1f      	cmp	r3, #31
 8001dde:	dd00      	ble.n	8001de2 <__aeabi_dsub+0xe6>
 8001de0:	e0ea      	b.n	8001fb8 <__aeabi_dsub+0x2bc>
 8001de2:	2220      	movs	r2, #32
 8001de4:	0026      	movs	r6, r4
 8001de6:	1ad2      	subs	r2, r2, r3
 8001de8:	0001      	movs	r1, r0
 8001dea:	4094      	lsls	r4, r2
 8001dec:	40de      	lsrs	r6, r3
 8001dee:	40d8      	lsrs	r0, r3
 8001df0:	2300      	movs	r3, #0
 8001df2:	4091      	lsls	r1, r2
 8001df4:	1e62      	subs	r2, r4, #1
 8001df6:	4194      	sbcs	r4, r2
 8001df8:	4681      	mov	r9, r0
 8001dfa:	4698      	mov	r8, r3
 8001dfc:	4331      	orrs	r1, r6
 8001dfe:	430c      	orrs	r4, r1
 8001e00:	0763      	lsls	r3, r4, #29
 8001e02:	d009      	beq.n	8001e18 <__aeabi_dsub+0x11c>
 8001e04:	230f      	movs	r3, #15
 8001e06:	4023      	ands	r3, r4
 8001e08:	2b04      	cmp	r3, #4
 8001e0a:	d005      	beq.n	8001e18 <__aeabi_dsub+0x11c>
 8001e0c:	1d23      	adds	r3, r4, #4
 8001e0e:	42a3      	cmp	r3, r4
 8001e10:	41a4      	sbcs	r4, r4
 8001e12:	4264      	negs	r4, r4
 8001e14:	44a1      	add	r9, r4
 8001e16:	001c      	movs	r4, r3
 8001e18:	464b      	mov	r3, r9
 8001e1a:	021b      	lsls	r3, r3, #8
 8001e1c:	d400      	bmi.n	8001e20 <__aeabi_dsub+0x124>
 8001e1e:	e0de      	b.n	8001fde <__aeabi_dsub+0x2e2>
 8001e20:	4641      	mov	r1, r8
 8001e22:	4b8c      	ldr	r3, [pc, #560]	; (8002054 <__aeabi_dsub+0x358>)
 8001e24:	3101      	adds	r1, #1
 8001e26:	4299      	cmp	r1, r3
 8001e28:	d100      	bne.n	8001e2c <__aeabi_dsub+0x130>
 8001e2a:	e0e7      	b.n	8001ffc <__aeabi_dsub+0x300>
 8001e2c:	464b      	mov	r3, r9
 8001e2e:	488a      	ldr	r0, [pc, #552]	; (8002058 <__aeabi_dsub+0x35c>)
 8001e30:	08e4      	lsrs	r4, r4, #3
 8001e32:	4003      	ands	r3, r0
 8001e34:	0018      	movs	r0, r3
 8001e36:	0549      	lsls	r1, r1, #21
 8001e38:	075b      	lsls	r3, r3, #29
 8001e3a:	0240      	lsls	r0, r0, #9
 8001e3c:	4323      	orrs	r3, r4
 8001e3e:	0d4a      	lsrs	r2, r1, #21
 8001e40:	0b04      	lsrs	r4, r0, #12
 8001e42:	0512      	lsls	r2, r2, #20
 8001e44:	07ed      	lsls	r5, r5, #31
 8001e46:	4322      	orrs	r2, r4
 8001e48:	432a      	orrs	r2, r5
 8001e4a:	0018      	movs	r0, r3
 8001e4c:	0011      	movs	r1, r2
 8001e4e:	bcf0      	pop	{r4, r5, r6, r7}
 8001e50:	46bb      	mov	fp, r7
 8001e52:	46b2      	mov	sl, r6
 8001e54:	46a9      	mov	r9, r5
 8001e56:	46a0      	mov	r8, r4
 8001e58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001e5a:	4642      	mov	r2, r8
 8001e5c:	1a12      	subs	r2, r2, r0
 8001e5e:	2a00      	cmp	r2, #0
 8001e60:	dd52      	ble.n	8001f08 <__aeabi_dsub+0x20c>
 8001e62:	2800      	cmp	r0, #0
 8001e64:	d100      	bne.n	8001e68 <__aeabi_dsub+0x16c>
 8001e66:	e09c      	b.n	8001fa2 <__aeabi_dsub+0x2a6>
 8001e68:	45a0      	cmp	r8, r4
 8001e6a:	d100      	bne.n	8001e6e <__aeabi_dsub+0x172>
 8001e6c:	e0ca      	b.n	8002004 <__aeabi_dsub+0x308>
 8001e6e:	2080      	movs	r0, #128	; 0x80
 8001e70:	0400      	lsls	r0, r0, #16
 8001e72:	4301      	orrs	r1, r0
 8001e74:	2a38      	cmp	r2, #56	; 0x38
 8001e76:	dd00      	ble.n	8001e7a <__aeabi_dsub+0x17e>
 8001e78:	e149      	b.n	800210e <__aeabi_dsub+0x412>
 8001e7a:	2a1f      	cmp	r2, #31
 8001e7c:	dc00      	bgt.n	8001e80 <__aeabi_dsub+0x184>
 8001e7e:	e197      	b.n	80021b0 <__aeabi_dsub+0x4b4>
 8001e80:	0010      	movs	r0, r2
 8001e82:	000e      	movs	r6, r1
 8001e84:	3820      	subs	r0, #32
 8001e86:	40c6      	lsrs	r6, r0
 8001e88:	2a20      	cmp	r2, #32
 8001e8a:	d004      	beq.n	8001e96 <__aeabi_dsub+0x19a>
 8001e8c:	2040      	movs	r0, #64	; 0x40
 8001e8e:	1a82      	subs	r2, r0, r2
 8001e90:	4091      	lsls	r1, r2
 8001e92:	430f      	orrs	r7, r1
 8001e94:	46b9      	mov	r9, r7
 8001e96:	464c      	mov	r4, r9
 8001e98:	1e62      	subs	r2, r4, #1
 8001e9a:	4194      	sbcs	r4, r2
 8001e9c:	4334      	orrs	r4, r6
 8001e9e:	e13a      	b.n	8002116 <__aeabi_dsub+0x41a>
 8001ea0:	000a      	movs	r2, r1
 8001ea2:	433a      	orrs	r2, r7
 8001ea4:	d028      	beq.n	8001ef8 <__aeabi_dsub+0x1fc>
 8001ea6:	46b3      	mov	fp, r6
 8001ea8:	42b5      	cmp	r5, r6
 8001eaa:	d02b      	beq.n	8001f04 <__aeabi_dsub+0x208>
 8001eac:	4a6b      	ldr	r2, [pc, #428]	; (800205c <__aeabi_dsub+0x360>)
 8001eae:	4442      	add	r2, r8
 8001eb0:	2a00      	cmp	r2, #0
 8001eb2:	d05d      	beq.n	8001f70 <__aeabi_dsub+0x274>
 8001eb4:	4642      	mov	r2, r8
 8001eb6:	4644      	mov	r4, r8
 8001eb8:	1a82      	subs	r2, r0, r2
 8001eba:	2c00      	cmp	r4, #0
 8001ebc:	d000      	beq.n	8001ec0 <__aeabi_dsub+0x1c4>
 8001ebe:	e0f5      	b.n	80020ac <__aeabi_dsub+0x3b0>
 8001ec0:	4665      	mov	r5, ip
 8001ec2:	431d      	orrs	r5, r3
 8001ec4:	d100      	bne.n	8001ec8 <__aeabi_dsub+0x1cc>
 8001ec6:	e19c      	b.n	8002202 <__aeabi_dsub+0x506>
 8001ec8:	1e55      	subs	r5, r2, #1
 8001eca:	2a01      	cmp	r2, #1
 8001ecc:	d100      	bne.n	8001ed0 <__aeabi_dsub+0x1d4>
 8001ece:	e1fb      	b.n	80022c8 <__aeabi_dsub+0x5cc>
 8001ed0:	4c60      	ldr	r4, [pc, #384]	; (8002054 <__aeabi_dsub+0x358>)
 8001ed2:	42a2      	cmp	r2, r4
 8001ed4:	d100      	bne.n	8001ed8 <__aeabi_dsub+0x1dc>
 8001ed6:	e1bd      	b.n	8002254 <__aeabi_dsub+0x558>
 8001ed8:	002a      	movs	r2, r5
 8001eda:	e0f0      	b.n	80020be <__aeabi_dsub+0x3c2>
 8001edc:	0008      	movs	r0, r1
 8001ede:	4338      	orrs	r0, r7
 8001ee0:	d100      	bne.n	8001ee4 <__aeabi_dsub+0x1e8>
 8001ee2:	e0c3      	b.n	800206c <__aeabi_dsub+0x370>
 8001ee4:	1e50      	subs	r0, r2, #1
 8001ee6:	2a01      	cmp	r2, #1
 8001ee8:	d100      	bne.n	8001eec <__aeabi_dsub+0x1f0>
 8001eea:	e1a8      	b.n	800223e <__aeabi_dsub+0x542>
 8001eec:	4c59      	ldr	r4, [pc, #356]	; (8002054 <__aeabi_dsub+0x358>)
 8001eee:	42a2      	cmp	r2, r4
 8001ef0:	d100      	bne.n	8001ef4 <__aeabi_dsub+0x1f8>
 8001ef2:	e087      	b.n	8002004 <__aeabi_dsub+0x308>
 8001ef4:	0002      	movs	r2, r0
 8001ef6:	e736      	b.n	8001d66 <__aeabi_dsub+0x6a>
 8001ef8:	2201      	movs	r2, #1
 8001efa:	4056      	eors	r6, r2
 8001efc:	46b3      	mov	fp, r6
 8001efe:	42b5      	cmp	r5, r6
 8001f00:	d000      	beq.n	8001f04 <__aeabi_dsub+0x208>
 8001f02:	e721      	b.n	8001d48 <__aeabi_dsub+0x4c>
 8001f04:	4a55      	ldr	r2, [pc, #340]	; (800205c <__aeabi_dsub+0x360>)
 8001f06:	4442      	add	r2, r8
 8001f08:	2a00      	cmp	r2, #0
 8001f0a:	d100      	bne.n	8001f0e <__aeabi_dsub+0x212>
 8001f0c:	e0b5      	b.n	800207a <__aeabi_dsub+0x37e>
 8001f0e:	4642      	mov	r2, r8
 8001f10:	4644      	mov	r4, r8
 8001f12:	1a82      	subs	r2, r0, r2
 8001f14:	2c00      	cmp	r4, #0
 8001f16:	d100      	bne.n	8001f1a <__aeabi_dsub+0x21e>
 8001f18:	e138      	b.n	800218c <__aeabi_dsub+0x490>
 8001f1a:	4e4e      	ldr	r6, [pc, #312]	; (8002054 <__aeabi_dsub+0x358>)
 8001f1c:	42b0      	cmp	r0, r6
 8001f1e:	d100      	bne.n	8001f22 <__aeabi_dsub+0x226>
 8001f20:	e1de      	b.n	80022e0 <__aeabi_dsub+0x5e4>
 8001f22:	2680      	movs	r6, #128	; 0x80
 8001f24:	4664      	mov	r4, ip
 8001f26:	0436      	lsls	r6, r6, #16
 8001f28:	4334      	orrs	r4, r6
 8001f2a:	46a4      	mov	ip, r4
 8001f2c:	2a38      	cmp	r2, #56	; 0x38
 8001f2e:	dd00      	ble.n	8001f32 <__aeabi_dsub+0x236>
 8001f30:	e196      	b.n	8002260 <__aeabi_dsub+0x564>
 8001f32:	2a1f      	cmp	r2, #31
 8001f34:	dd00      	ble.n	8001f38 <__aeabi_dsub+0x23c>
 8001f36:	e224      	b.n	8002382 <__aeabi_dsub+0x686>
 8001f38:	2620      	movs	r6, #32
 8001f3a:	1ab4      	subs	r4, r6, r2
 8001f3c:	46a2      	mov	sl, r4
 8001f3e:	4664      	mov	r4, ip
 8001f40:	4656      	mov	r6, sl
 8001f42:	40b4      	lsls	r4, r6
 8001f44:	46a1      	mov	r9, r4
 8001f46:	001c      	movs	r4, r3
 8001f48:	464e      	mov	r6, r9
 8001f4a:	40d4      	lsrs	r4, r2
 8001f4c:	4326      	orrs	r6, r4
 8001f4e:	0034      	movs	r4, r6
 8001f50:	4656      	mov	r6, sl
 8001f52:	40b3      	lsls	r3, r6
 8001f54:	1e5e      	subs	r6, r3, #1
 8001f56:	41b3      	sbcs	r3, r6
 8001f58:	431c      	orrs	r4, r3
 8001f5a:	4663      	mov	r3, ip
 8001f5c:	40d3      	lsrs	r3, r2
 8001f5e:	18c9      	adds	r1, r1, r3
 8001f60:	19e4      	adds	r4, r4, r7
 8001f62:	42bc      	cmp	r4, r7
 8001f64:	41bf      	sbcs	r7, r7
 8001f66:	427f      	negs	r7, r7
 8001f68:	46b9      	mov	r9, r7
 8001f6a:	4680      	mov	r8, r0
 8001f6c:	4489      	add	r9, r1
 8001f6e:	e0d8      	b.n	8002122 <__aeabi_dsub+0x426>
 8001f70:	4640      	mov	r0, r8
 8001f72:	4c3b      	ldr	r4, [pc, #236]	; (8002060 <__aeabi_dsub+0x364>)
 8001f74:	3001      	adds	r0, #1
 8001f76:	4220      	tst	r0, r4
 8001f78:	d000      	beq.n	8001f7c <__aeabi_dsub+0x280>
 8001f7a:	e0b4      	b.n	80020e6 <__aeabi_dsub+0x3ea>
 8001f7c:	4640      	mov	r0, r8
 8001f7e:	2800      	cmp	r0, #0
 8001f80:	d000      	beq.n	8001f84 <__aeabi_dsub+0x288>
 8001f82:	e144      	b.n	800220e <__aeabi_dsub+0x512>
 8001f84:	4660      	mov	r0, ip
 8001f86:	4318      	orrs	r0, r3
 8001f88:	d100      	bne.n	8001f8c <__aeabi_dsub+0x290>
 8001f8a:	e190      	b.n	80022ae <__aeabi_dsub+0x5b2>
 8001f8c:	0008      	movs	r0, r1
 8001f8e:	4338      	orrs	r0, r7
 8001f90:	d000      	beq.n	8001f94 <__aeabi_dsub+0x298>
 8001f92:	e1aa      	b.n	80022ea <__aeabi_dsub+0x5ee>
 8001f94:	4661      	mov	r1, ip
 8001f96:	08db      	lsrs	r3, r3, #3
 8001f98:	0749      	lsls	r1, r1, #29
 8001f9a:	430b      	orrs	r3, r1
 8001f9c:	4661      	mov	r1, ip
 8001f9e:	08cc      	lsrs	r4, r1, #3
 8001fa0:	e027      	b.n	8001ff2 <__aeabi_dsub+0x2f6>
 8001fa2:	0008      	movs	r0, r1
 8001fa4:	4338      	orrs	r0, r7
 8001fa6:	d061      	beq.n	800206c <__aeabi_dsub+0x370>
 8001fa8:	1e50      	subs	r0, r2, #1
 8001faa:	2a01      	cmp	r2, #1
 8001fac:	d100      	bne.n	8001fb0 <__aeabi_dsub+0x2b4>
 8001fae:	e139      	b.n	8002224 <__aeabi_dsub+0x528>
 8001fb0:	42a2      	cmp	r2, r4
 8001fb2:	d027      	beq.n	8002004 <__aeabi_dsub+0x308>
 8001fb4:	0002      	movs	r2, r0
 8001fb6:	e75d      	b.n	8001e74 <__aeabi_dsub+0x178>
 8001fb8:	0002      	movs	r2, r0
 8001fba:	391f      	subs	r1, #31
 8001fbc:	40ca      	lsrs	r2, r1
 8001fbe:	0011      	movs	r1, r2
 8001fc0:	2b20      	cmp	r3, #32
 8001fc2:	d003      	beq.n	8001fcc <__aeabi_dsub+0x2d0>
 8001fc4:	2240      	movs	r2, #64	; 0x40
 8001fc6:	1ad3      	subs	r3, r2, r3
 8001fc8:	4098      	lsls	r0, r3
 8001fca:	4304      	orrs	r4, r0
 8001fcc:	1e63      	subs	r3, r4, #1
 8001fce:	419c      	sbcs	r4, r3
 8001fd0:	2300      	movs	r3, #0
 8001fd2:	4699      	mov	r9, r3
 8001fd4:	4698      	mov	r8, r3
 8001fd6:	430c      	orrs	r4, r1
 8001fd8:	0763      	lsls	r3, r4, #29
 8001fda:	d000      	beq.n	8001fde <__aeabi_dsub+0x2e2>
 8001fdc:	e712      	b.n	8001e04 <__aeabi_dsub+0x108>
 8001fde:	464b      	mov	r3, r9
 8001fe0:	464a      	mov	r2, r9
 8001fe2:	08e4      	lsrs	r4, r4, #3
 8001fe4:	075b      	lsls	r3, r3, #29
 8001fe6:	4323      	orrs	r3, r4
 8001fe8:	08d4      	lsrs	r4, r2, #3
 8001fea:	4642      	mov	r2, r8
 8001fec:	4919      	ldr	r1, [pc, #100]	; (8002054 <__aeabi_dsub+0x358>)
 8001fee:	428a      	cmp	r2, r1
 8001ff0:	d00e      	beq.n	8002010 <__aeabi_dsub+0x314>
 8001ff2:	0324      	lsls	r4, r4, #12
 8001ff4:	0552      	lsls	r2, r2, #21
 8001ff6:	0b24      	lsrs	r4, r4, #12
 8001ff8:	0d52      	lsrs	r2, r2, #21
 8001ffa:	e722      	b.n	8001e42 <__aeabi_dsub+0x146>
 8001ffc:	000a      	movs	r2, r1
 8001ffe:	2400      	movs	r4, #0
 8002000:	2300      	movs	r3, #0
 8002002:	e71e      	b.n	8001e42 <__aeabi_dsub+0x146>
 8002004:	08db      	lsrs	r3, r3, #3
 8002006:	4662      	mov	r2, ip
 8002008:	0752      	lsls	r2, r2, #29
 800200a:	4313      	orrs	r3, r2
 800200c:	4662      	mov	r2, ip
 800200e:	08d4      	lsrs	r4, r2, #3
 8002010:	001a      	movs	r2, r3
 8002012:	4322      	orrs	r2, r4
 8002014:	d100      	bne.n	8002018 <__aeabi_dsub+0x31c>
 8002016:	e1fc      	b.n	8002412 <__aeabi_dsub+0x716>
 8002018:	2280      	movs	r2, #128	; 0x80
 800201a:	0312      	lsls	r2, r2, #12
 800201c:	4314      	orrs	r4, r2
 800201e:	0324      	lsls	r4, r4, #12
 8002020:	4a0c      	ldr	r2, [pc, #48]	; (8002054 <__aeabi_dsub+0x358>)
 8002022:	0b24      	lsrs	r4, r4, #12
 8002024:	e70d      	b.n	8001e42 <__aeabi_dsub+0x146>
 8002026:	0020      	movs	r0, r4
 8002028:	f000 faec 	bl	8002604 <__clzsi2>
 800202c:	0001      	movs	r1, r0
 800202e:	3118      	adds	r1, #24
 8002030:	291f      	cmp	r1, #31
 8002032:	dc00      	bgt.n	8002036 <__aeabi_dsub+0x33a>
 8002034:	e6c4      	b.n	8001dc0 <__aeabi_dsub+0xc4>
 8002036:	3808      	subs	r0, #8
 8002038:	4084      	lsls	r4, r0
 800203a:	4643      	mov	r3, r8
 800203c:	0020      	movs	r0, r4
 800203e:	2400      	movs	r4, #0
 8002040:	4588      	cmp	r8, r1
 8002042:	dc00      	bgt.n	8002046 <__aeabi_dsub+0x34a>
 8002044:	e6c8      	b.n	8001dd8 <__aeabi_dsub+0xdc>
 8002046:	4a04      	ldr	r2, [pc, #16]	; (8002058 <__aeabi_dsub+0x35c>)
 8002048:	1a5b      	subs	r3, r3, r1
 800204a:	4010      	ands	r0, r2
 800204c:	4698      	mov	r8, r3
 800204e:	4681      	mov	r9, r0
 8002050:	e6d6      	b.n	8001e00 <__aeabi_dsub+0x104>
 8002052:	46c0      	nop			; (mov r8, r8)
 8002054:	000007ff 	.word	0x000007ff
 8002058:	ff7fffff 	.word	0xff7fffff
 800205c:	fffff801 	.word	0xfffff801
 8002060:	000007fe 	.word	0x000007fe
 8002064:	430f      	orrs	r7, r1
 8002066:	1e7a      	subs	r2, r7, #1
 8002068:	4197      	sbcs	r7, r2
 800206a:	e691      	b.n	8001d90 <__aeabi_dsub+0x94>
 800206c:	4661      	mov	r1, ip
 800206e:	08db      	lsrs	r3, r3, #3
 8002070:	0749      	lsls	r1, r1, #29
 8002072:	430b      	orrs	r3, r1
 8002074:	4661      	mov	r1, ip
 8002076:	08cc      	lsrs	r4, r1, #3
 8002078:	e7b8      	b.n	8001fec <__aeabi_dsub+0x2f0>
 800207a:	4640      	mov	r0, r8
 800207c:	4cd3      	ldr	r4, [pc, #844]	; (80023cc <__aeabi_dsub+0x6d0>)
 800207e:	3001      	adds	r0, #1
 8002080:	4220      	tst	r0, r4
 8002082:	d000      	beq.n	8002086 <__aeabi_dsub+0x38a>
 8002084:	e0a2      	b.n	80021cc <__aeabi_dsub+0x4d0>
 8002086:	4640      	mov	r0, r8
 8002088:	2800      	cmp	r0, #0
 800208a:	d000      	beq.n	800208e <__aeabi_dsub+0x392>
 800208c:	e101      	b.n	8002292 <__aeabi_dsub+0x596>
 800208e:	4660      	mov	r0, ip
 8002090:	4318      	orrs	r0, r3
 8002092:	d100      	bne.n	8002096 <__aeabi_dsub+0x39a>
 8002094:	e15e      	b.n	8002354 <__aeabi_dsub+0x658>
 8002096:	0008      	movs	r0, r1
 8002098:	4338      	orrs	r0, r7
 800209a:	d000      	beq.n	800209e <__aeabi_dsub+0x3a2>
 800209c:	e15f      	b.n	800235e <__aeabi_dsub+0x662>
 800209e:	4661      	mov	r1, ip
 80020a0:	08db      	lsrs	r3, r3, #3
 80020a2:	0749      	lsls	r1, r1, #29
 80020a4:	430b      	orrs	r3, r1
 80020a6:	4661      	mov	r1, ip
 80020a8:	08cc      	lsrs	r4, r1, #3
 80020aa:	e7a2      	b.n	8001ff2 <__aeabi_dsub+0x2f6>
 80020ac:	4dc8      	ldr	r5, [pc, #800]	; (80023d0 <__aeabi_dsub+0x6d4>)
 80020ae:	42a8      	cmp	r0, r5
 80020b0:	d100      	bne.n	80020b4 <__aeabi_dsub+0x3b8>
 80020b2:	e0cf      	b.n	8002254 <__aeabi_dsub+0x558>
 80020b4:	2580      	movs	r5, #128	; 0x80
 80020b6:	4664      	mov	r4, ip
 80020b8:	042d      	lsls	r5, r5, #16
 80020ba:	432c      	orrs	r4, r5
 80020bc:	46a4      	mov	ip, r4
 80020be:	2a38      	cmp	r2, #56	; 0x38
 80020c0:	dc56      	bgt.n	8002170 <__aeabi_dsub+0x474>
 80020c2:	2a1f      	cmp	r2, #31
 80020c4:	dd00      	ble.n	80020c8 <__aeabi_dsub+0x3cc>
 80020c6:	e0d1      	b.n	800226c <__aeabi_dsub+0x570>
 80020c8:	2520      	movs	r5, #32
 80020ca:	001e      	movs	r6, r3
 80020cc:	1aad      	subs	r5, r5, r2
 80020ce:	4664      	mov	r4, ip
 80020d0:	40ab      	lsls	r3, r5
 80020d2:	40ac      	lsls	r4, r5
 80020d4:	40d6      	lsrs	r6, r2
 80020d6:	1e5d      	subs	r5, r3, #1
 80020d8:	41ab      	sbcs	r3, r5
 80020da:	4334      	orrs	r4, r6
 80020dc:	4323      	orrs	r3, r4
 80020de:	4664      	mov	r4, ip
 80020e0:	40d4      	lsrs	r4, r2
 80020e2:	1b09      	subs	r1, r1, r4
 80020e4:	e049      	b.n	800217a <__aeabi_dsub+0x47e>
 80020e6:	4660      	mov	r0, ip
 80020e8:	1bdc      	subs	r4, r3, r7
 80020ea:	1a46      	subs	r6, r0, r1
 80020ec:	42a3      	cmp	r3, r4
 80020ee:	4180      	sbcs	r0, r0
 80020f0:	4240      	negs	r0, r0
 80020f2:	4681      	mov	r9, r0
 80020f4:	0030      	movs	r0, r6
 80020f6:	464e      	mov	r6, r9
 80020f8:	1b80      	subs	r0, r0, r6
 80020fa:	4681      	mov	r9, r0
 80020fc:	0200      	lsls	r0, r0, #8
 80020fe:	d476      	bmi.n	80021ee <__aeabi_dsub+0x4f2>
 8002100:	464b      	mov	r3, r9
 8002102:	4323      	orrs	r3, r4
 8002104:	d000      	beq.n	8002108 <__aeabi_dsub+0x40c>
 8002106:	e652      	b.n	8001dae <__aeabi_dsub+0xb2>
 8002108:	2400      	movs	r4, #0
 800210a:	2500      	movs	r5, #0
 800210c:	e771      	b.n	8001ff2 <__aeabi_dsub+0x2f6>
 800210e:	4339      	orrs	r1, r7
 8002110:	000c      	movs	r4, r1
 8002112:	1e62      	subs	r2, r4, #1
 8002114:	4194      	sbcs	r4, r2
 8002116:	18e4      	adds	r4, r4, r3
 8002118:	429c      	cmp	r4, r3
 800211a:	419b      	sbcs	r3, r3
 800211c:	425b      	negs	r3, r3
 800211e:	4463      	add	r3, ip
 8002120:	4699      	mov	r9, r3
 8002122:	464b      	mov	r3, r9
 8002124:	021b      	lsls	r3, r3, #8
 8002126:	d400      	bmi.n	800212a <__aeabi_dsub+0x42e>
 8002128:	e756      	b.n	8001fd8 <__aeabi_dsub+0x2dc>
 800212a:	2301      	movs	r3, #1
 800212c:	469c      	mov	ip, r3
 800212e:	4ba8      	ldr	r3, [pc, #672]	; (80023d0 <__aeabi_dsub+0x6d4>)
 8002130:	44e0      	add	r8, ip
 8002132:	4598      	cmp	r8, r3
 8002134:	d038      	beq.n	80021a8 <__aeabi_dsub+0x4ac>
 8002136:	464b      	mov	r3, r9
 8002138:	48a6      	ldr	r0, [pc, #664]	; (80023d4 <__aeabi_dsub+0x6d8>)
 800213a:	2201      	movs	r2, #1
 800213c:	4003      	ands	r3, r0
 800213e:	0018      	movs	r0, r3
 8002140:	0863      	lsrs	r3, r4, #1
 8002142:	4014      	ands	r4, r2
 8002144:	431c      	orrs	r4, r3
 8002146:	07c3      	lsls	r3, r0, #31
 8002148:	431c      	orrs	r4, r3
 800214a:	0843      	lsrs	r3, r0, #1
 800214c:	4699      	mov	r9, r3
 800214e:	e657      	b.n	8001e00 <__aeabi_dsub+0x104>
 8002150:	0010      	movs	r0, r2
 8002152:	000e      	movs	r6, r1
 8002154:	3820      	subs	r0, #32
 8002156:	40c6      	lsrs	r6, r0
 8002158:	2a20      	cmp	r2, #32
 800215a:	d004      	beq.n	8002166 <__aeabi_dsub+0x46a>
 800215c:	2040      	movs	r0, #64	; 0x40
 800215e:	1a82      	subs	r2, r0, r2
 8002160:	4091      	lsls	r1, r2
 8002162:	430f      	orrs	r7, r1
 8002164:	46b9      	mov	r9, r7
 8002166:	464f      	mov	r7, r9
 8002168:	1e7a      	subs	r2, r7, #1
 800216a:	4197      	sbcs	r7, r2
 800216c:	4337      	orrs	r7, r6
 800216e:	e60f      	b.n	8001d90 <__aeabi_dsub+0x94>
 8002170:	4662      	mov	r2, ip
 8002172:	431a      	orrs	r2, r3
 8002174:	0013      	movs	r3, r2
 8002176:	1e5a      	subs	r2, r3, #1
 8002178:	4193      	sbcs	r3, r2
 800217a:	1afc      	subs	r4, r7, r3
 800217c:	42a7      	cmp	r7, r4
 800217e:	41bf      	sbcs	r7, r7
 8002180:	427f      	negs	r7, r7
 8002182:	1bcb      	subs	r3, r1, r7
 8002184:	4699      	mov	r9, r3
 8002186:	465d      	mov	r5, fp
 8002188:	4680      	mov	r8, r0
 800218a:	e608      	b.n	8001d9e <__aeabi_dsub+0xa2>
 800218c:	4666      	mov	r6, ip
 800218e:	431e      	orrs	r6, r3
 8002190:	d100      	bne.n	8002194 <__aeabi_dsub+0x498>
 8002192:	e0be      	b.n	8002312 <__aeabi_dsub+0x616>
 8002194:	1e56      	subs	r6, r2, #1
 8002196:	2a01      	cmp	r2, #1
 8002198:	d100      	bne.n	800219c <__aeabi_dsub+0x4a0>
 800219a:	e109      	b.n	80023b0 <__aeabi_dsub+0x6b4>
 800219c:	4c8c      	ldr	r4, [pc, #560]	; (80023d0 <__aeabi_dsub+0x6d4>)
 800219e:	42a2      	cmp	r2, r4
 80021a0:	d100      	bne.n	80021a4 <__aeabi_dsub+0x4a8>
 80021a2:	e119      	b.n	80023d8 <__aeabi_dsub+0x6dc>
 80021a4:	0032      	movs	r2, r6
 80021a6:	e6c1      	b.n	8001f2c <__aeabi_dsub+0x230>
 80021a8:	4642      	mov	r2, r8
 80021aa:	2400      	movs	r4, #0
 80021ac:	2300      	movs	r3, #0
 80021ae:	e648      	b.n	8001e42 <__aeabi_dsub+0x146>
 80021b0:	2020      	movs	r0, #32
 80021b2:	000c      	movs	r4, r1
 80021b4:	1a80      	subs	r0, r0, r2
 80021b6:	003e      	movs	r6, r7
 80021b8:	4087      	lsls	r7, r0
 80021ba:	4084      	lsls	r4, r0
 80021bc:	40d6      	lsrs	r6, r2
 80021be:	1e78      	subs	r0, r7, #1
 80021c0:	4187      	sbcs	r7, r0
 80021c2:	40d1      	lsrs	r1, r2
 80021c4:	4334      	orrs	r4, r6
 80021c6:	433c      	orrs	r4, r7
 80021c8:	448c      	add	ip, r1
 80021ca:	e7a4      	b.n	8002116 <__aeabi_dsub+0x41a>
 80021cc:	4a80      	ldr	r2, [pc, #512]	; (80023d0 <__aeabi_dsub+0x6d4>)
 80021ce:	4290      	cmp	r0, r2
 80021d0:	d100      	bne.n	80021d4 <__aeabi_dsub+0x4d8>
 80021d2:	e0e9      	b.n	80023a8 <__aeabi_dsub+0x6ac>
 80021d4:	19df      	adds	r7, r3, r7
 80021d6:	429f      	cmp	r7, r3
 80021d8:	419b      	sbcs	r3, r3
 80021da:	4461      	add	r1, ip
 80021dc:	425b      	negs	r3, r3
 80021de:	18c9      	adds	r1, r1, r3
 80021e0:	07cc      	lsls	r4, r1, #31
 80021e2:	087f      	lsrs	r7, r7, #1
 80021e4:	084b      	lsrs	r3, r1, #1
 80021e6:	4699      	mov	r9, r3
 80021e8:	4680      	mov	r8, r0
 80021ea:	433c      	orrs	r4, r7
 80021ec:	e6f4      	b.n	8001fd8 <__aeabi_dsub+0x2dc>
 80021ee:	1afc      	subs	r4, r7, r3
 80021f0:	42a7      	cmp	r7, r4
 80021f2:	41bf      	sbcs	r7, r7
 80021f4:	4663      	mov	r3, ip
 80021f6:	427f      	negs	r7, r7
 80021f8:	1ac9      	subs	r1, r1, r3
 80021fa:	1bcb      	subs	r3, r1, r7
 80021fc:	4699      	mov	r9, r3
 80021fe:	465d      	mov	r5, fp
 8002200:	e5d5      	b.n	8001dae <__aeabi_dsub+0xb2>
 8002202:	08ff      	lsrs	r7, r7, #3
 8002204:	074b      	lsls	r3, r1, #29
 8002206:	465d      	mov	r5, fp
 8002208:	433b      	orrs	r3, r7
 800220a:	08cc      	lsrs	r4, r1, #3
 800220c:	e6ee      	b.n	8001fec <__aeabi_dsub+0x2f0>
 800220e:	4662      	mov	r2, ip
 8002210:	431a      	orrs	r2, r3
 8002212:	d000      	beq.n	8002216 <__aeabi_dsub+0x51a>
 8002214:	e082      	b.n	800231c <__aeabi_dsub+0x620>
 8002216:	000b      	movs	r3, r1
 8002218:	433b      	orrs	r3, r7
 800221a:	d11b      	bne.n	8002254 <__aeabi_dsub+0x558>
 800221c:	2480      	movs	r4, #128	; 0x80
 800221e:	2500      	movs	r5, #0
 8002220:	0324      	lsls	r4, r4, #12
 8002222:	e6f9      	b.n	8002018 <__aeabi_dsub+0x31c>
 8002224:	19dc      	adds	r4, r3, r7
 8002226:	429c      	cmp	r4, r3
 8002228:	419b      	sbcs	r3, r3
 800222a:	4461      	add	r1, ip
 800222c:	4689      	mov	r9, r1
 800222e:	425b      	negs	r3, r3
 8002230:	4499      	add	r9, r3
 8002232:	464b      	mov	r3, r9
 8002234:	021b      	lsls	r3, r3, #8
 8002236:	d444      	bmi.n	80022c2 <__aeabi_dsub+0x5c6>
 8002238:	2301      	movs	r3, #1
 800223a:	4698      	mov	r8, r3
 800223c:	e6cc      	b.n	8001fd8 <__aeabi_dsub+0x2dc>
 800223e:	1bdc      	subs	r4, r3, r7
 8002240:	4662      	mov	r2, ip
 8002242:	42a3      	cmp	r3, r4
 8002244:	419b      	sbcs	r3, r3
 8002246:	1a51      	subs	r1, r2, r1
 8002248:	425b      	negs	r3, r3
 800224a:	1acb      	subs	r3, r1, r3
 800224c:	4699      	mov	r9, r3
 800224e:	2301      	movs	r3, #1
 8002250:	4698      	mov	r8, r3
 8002252:	e5a4      	b.n	8001d9e <__aeabi_dsub+0xa2>
 8002254:	08ff      	lsrs	r7, r7, #3
 8002256:	074b      	lsls	r3, r1, #29
 8002258:	465d      	mov	r5, fp
 800225a:	433b      	orrs	r3, r7
 800225c:	08cc      	lsrs	r4, r1, #3
 800225e:	e6d7      	b.n	8002010 <__aeabi_dsub+0x314>
 8002260:	4662      	mov	r2, ip
 8002262:	431a      	orrs	r2, r3
 8002264:	0014      	movs	r4, r2
 8002266:	1e63      	subs	r3, r4, #1
 8002268:	419c      	sbcs	r4, r3
 800226a:	e679      	b.n	8001f60 <__aeabi_dsub+0x264>
 800226c:	0015      	movs	r5, r2
 800226e:	4664      	mov	r4, ip
 8002270:	3d20      	subs	r5, #32
 8002272:	40ec      	lsrs	r4, r5
 8002274:	46a0      	mov	r8, r4
 8002276:	2a20      	cmp	r2, #32
 8002278:	d005      	beq.n	8002286 <__aeabi_dsub+0x58a>
 800227a:	2540      	movs	r5, #64	; 0x40
 800227c:	4664      	mov	r4, ip
 800227e:	1aaa      	subs	r2, r5, r2
 8002280:	4094      	lsls	r4, r2
 8002282:	4323      	orrs	r3, r4
 8002284:	469a      	mov	sl, r3
 8002286:	4654      	mov	r4, sl
 8002288:	1e63      	subs	r3, r4, #1
 800228a:	419c      	sbcs	r4, r3
 800228c:	4643      	mov	r3, r8
 800228e:	4323      	orrs	r3, r4
 8002290:	e773      	b.n	800217a <__aeabi_dsub+0x47e>
 8002292:	4662      	mov	r2, ip
 8002294:	431a      	orrs	r2, r3
 8002296:	d023      	beq.n	80022e0 <__aeabi_dsub+0x5e4>
 8002298:	000a      	movs	r2, r1
 800229a:	433a      	orrs	r2, r7
 800229c:	d000      	beq.n	80022a0 <__aeabi_dsub+0x5a4>
 800229e:	e0a0      	b.n	80023e2 <__aeabi_dsub+0x6e6>
 80022a0:	4662      	mov	r2, ip
 80022a2:	08db      	lsrs	r3, r3, #3
 80022a4:	0752      	lsls	r2, r2, #29
 80022a6:	4313      	orrs	r3, r2
 80022a8:	4662      	mov	r2, ip
 80022aa:	08d4      	lsrs	r4, r2, #3
 80022ac:	e6b0      	b.n	8002010 <__aeabi_dsub+0x314>
 80022ae:	000b      	movs	r3, r1
 80022b0:	433b      	orrs	r3, r7
 80022b2:	d100      	bne.n	80022b6 <__aeabi_dsub+0x5ba>
 80022b4:	e728      	b.n	8002108 <__aeabi_dsub+0x40c>
 80022b6:	08ff      	lsrs	r7, r7, #3
 80022b8:	074b      	lsls	r3, r1, #29
 80022ba:	465d      	mov	r5, fp
 80022bc:	433b      	orrs	r3, r7
 80022be:	08cc      	lsrs	r4, r1, #3
 80022c0:	e697      	b.n	8001ff2 <__aeabi_dsub+0x2f6>
 80022c2:	2302      	movs	r3, #2
 80022c4:	4698      	mov	r8, r3
 80022c6:	e736      	b.n	8002136 <__aeabi_dsub+0x43a>
 80022c8:	1afc      	subs	r4, r7, r3
 80022ca:	42a7      	cmp	r7, r4
 80022cc:	41bf      	sbcs	r7, r7
 80022ce:	4663      	mov	r3, ip
 80022d0:	427f      	negs	r7, r7
 80022d2:	1ac9      	subs	r1, r1, r3
 80022d4:	1bcb      	subs	r3, r1, r7
 80022d6:	4699      	mov	r9, r3
 80022d8:	2301      	movs	r3, #1
 80022da:	465d      	mov	r5, fp
 80022dc:	4698      	mov	r8, r3
 80022de:	e55e      	b.n	8001d9e <__aeabi_dsub+0xa2>
 80022e0:	074b      	lsls	r3, r1, #29
 80022e2:	08ff      	lsrs	r7, r7, #3
 80022e4:	433b      	orrs	r3, r7
 80022e6:	08cc      	lsrs	r4, r1, #3
 80022e8:	e692      	b.n	8002010 <__aeabi_dsub+0x314>
 80022ea:	1bdc      	subs	r4, r3, r7
 80022ec:	4660      	mov	r0, ip
 80022ee:	42a3      	cmp	r3, r4
 80022f0:	41b6      	sbcs	r6, r6
 80022f2:	1a40      	subs	r0, r0, r1
 80022f4:	4276      	negs	r6, r6
 80022f6:	1b80      	subs	r0, r0, r6
 80022f8:	4681      	mov	r9, r0
 80022fa:	0200      	lsls	r0, r0, #8
 80022fc:	d560      	bpl.n	80023c0 <__aeabi_dsub+0x6c4>
 80022fe:	1afc      	subs	r4, r7, r3
 8002300:	42a7      	cmp	r7, r4
 8002302:	41bf      	sbcs	r7, r7
 8002304:	4663      	mov	r3, ip
 8002306:	427f      	negs	r7, r7
 8002308:	1ac9      	subs	r1, r1, r3
 800230a:	1bcb      	subs	r3, r1, r7
 800230c:	4699      	mov	r9, r3
 800230e:	465d      	mov	r5, fp
 8002310:	e576      	b.n	8001e00 <__aeabi_dsub+0x104>
 8002312:	08ff      	lsrs	r7, r7, #3
 8002314:	074b      	lsls	r3, r1, #29
 8002316:	433b      	orrs	r3, r7
 8002318:	08cc      	lsrs	r4, r1, #3
 800231a:	e667      	b.n	8001fec <__aeabi_dsub+0x2f0>
 800231c:	000a      	movs	r2, r1
 800231e:	08db      	lsrs	r3, r3, #3
 8002320:	433a      	orrs	r2, r7
 8002322:	d100      	bne.n	8002326 <__aeabi_dsub+0x62a>
 8002324:	e66f      	b.n	8002006 <__aeabi_dsub+0x30a>
 8002326:	4662      	mov	r2, ip
 8002328:	0752      	lsls	r2, r2, #29
 800232a:	4313      	orrs	r3, r2
 800232c:	4662      	mov	r2, ip
 800232e:	08d4      	lsrs	r4, r2, #3
 8002330:	2280      	movs	r2, #128	; 0x80
 8002332:	0312      	lsls	r2, r2, #12
 8002334:	4214      	tst	r4, r2
 8002336:	d007      	beq.n	8002348 <__aeabi_dsub+0x64c>
 8002338:	08c8      	lsrs	r0, r1, #3
 800233a:	4210      	tst	r0, r2
 800233c:	d104      	bne.n	8002348 <__aeabi_dsub+0x64c>
 800233e:	465d      	mov	r5, fp
 8002340:	0004      	movs	r4, r0
 8002342:	08fb      	lsrs	r3, r7, #3
 8002344:	0749      	lsls	r1, r1, #29
 8002346:	430b      	orrs	r3, r1
 8002348:	0f5a      	lsrs	r2, r3, #29
 800234a:	00db      	lsls	r3, r3, #3
 800234c:	08db      	lsrs	r3, r3, #3
 800234e:	0752      	lsls	r2, r2, #29
 8002350:	4313      	orrs	r3, r2
 8002352:	e65d      	b.n	8002010 <__aeabi_dsub+0x314>
 8002354:	074b      	lsls	r3, r1, #29
 8002356:	08ff      	lsrs	r7, r7, #3
 8002358:	433b      	orrs	r3, r7
 800235a:	08cc      	lsrs	r4, r1, #3
 800235c:	e649      	b.n	8001ff2 <__aeabi_dsub+0x2f6>
 800235e:	19dc      	adds	r4, r3, r7
 8002360:	429c      	cmp	r4, r3
 8002362:	419b      	sbcs	r3, r3
 8002364:	4461      	add	r1, ip
 8002366:	4689      	mov	r9, r1
 8002368:	425b      	negs	r3, r3
 800236a:	4499      	add	r9, r3
 800236c:	464b      	mov	r3, r9
 800236e:	021b      	lsls	r3, r3, #8
 8002370:	d400      	bmi.n	8002374 <__aeabi_dsub+0x678>
 8002372:	e631      	b.n	8001fd8 <__aeabi_dsub+0x2dc>
 8002374:	464a      	mov	r2, r9
 8002376:	4b17      	ldr	r3, [pc, #92]	; (80023d4 <__aeabi_dsub+0x6d8>)
 8002378:	401a      	ands	r2, r3
 800237a:	2301      	movs	r3, #1
 800237c:	4691      	mov	r9, r2
 800237e:	4698      	mov	r8, r3
 8002380:	e62a      	b.n	8001fd8 <__aeabi_dsub+0x2dc>
 8002382:	0016      	movs	r6, r2
 8002384:	4664      	mov	r4, ip
 8002386:	3e20      	subs	r6, #32
 8002388:	40f4      	lsrs	r4, r6
 800238a:	46a0      	mov	r8, r4
 800238c:	2a20      	cmp	r2, #32
 800238e:	d005      	beq.n	800239c <__aeabi_dsub+0x6a0>
 8002390:	2640      	movs	r6, #64	; 0x40
 8002392:	4664      	mov	r4, ip
 8002394:	1ab2      	subs	r2, r6, r2
 8002396:	4094      	lsls	r4, r2
 8002398:	4323      	orrs	r3, r4
 800239a:	469a      	mov	sl, r3
 800239c:	4654      	mov	r4, sl
 800239e:	1e63      	subs	r3, r4, #1
 80023a0:	419c      	sbcs	r4, r3
 80023a2:	4643      	mov	r3, r8
 80023a4:	431c      	orrs	r4, r3
 80023a6:	e5db      	b.n	8001f60 <__aeabi_dsub+0x264>
 80023a8:	0002      	movs	r2, r0
 80023aa:	2400      	movs	r4, #0
 80023ac:	2300      	movs	r3, #0
 80023ae:	e548      	b.n	8001e42 <__aeabi_dsub+0x146>
 80023b0:	19dc      	adds	r4, r3, r7
 80023b2:	42bc      	cmp	r4, r7
 80023b4:	41bf      	sbcs	r7, r7
 80023b6:	4461      	add	r1, ip
 80023b8:	4689      	mov	r9, r1
 80023ba:	427f      	negs	r7, r7
 80023bc:	44b9      	add	r9, r7
 80023be:	e738      	b.n	8002232 <__aeabi_dsub+0x536>
 80023c0:	464b      	mov	r3, r9
 80023c2:	4323      	orrs	r3, r4
 80023c4:	d100      	bne.n	80023c8 <__aeabi_dsub+0x6cc>
 80023c6:	e69f      	b.n	8002108 <__aeabi_dsub+0x40c>
 80023c8:	e606      	b.n	8001fd8 <__aeabi_dsub+0x2dc>
 80023ca:	46c0      	nop			; (mov r8, r8)
 80023cc:	000007fe 	.word	0x000007fe
 80023d0:	000007ff 	.word	0x000007ff
 80023d4:	ff7fffff 	.word	0xff7fffff
 80023d8:	08ff      	lsrs	r7, r7, #3
 80023da:	074b      	lsls	r3, r1, #29
 80023dc:	433b      	orrs	r3, r7
 80023de:	08cc      	lsrs	r4, r1, #3
 80023e0:	e616      	b.n	8002010 <__aeabi_dsub+0x314>
 80023e2:	4662      	mov	r2, ip
 80023e4:	08db      	lsrs	r3, r3, #3
 80023e6:	0752      	lsls	r2, r2, #29
 80023e8:	4313      	orrs	r3, r2
 80023ea:	4662      	mov	r2, ip
 80023ec:	08d4      	lsrs	r4, r2, #3
 80023ee:	2280      	movs	r2, #128	; 0x80
 80023f0:	0312      	lsls	r2, r2, #12
 80023f2:	4214      	tst	r4, r2
 80023f4:	d007      	beq.n	8002406 <__aeabi_dsub+0x70a>
 80023f6:	08c8      	lsrs	r0, r1, #3
 80023f8:	4210      	tst	r0, r2
 80023fa:	d104      	bne.n	8002406 <__aeabi_dsub+0x70a>
 80023fc:	465d      	mov	r5, fp
 80023fe:	0004      	movs	r4, r0
 8002400:	08fb      	lsrs	r3, r7, #3
 8002402:	0749      	lsls	r1, r1, #29
 8002404:	430b      	orrs	r3, r1
 8002406:	0f5a      	lsrs	r2, r3, #29
 8002408:	00db      	lsls	r3, r3, #3
 800240a:	0752      	lsls	r2, r2, #29
 800240c:	08db      	lsrs	r3, r3, #3
 800240e:	4313      	orrs	r3, r2
 8002410:	e5fe      	b.n	8002010 <__aeabi_dsub+0x314>
 8002412:	2300      	movs	r3, #0
 8002414:	4a01      	ldr	r2, [pc, #4]	; (800241c <__aeabi_dsub+0x720>)
 8002416:	001c      	movs	r4, r3
 8002418:	e513      	b.n	8001e42 <__aeabi_dsub+0x146>
 800241a:	46c0      	nop			; (mov r8, r8)
 800241c:	000007ff 	.word	0x000007ff

08002420 <__aeabi_dcmpun>:
 8002420:	b570      	push	{r4, r5, r6, lr}
 8002422:	0005      	movs	r5, r0
 8002424:	480c      	ldr	r0, [pc, #48]	; (8002458 <__aeabi_dcmpun+0x38>)
 8002426:	031c      	lsls	r4, r3, #12
 8002428:	0016      	movs	r6, r2
 800242a:	005b      	lsls	r3, r3, #1
 800242c:	030a      	lsls	r2, r1, #12
 800242e:	0049      	lsls	r1, r1, #1
 8002430:	0b12      	lsrs	r2, r2, #12
 8002432:	0d49      	lsrs	r1, r1, #21
 8002434:	0b24      	lsrs	r4, r4, #12
 8002436:	0d5b      	lsrs	r3, r3, #21
 8002438:	4281      	cmp	r1, r0
 800243a:	d008      	beq.n	800244e <__aeabi_dcmpun+0x2e>
 800243c:	4a06      	ldr	r2, [pc, #24]	; (8002458 <__aeabi_dcmpun+0x38>)
 800243e:	2000      	movs	r0, #0
 8002440:	4293      	cmp	r3, r2
 8002442:	d103      	bne.n	800244c <__aeabi_dcmpun+0x2c>
 8002444:	0020      	movs	r0, r4
 8002446:	4330      	orrs	r0, r6
 8002448:	1e43      	subs	r3, r0, #1
 800244a:	4198      	sbcs	r0, r3
 800244c:	bd70      	pop	{r4, r5, r6, pc}
 800244e:	2001      	movs	r0, #1
 8002450:	432a      	orrs	r2, r5
 8002452:	d1fb      	bne.n	800244c <__aeabi_dcmpun+0x2c>
 8002454:	e7f2      	b.n	800243c <__aeabi_dcmpun+0x1c>
 8002456:	46c0      	nop			; (mov r8, r8)
 8002458:	000007ff 	.word	0x000007ff

0800245c <__aeabi_d2iz>:
 800245c:	000a      	movs	r2, r1
 800245e:	b530      	push	{r4, r5, lr}
 8002460:	4c13      	ldr	r4, [pc, #76]	; (80024b0 <__aeabi_d2iz+0x54>)
 8002462:	0053      	lsls	r3, r2, #1
 8002464:	0309      	lsls	r1, r1, #12
 8002466:	0005      	movs	r5, r0
 8002468:	0b09      	lsrs	r1, r1, #12
 800246a:	2000      	movs	r0, #0
 800246c:	0d5b      	lsrs	r3, r3, #21
 800246e:	0fd2      	lsrs	r2, r2, #31
 8002470:	42a3      	cmp	r3, r4
 8002472:	dd04      	ble.n	800247e <__aeabi_d2iz+0x22>
 8002474:	480f      	ldr	r0, [pc, #60]	; (80024b4 <__aeabi_d2iz+0x58>)
 8002476:	4283      	cmp	r3, r0
 8002478:	dd02      	ble.n	8002480 <__aeabi_d2iz+0x24>
 800247a:	4b0f      	ldr	r3, [pc, #60]	; (80024b8 <__aeabi_d2iz+0x5c>)
 800247c:	18d0      	adds	r0, r2, r3
 800247e:	bd30      	pop	{r4, r5, pc}
 8002480:	2080      	movs	r0, #128	; 0x80
 8002482:	0340      	lsls	r0, r0, #13
 8002484:	4301      	orrs	r1, r0
 8002486:	480d      	ldr	r0, [pc, #52]	; (80024bc <__aeabi_d2iz+0x60>)
 8002488:	1ac0      	subs	r0, r0, r3
 800248a:	281f      	cmp	r0, #31
 800248c:	dd08      	ble.n	80024a0 <__aeabi_d2iz+0x44>
 800248e:	480c      	ldr	r0, [pc, #48]	; (80024c0 <__aeabi_d2iz+0x64>)
 8002490:	1ac3      	subs	r3, r0, r3
 8002492:	40d9      	lsrs	r1, r3
 8002494:	000b      	movs	r3, r1
 8002496:	4258      	negs	r0, r3
 8002498:	2a00      	cmp	r2, #0
 800249a:	d1f0      	bne.n	800247e <__aeabi_d2iz+0x22>
 800249c:	0018      	movs	r0, r3
 800249e:	e7ee      	b.n	800247e <__aeabi_d2iz+0x22>
 80024a0:	4c08      	ldr	r4, [pc, #32]	; (80024c4 <__aeabi_d2iz+0x68>)
 80024a2:	40c5      	lsrs	r5, r0
 80024a4:	46a4      	mov	ip, r4
 80024a6:	4463      	add	r3, ip
 80024a8:	4099      	lsls	r1, r3
 80024aa:	000b      	movs	r3, r1
 80024ac:	432b      	orrs	r3, r5
 80024ae:	e7f2      	b.n	8002496 <__aeabi_d2iz+0x3a>
 80024b0:	000003fe 	.word	0x000003fe
 80024b4:	0000041d 	.word	0x0000041d
 80024b8:	7fffffff 	.word	0x7fffffff
 80024bc:	00000433 	.word	0x00000433
 80024c0:	00000413 	.word	0x00000413
 80024c4:	fffffbed 	.word	0xfffffbed

080024c8 <__aeabi_i2d>:
 80024c8:	b570      	push	{r4, r5, r6, lr}
 80024ca:	2800      	cmp	r0, #0
 80024cc:	d016      	beq.n	80024fc <__aeabi_i2d+0x34>
 80024ce:	17c3      	asrs	r3, r0, #31
 80024d0:	18c5      	adds	r5, r0, r3
 80024d2:	405d      	eors	r5, r3
 80024d4:	0fc4      	lsrs	r4, r0, #31
 80024d6:	0028      	movs	r0, r5
 80024d8:	f000 f894 	bl	8002604 <__clzsi2>
 80024dc:	4a11      	ldr	r2, [pc, #68]	; (8002524 <__aeabi_i2d+0x5c>)
 80024de:	1a12      	subs	r2, r2, r0
 80024e0:	280a      	cmp	r0, #10
 80024e2:	dc16      	bgt.n	8002512 <__aeabi_i2d+0x4a>
 80024e4:	0003      	movs	r3, r0
 80024e6:	002e      	movs	r6, r5
 80024e8:	3315      	adds	r3, #21
 80024ea:	409e      	lsls	r6, r3
 80024ec:	230b      	movs	r3, #11
 80024ee:	1a18      	subs	r0, r3, r0
 80024f0:	40c5      	lsrs	r5, r0
 80024f2:	0552      	lsls	r2, r2, #21
 80024f4:	032d      	lsls	r5, r5, #12
 80024f6:	0b2d      	lsrs	r5, r5, #12
 80024f8:	0d53      	lsrs	r3, r2, #21
 80024fa:	e003      	b.n	8002504 <__aeabi_i2d+0x3c>
 80024fc:	2400      	movs	r4, #0
 80024fe:	2300      	movs	r3, #0
 8002500:	2500      	movs	r5, #0
 8002502:	2600      	movs	r6, #0
 8002504:	051b      	lsls	r3, r3, #20
 8002506:	432b      	orrs	r3, r5
 8002508:	07e4      	lsls	r4, r4, #31
 800250a:	4323      	orrs	r3, r4
 800250c:	0030      	movs	r0, r6
 800250e:	0019      	movs	r1, r3
 8002510:	bd70      	pop	{r4, r5, r6, pc}
 8002512:	380b      	subs	r0, #11
 8002514:	4085      	lsls	r5, r0
 8002516:	0552      	lsls	r2, r2, #21
 8002518:	032d      	lsls	r5, r5, #12
 800251a:	2600      	movs	r6, #0
 800251c:	0b2d      	lsrs	r5, r5, #12
 800251e:	0d53      	lsrs	r3, r2, #21
 8002520:	e7f0      	b.n	8002504 <__aeabi_i2d+0x3c>
 8002522:	46c0      	nop			; (mov r8, r8)
 8002524:	0000041e 	.word	0x0000041e

08002528 <__aeabi_ui2d>:
 8002528:	b510      	push	{r4, lr}
 800252a:	1e04      	subs	r4, r0, #0
 800252c:	d010      	beq.n	8002550 <__aeabi_ui2d+0x28>
 800252e:	f000 f869 	bl	8002604 <__clzsi2>
 8002532:	4b0f      	ldr	r3, [pc, #60]	; (8002570 <__aeabi_ui2d+0x48>)
 8002534:	1a1b      	subs	r3, r3, r0
 8002536:	280a      	cmp	r0, #10
 8002538:	dc11      	bgt.n	800255e <__aeabi_ui2d+0x36>
 800253a:	220b      	movs	r2, #11
 800253c:	0021      	movs	r1, r4
 800253e:	1a12      	subs	r2, r2, r0
 8002540:	40d1      	lsrs	r1, r2
 8002542:	3015      	adds	r0, #21
 8002544:	030a      	lsls	r2, r1, #12
 8002546:	055b      	lsls	r3, r3, #21
 8002548:	4084      	lsls	r4, r0
 800254a:	0b12      	lsrs	r2, r2, #12
 800254c:	0d5b      	lsrs	r3, r3, #21
 800254e:	e001      	b.n	8002554 <__aeabi_ui2d+0x2c>
 8002550:	2300      	movs	r3, #0
 8002552:	2200      	movs	r2, #0
 8002554:	051b      	lsls	r3, r3, #20
 8002556:	4313      	orrs	r3, r2
 8002558:	0020      	movs	r0, r4
 800255a:	0019      	movs	r1, r3
 800255c:	bd10      	pop	{r4, pc}
 800255e:	0022      	movs	r2, r4
 8002560:	380b      	subs	r0, #11
 8002562:	4082      	lsls	r2, r0
 8002564:	055b      	lsls	r3, r3, #21
 8002566:	0312      	lsls	r2, r2, #12
 8002568:	2400      	movs	r4, #0
 800256a:	0b12      	lsrs	r2, r2, #12
 800256c:	0d5b      	lsrs	r3, r3, #21
 800256e:	e7f1      	b.n	8002554 <__aeabi_ui2d+0x2c>
 8002570:	0000041e 	.word	0x0000041e

08002574 <__aeabi_f2d>:
 8002574:	b570      	push	{r4, r5, r6, lr}
 8002576:	0043      	lsls	r3, r0, #1
 8002578:	0246      	lsls	r6, r0, #9
 800257a:	0fc4      	lsrs	r4, r0, #31
 800257c:	20fe      	movs	r0, #254	; 0xfe
 800257e:	0e1b      	lsrs	r3, r3, #24
 8002580:	1c59      	adds	r1, r3, #1
 8002582:	0a75      	lsrs	r5, r6, #9
 8002584:	4208      	tst	r0, r1
 8002586:	d00c      	beq.n	80025a2 <__aeabi_f2d+0x2e>
 8002588:	22e0      	movs	r2, #224	; 0xe0
 800258a:	0092      	lsls	r2, r2, #2
 800258c:	4694      	mov	ip, r2
 800258e:	076d      	lsls	r5, r5, #29
 8002590:	0b36      	lsrs	r6, r6, #12
 8002592:	4463      	add	r3, ip
 8002594:	051b      	lsls	r3, r3, #20
 8002596:	4333      	orrs	r3, r6
 8002598:	07e4      	lsls	r4, r4, #31
 800259a:	4323      	orrs	r3, r4
 800259c:	0028      	movs	r0, r5
 800259e:	0019      	movs	r1, r3
 80025a0:	bd70      	pop	{r4, r5, r6, pc}
 80025a2:	2b00      	cmp	r3, #0
 80025a4:	d114      	bne.n	80025d0 <__aeabi_f2d+0x5c>
 80025a6:	2d00      	cmp	r5, #0
 80025a8:	d01b      	beq.n	80025e2 <__aeabi_f2d+0x6e>
 80025aa:	0028      	movs	r0, r5
 80025ac:	f000 f82a 	bl	8002604 <__clzsi2>
 80025b0:	280a      	cmp	r0, #10
 80025b2:	dc1c      	bgt.n	80025ee <__aeabi_f2d+0x7a>
 80025b4:	230b      	movs	r3, #11
 80025b6:	002e      	movs	r6, r5
 80025b8:	1a1b      	subs	r3, r3, r0
 80025ba:	40de      	lsrs	r6, r3
 80025bc:	0003      	movs	r3, r0
 80025be:	3315      	adds	r3, #21
 80025c0:	409d      	lsls	r5, r3
 80025c2:	4a0e      	ldr	r2, [pc, #56]	; (80025fc <__aeabi_f2d+0x88>)
 80025c4:	0336      	lsls	r6, r6, #12
 80025c6:	1a12      	subs	r2, r2, r0
 80025c8:	0552      	lsls	r2, r2, #21
 80025ca:	0b36      	lsrs	r6, r6, #12
 80025cc:	0d53      	lsrs	r3, r2, #21
 80025ce:	e7e1      	b.n	8002594 <__aeabi_f2d+0x20>
 80025d0:	2d00      	cmp	r5, #0
 80025d2:	d009      	beq.n	80025e8 <__aeabi_f2d+0x74>
 80025d4:	2280      	movs	r2, #128	; 0x80
 80025d6:	0b36      	lsrs	r6, r6, #12
 80025d8:	0312      	lsls	r2, r2, #12
 80025da:	4b09      	ldr	r3, [pc, #36]	; (8002600 <__aeabi_f2d+0x8c>)
 80025dc:	076d      	lsls	r5, r5, #29
 80025de:	4316      	orrs	r6, r2
 80025e0:	e7d8      	b.n	8002594 <__aeabi_f2d+0x20>
 80025e2:	2300      	movs	r3, #0
 80025e4:	2600      	movs	r6, #0
 80025e6:	e7d5      	b.n	8002594 <__aeabi_f2d+0x20>
 80025e8:	2600      	movs	r6, #0
 80025ea:	4b05      	ldr	r3, [pc, #20]	; (8002600 <__aeabi_f2d+0x8c>)
 80025ec:	e7d2      	b.n	8002594 <__aeabi_f2d+0x20>
 80025ee:	0003      	movs	r3, r0
 80025f0:	3b0b      	subs	r3, #11
 80025f2:	409d      	lsls	r5, r3
 80025f4:	002e      	movs	r6, r5
 80025f6:	2500      	movs	r5, #0
 80025f8:	e7e3      	b.n	80025c2 <__aeabi_f2d+0x4e>
 80025fa:	46c0      	nop			; (mov r8, r8)
 80025fc:	00000389 	.word	0x00000389
 8002600:	000007ff 	.word	0x000007ff

08002604 <__clzsi2>:
 8002604:	211c      	movs	r1, #28
 8002606:	2301      	movs	r3, #1
 8002608:	041b      	lsls	r3, r3, #16
 800260a:	4298      	cmp	r0, r3
 800260c:	d301      	bcc.n	8002612 <__clzsi2+0xe>
 800260e:	0c00      	lsrs	r0, r0, #16
 8002610:	3910      	subs	r1, #16
 8002612:	0a1b      	lsrs	r3, r3, #8
 8002614:	4298      	cmp	r0, r3
 8002616:	d301      	bcc.n	800261c <__clzsi2+0x18>
 8002618:	0a00      	lsrs	r0, r0, #8
 800261a:	3908      	subs	r1, #8
 800261c:	091b      	lsrs	r3, r3, #4
 800261e:	4298      	cmp	r0, r3
 8002620:	d301      	bcc.n	8002626 <__clzsi2+0x22>
 8002622:	0900      	lsrs	r0, r0, #4
 8002624:	3904      	subs	r1, #4
 8002626:	a202      	add	r2, pc, #8	; (adr r2, 8002630 <__clzsi2+0x2c>)
 8002628:	5c10      	ldrb	r0, [r2, r0]
 800262a:	1840      	adds	r0, r0, r1
 800262c:	4770      	bx	lr
 800262e:	46c0      	nop			; (mov r8, r8)
 8002630:	02020304 	.word	0x02020304
 8002634:	01010101 	.word	0x01010101
	...

08002640 <__clzdi2>:
 8002640:	b510      	push	{r4, lr}
 8002642:	2900      	cmp	r1, #0
 8002644:	d103      	bne.n	800264e <__clzdi2+0xe>
 8002646:	f7ff ffdd 	bl	8002604 <__clzsi2>
 800264a:	3020      	adds	r0, #32
 800264c:	e002      	b.n	8002654 <__clzdi2+0x14>
 800264e:	0008      	movs	r0, r1
 8002650:	f7ff ffd8 	bl	8002604 <__clzsi2>
 8002654:	bd10      	pop	{r4, pc}
 8002656:	46c0      	nop			; (mov r8, r8)

08002658 <timer7_config>:
	}
}

uint32_t Ticks = 0;
uint8_t strVal[50] = { 0 };
void timer7_config(uint16_t auto_reload_val, uint16_t prescaler_val) {
 8002658:	b580      	push	{r7, lr}
 800265a:	b082      	sub	sp, #8
 800265c:	af00      	add	r7, sp, #0
 800265e:	0002      	movs	r2, r0
 8002660:	1dbb      	adds	r3, r7, #6
 8002662:	801a      	strh	r2, [r3, #0]
 8002664:	1d3b      	adds	r3, r7, #4
 8002666:	1c0a      	adds	r2, r1, #0
 8002668:	801a      	strh	r2, [r3, #0]
	RCC->APB1ENR |= RCC_APB1ENR_TIM7EN;
 800266a:	4b09      	ldr	r3, [pc, #36]	; (8002690 <timer7_config+0x38>)
 800266c:	69da      	ldr	r2, [r3, #28]
 800266e:	4b08      	ldr	r3, [pc, #32]	; (8002690 <timer7_config+0x38>)
 8002670:	2120      	movs	r1, #32
 8002672:	430a      	orrs	r2, r1
 8002674:	61da      	str	r2, [r3, #28]

	TIM7->ARR = auto_reload_val; // fill auto-reload register with value: auto_reload_val
 8002676:	4b07      	ldr	r3, [pc, #28]	; (8002694 <timer7_config+0x3c>)
 8002678:	1dba      	adds	r2, r7, #6
 800267a:	8812      	ldrh	r2, [r2, #0]
 800267c:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM7->PSC = prescaler_val; // fill prescale value register with value: prescaler_val.
 800267e:	4b05      	ldr	r3, [pc, #20]	; (8002694 <timer7_config+0x3c>)
 8002680:	1d3a      	adds	r2, r7, #4
 8002682:	8812      	ldrh	r2, [r2, #0]
 8002684:	629a      	str	r2, [r3, #40]	; 0x28
}
 8002686:	46c0      	nop			; (mov r8, r8)
 8002688:	46bd      	mov	sp, r7
 800268a:	b002      	add	sp, #8
 800268c:	bd80      	pop	{r7, pc}
 800268e:	46c0      	nop			; (mov r8, r8)
 8002690:	40021000 	.word	0x40021000
 8002694:	40001400 	.word	0x40001400

08002698 <Ticks7_timer>:

void Ticks7_timer() {			// similar to millis
 8002698:	b580      	push	{r7, lr}
 800269a:	af00      	add	r7, sp, #0

	timer7_config(0xFFFF - 1, 0);
 800269c:	4b06      	ldr	r3, [pc, #24]	; (80026b8 <Ticks7_timer+0x20>)
 800269e:	2100      	movs	r1, #0
 80026a0:	0018      	movs	r0, r3
 80026a2:	f7ff ffd9 	bl	8002658 <timer7_config>
	TIM7->CR1 |= TIM_CR1_CEN;
 80026a6:	4b05      	ldr	r3, [pc, #20]	; (80026bc <Ticks7_timer+0x24>)
 80026a8:	681a      	ldr	r2, [r3, #0]
 80026aa:	4b04      	ldr	r3, [pc, #16]	; (80026bc <Ticks7_timer+0x24>)
 80026ac:	2101      	movs	r1, #1
 80026ae:	430a      	orrs	r2, r1
 80026b0:	601a      	str	r2, [r3, #0]
}
 80026b2:	46c0      	nop			; (mov r8, r8)
 80026b4:	46bd      	mov	sp, r7
 80026b6:	bd80      	pop	{r7, pc}
 80026b8:	0000fffe 	.word	0x0000fffe
 80026bc:	40001400 	.word	0x40001400

080026c0 <tim64bit>:
uint32_t Timer7_cnt_val() {
	uint32_t val = TIM7->CNT;		// counter register value
	return val;
}

void tim64bit() {
 80026c0:	b580      	push	{r7, lr}
 80026c2:	af00      	add	r7, sp, #0
	USART_WRITE(USART2, "//===| 64-bit Num |===//\n\r", 26);
 80026c4:	4b9f      	ldr	r3, [pc, #636]	; (8002944 <tim64bit+0x284>)
 80026c6:	48a0      	ldr	r0, [pc, #640]	; (8002948 <tim64bit+0x288>)
 80026c8:	221a      	movs	r2, #26
 80026ca:	0019      	movs	r1, r3
 80026cc:	f001 ff72 	bl	80045b4 <USART_WRITE>
	a = 0, b = 0, c = 0;
 80026d0:	499e      	ldr	r1, [pc, #632]	; (800294c <tim64bit+0x28c>)
 80026d2:	2200      	movs	r2, #0
 80026d4:	2300      	movs	r3, #0
 80026d6:	600a      	str	r2, [r1, #0]
 80026d8:	604b      	str	r3, [r1, #4]
 80026da:	499d      	ldr	r1, [pc, #628]	; (8002950 <tim64bit+0x290>)
 80026dc:	2200      	movs	r2, #0
 80026de:	2300      	movs	r3, #0
 80026e0:	600a      	str	r2, [r1, #0]
 80026e2:	604b      	str	r3, [r1, #4]
 80026e4:	499b      	ldr	r1, [pc, #620]	; (8002954 <tim64bit+0x294>)
 80026e6:	2200      	movs	r2, #0
 80026e8:	2300      	movs	r3, #0
 80026ea:	600a      	str	r2, [r1, #0]
 80026ec:	604b      	str	r3, [r1, #4]

	a = 0xFFFFFFFFFF;
 80026ee:	4997      	ldr	r1, [pc, #604]	; (800294c <tim64bit+0x28c>)
 80026f0:	2201      	movs	r2, #1
 80026f2:	4252      	negs	r2, r2
 80026f4:	23ff      	movs	r3, #255	; 0xff
 80026f6:	600a      	str	r2, [r1, #0]
 80026f8:	604b      	str	r3, [r1, #4]
	b = 0xFFFFFFFFFF;
 80026fa:	4995      	ldr	r1, [pc, #596]	; (8002950 <tim64bit+0x290>)
 80026fc:	2201      	movs	r2, #1
 80026fe:	4252      	negs	r2, r2
 8002700:	23ff      	movs	r3, #255	; 0xff
 8002702:	600a      	str	r2, [r1, #0]
 8002704:	604b      	str	r3, [r1, #4]
	timStart = TIM7->CNT;
 8002706:	4b94      	ldr	r3, [pc, #592]	; (8002958 <tim64bit+0x298>)
 8002708:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800270a:	b29a      	uxth	r2, r3
 800270c:	4b93      	ldr	r3, [pc, #588]	; (800295c <tim64bit+0x29c>)
 800270e:	801a      	strh	r2, [r3, #0]
	c = a + b;
 8002710:	4b8e      	ldr	r3, [pc, #568]	; (800294c <tim64bit+0x28c>)
 8002712:	6818      	ldr	r0, [r3, #0]
 8002714:	6859      	ldr	r1, [r3, #4]
 8002716:	4b8e      	ldr	r3, [pc, #568]	; (8002950 <tim64bit+0x290>)
 8002718:	681a      	ldr	r2, [r3, #0]
 800271a:	685b      	ldr	r3, [r3, #4]
 800271c:	1812      	adds	r2, r2, r0
 800271e:	414b      	adcs	r3, r1
 8002720:	498c      	ldr	r1, [pc, #560]	; (8002954 <tim64bit+0x294>)
 8002722:	600a      	str	r2, [r1, #0]
 8002724:	604b      	str	r3, [r1, #4]
	timEnd = TIM7->CNT;
 8002726:	4b8c      	ldr	r3, [pc, #560]	; (8002958 <tim64bit+0x298>)
 8002728:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800272a:	b29a      	uxth	r2, r3
 800272c:	4b8c      	ldr	r3, [pc, #560]	; (8002960 <tim64bit+0x2a0>)
 800272e:	801a      	strh	r2, [r3, #0]
//	print64bitu(c);
	timLap = ((float)(timEnd - timStart)) / 48;
 8002730:	4b8b      	ldr	r3, [pc, #556]	; (8002960 <tim64bit+0x2a0>)
 8002732:	881b      	ldrh	r3, [r3, #0]
 8002734:	001a      	movs	r2, r3
 8002736:	4b89      	ldr	r3, [pc, #548]	; (800295c <tim64bit+0x29c>)
 8002738:	881b      	ldrh	r3, [r3, #0]
 800273a:	1ad3      	subs	r3, r2, r3
 800273c:	0018      	movs	r0, r3
 800273e:	f7fe f8e5 	bl	800090c <__aeabi_i2f>
 8002742:	1c03      	adds	r3, r0, #0
 8002744:	4987      	ldr	r1, [pc, #540]	; (8002964 <tim64bit+0x2a4>)
 8002746:	1c18      	adds	r0, r3, #0
 8002748:	f7fd ffc8 	bl	80006dc <__aeabi_fdiv>
 800274c:	1c03      	adds	r3, r0, #0
 800274e:	1c18      	adds	r0, r3, #0
 8002750:	f7ff ff10 	bl	8002574 <__aeabi_f2d>
 8002754:	0002      	movs	r2, r0
 8002756:	000b      	movs	r3, r1
 8002758:	4983      	ldr	r1, [pc, #524]	; (8002968 <tim64bit+0x2a8>)
 800275a:	600a      	str	r2, [r1, #0]
 800275c:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(ADD): %0.5fus\n", timLap);
 800275e:	4b82      	ldr	r3, [pc, #520]	; (8002968 <tim64bit+0x2a8>)
 8002760:	681a      	ldr	r2, [r3, #0]
 8002762:	685b      	ldr	r3, [r3, #4]
 8002764:	4981      	ldr	r1, [pc, #516]	; (800296c <tim64bit+0x2ac>)
 8002766:	4882      	ldr	r0, [pc, #520]	; (8002970 <tim64bit+0x2b0>)
 8002768:	f002 fc4c 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 800276c:	4b80      	ldr	r3, [pc, #512]	; (8002970 <tim64bit+0x2b0>)
 800276e:	0018      	movs	r0, r3
 8002770:	f7fd fcca 	bl	8000108 <strlen>
 8002774:	0002      	movs	r2, r0
 8002776:	4b7e      	ldr	r3, [pc, #504]	; (8002970 <tim64bit+0x2b0>)
 8002778:	4873      	ldr	r0, [pc, #460]	; (8002948 <tim64bit+0x288>)
 800277a:	0019      	movs	r1, r3
 800277c:	f001 ff1a 	bl	80045b4 <USART_WRITE>


	a = 0xFFFFFFFFFF;
 8002780:	4972      	ldr	r1, [pc, #456]	; (800294c <tim64bit+0x28c>)
 8002782:	2201      	movs	r2, #1
 8002784:	4252      	negs	r2, r2
 8002786:	23ff      	movs	r3, #255	; 0xff
 8002788:	600a      	str	r2, [r1, #0]
 800278a:	604b      	str	r3, [r1, #4]
	b = 0xFFFFFFFFFE;
 800278c:	4970      	ldr	r1, [pc, #448]	; (8002950 <tim64bit+0x290>)
 800278e:	2202      	movs	r2, #2
 8002790:	4252      	negs	r2, r2
 8002792:	23ff      	movs	r3, #255	; 0xff
 8002794:	600a      	str	r2, [r1, #0]
 8002796:	604b      	str	r3, [r1, #4]
	timStart = TIM7->CNT;
 8002798:	4b6f      	ldr	r3, [pc, #444]	; (8002958 <tim64bit+0x298>)
 800279a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800279c:	b29a      	uxth	r2, r3
 800279e:	4b6f      	ldr	r3, [pc, #444]	; (800295c <tim64bit+0x29c>)
 80027a0:	801a      	strh	r2, [r3, #0]
	c = a - b;
 80027a2:	4b6a      	ldr	r3, [pc, #424]	; (800294c <tim64bit+0x28c>)
 80027a4:	6818      	ldr	r0, [r3, #0]
 80027a6:	6859      	ldr	r1, [r3, #4]
 80027a8:	4b69      	ldr	r3, [pc, #420]	; (8002950 <tim64bit+0x290>)
 80027aa:	681a      	ldr	r2, [r3, #0]
 80027ac:	685b      	ldr	r3, [r3, #4]
 80027ae:	1a80      	subs	r0, r0, r2
 80027b0:	4199      	sbcs	r1, r3
 80027b2:	0002      	movs	r2, r0
 80027b4:	000b      	movs	r3, r1
 80027b6:	4967      	ldr	r1, [pc, #412]	; (8002954 <tim64bit+0x294>)
 80027b8:	600a      	str	r2, [r1, #0]
 80027ba:	604b      	str	r3, [r1, #4]
	timEnd = TIM7->CNT;
 80027bc:	4b66      	ldr	r3, [pc, #408]	; (8002958 <tim64bit+0x298>)
 80027be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027c0:	b29a      	uxth	r2, r3
 80027c2:	4b67      	ldr	r3, [pc, #412]	; (8002960 <tim64bit+0x2a0>)
 80027c4:	801a      	strh	r2, [r3, #0]
//	print64bitu(c);
	timLap = ((float)(timEnd - timStart)) / 48;
 80027c6:	4b66      	ldr	r3, [pc, #408]	; (8002960 <tim64bit+0x2a0>)
 80027c8:	881b      	ldrh	r3, [r3, #0]
 80027ca:	001a      	movs	r2, r3
 80027cc:	4b63      	ldr	r3, [pc, #396]	; (800295c <tim64bit+0x29c>)
 80027ce:	881b      	ldrh	r3, [r3, #0]
 80027d0:	1ad3      	subs	r3, r2, r3
 80027d2:	0018      	movs	r0, r3
 80027d4:	f7fe f89a 	bl	800090c <__aeabi_i2f>
 80027d8:	1c03      	adds	r3, r0, #0
 80027da:	4962      	ldr	r1, [pc, #392]	; (8002964 <tim64bit+0x2a4>)
 80027dc:	1c18      	adds	r0, r3, #0
 80027de:	f7fd ff7d 	bl	80006dc <__aeabi_fdiv>
 80027e2:	1c03      	adds	r3, r0, #0
 80027e4:	1c18      	adds	r0, r3, #0
 80027e6:	f7ff fec5 	bl	8002574 <__aeabi_f2d>
 80027ea:	0002      	movs	r2, r0
 80027ec:	000b      	movs	r3, r1
 80027ee:	495e      	ldr	r1, [pc, #376]	; (8002968 <tim64bit+0x2a8>)
 80027f0:	600a      	str	r2, [r1, #0]
 80027f2:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(SUB): %0.5fus\n", timLap);
 80027f4:	4b5c      	ldr	r3, [pc, #368]	; (8002968 <tim64bit+0x2a8>)
 80027f6:	681a      	ldr	r2, [r3, #0]
 80027f8:	685b      	ldr	r3, [r3, #4]
 80027fa:	495e      	ldr	r1, [pc, #376]	; (8002974 <tim64bit+0x2b4>)
 80027fc:	485c      	ldr	r0, [pc, #368]	; (8002970 <tim64bit+0x2b0>)
 80027fe:	f002 fc01 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002802:	4b5b      	ldr	r3, [pc, #364]	; (8002970 <tim64bit+0x2b0>)
 8002804:	0018      	movs	r0, r3
 8002806:	f7fd fc7f 	bl	8000108 <strlen>
 800280a:	0002      	movs	r2, r0
 800280c:	4b58      	ldr	r3, [pc, #352]	; (8002970 <tim64bit+0x2b0>)
 800280e:	484e      	ldr	r0, [pc, #312]	; (8002948 <tim64bit+0x288>)
 8002810:	0019      	movs	r1, r3
 8002812:	f001 fecf 	bl	80045b4 <USART_WRITE>


	a = 0xFFFFFF;
 8002816:	494d      	ldr	r1, [pc, #308]	; (800294c <tim64bit+0x28c>)
 8002818:	4a57      	ldr	r2, [pc, #348]	; (8002978 <tim64bit+0x2b8>)
 800281a:	2300      	movs	r3, #0
 800281c:	600a      	str	r2, [r1, #0]
 800281e:	604b      	str	r3, [r1, #4]
	b = 0xFFFFFF;
 8002820:	494b      	ldr	r1, [pc, #300]	; (8002950 <tim64bit+0x290>)
 8002822:	4a55      	ldr	r2, [pc, #340]	; (8002978 <tim64bit+0x2b8>)
 8002824:	2300      	movs	r3, #0
 8002826:	600a      	str	r2, [r1, #0]
 8002828:	604b      	str	r3, [r1, #4]
	timStart = TIM7->CNT;
 800282a:	4b4b      	ldr	r3, [pc, #300]	; (8002958 <tim64bit+0x298>)
 800282c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800282e:	b29a      	uxth	r2, r3
 8002830:	4b4a      	ldr	r3, [pc, #296]	; (800295c <tim64bit+0x29c>)
 8002832:	801a      	strh	r2, [r3, #0]
	c = a * b;
 8002834:	4b45      	ldr	r3, [pc, #276]	; (800294c <tim64bit+0x28c>)
 8002836:	6818      	ldr	r0, [r3, #0]
 8002838:	6859      	ldr	r1, [r3, #4]
 800283a:	4b45      	ldr	r3, [pc, #276]	; (8002950 <tim64bit+0x290>)
 800283c:	681a      	ldr	r2, [r3, #0]
 800283e:	685b      	ldr	r3, [r3, #4]
 8002840:	f7fd fe52 	bl	80004e8 <__aeabi_lmul>
 8002844:	0002      	movs	r2, r0
 8002846:	000b      	movs	r3, r1
 8002848:	4942      	ldr	r1, [pc, #264]	; (8002954 <tim64bit+0x294>)
 800284a:	600a      	str	r2, [r1, #0]
 800284c:	604b      	str	r3, [r1, #4]
	timEnd = TIM7->CNT;
 800284e:	4b42      	ldr	r3, [pc, #264]	; (8002958 <tim64bit+0x298>)
 8002850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002852:	b29a      	uxth	r2, r3
 8002854:	4b42      	ldr	r3, [pc, #264]	; (8002960 <tim64bit+0x2a0>)
 8002856:	801a      	strh	r2, [r3, #0]
//	print64bitu(c);
	timLap = ((float)(timEnd - timStart)) / 48;
 8002858:	4b41      	ldr	r3, [pc, #260]	; (8002960 <tim64bit+0x2a0>)
 800285a:	881b      	ldrh	r3, [r3, #0]
 800285c:	001a      	movs	r2, r3
 800285e:	4b3f      	ldr	r3, [pc, #252]	; (800295c <tim64bit+0x29c>)
 8002860:	881b      	ldrh	r3, [r3, #0]
 8002862:	1ad3      	subs	r3, r2, r3
 8002864:	0018      	movs	r0, r3
 8002866:	f7fe f851 	bl	800090c <__aeabi_i2f>
 800286a:	1c03      	adds	r3, r0, #0
 800286c:	493d      	ldr	r1, [pc, #244]	; (8002964 <tim64bit+0x2a4>)
 800286e:	1c18      	adds	r0, r3, #0
 8002870:	f7fd ff34 	bl	80006dc <__aeabi_fdiv>
 8002874:	1c03      	adds	r3, r0, #0
 8002876:	1c18      	adds	r0, r3, #0
 8002878:	f7ff fe7c 	bl	8002574 <__aeabi_f2d>
 800287c:	0002      	movs	r2, r0
 800287e:	000b      	movs	r3, r1
 8002880:	4939      	ldr	r1, [pc, #228]	; (8002968 <tim64bit+0x2a8>)
 8002882:	600a      	str	r2, [r1, #0]
 8002884:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(MUL): %0.5fus\n", timLap);
 8002886:	4b38      	ldr	r3, [pc, #224]	; (8002968 <tim64bit+0x2a8>)
 8002888:	681a      	ldr	r2, [r3, #0]
 800288a:	685b      	ldr	r3, [r3, #4]
 800288c:	493b      	ldr	r1, [pc, #236]	; (800297c <tim64bit+0x2bc>)
 800288e:	4838      	ldr	r0, [pc, #224]	; (8002970 <tim64bit+0x2b0>)
 8002890:	f002 fbb8 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002894:	4b36      	ldr	r3, [pc, #216]	; (8002970 <tim64bit+0x2b0>)
 8002896:	0018      	movs	r0, r3
 8002898:	f7fd fc36 	bl	8000108 <strlen>
 800289c:	0002      	movs	r2, r0
 800289e:	4b34      	ldr	r3, [pc, #208]	; (8002970 <tim64bit+0x2b0>)
 80028a0:	4829      	ldr	r0, [pc, #164]	; (8002948 <tim64bit+0x288>)
 80028a2:	0019      	movs	r1, r3
 80028a4:	f001 fe86 	bl	80045b4 <USART_WRITE>


	a = 0xFFFFFFFF;
 80028a8:	4928      	ldr	r1, [pc, #160]	; (800294c <tim64bit+0x28c>)
 80028aa:	2201      	movs	r2, #1
 80028ac:	4252      	negs	r2, r2
 80028ae:	2300      	movs	r3, #0
 80028b0:	600a      	str	r2, [r1, #0]
 80028b2:	604b      	str	r3, [r1, #4]
	b = 0xFFFFFFFF;
 80028b4:	4926      	ldr	r1, [pc, #152]	; (8002950 <tim64bit+0x290>)
 80028b6:	2201      	movs	r2, #1
 80028b8:	4252      	negs	r2, r2
 80028ba:	2300      	movs	r3, #0
 80028bc:	600a      	str	r2, [r1, #0]
 80028be:	604b      	str	r3, [r1, #4]
	timStart = TIM7->CNT;
 80028c0:	4b25      	ldr	r3, [pc, #148]	; (8002958 <tim64bit+0x298>)
 80028c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028c4:	b29a      	uxth	r2, r3
 80028c6:	4b25      	ldr	r3, [pc, #148]	; (800295c <tim64bit+0x29c>)
 80028c8:	801a      	strh	r2, [r3, #0]
	c = a / b;
 80028ca:	4b20      	ldr	r3, [pc, #128]	; (800294c <tim64bit+0x28c>)
 80028cc:	6818      	ldr	r0, [r3, #0]
 80028ce:	6859      	ldr	r1, [r3, #4]
 80028d0:	4b1f      	ldr	r3, [pc, #124]	; (8002950 <tim64bit+0x290>)
 80028d2:	681a      	ldr	r2, [r3, #0]
 80028d4:	685b      	ldr	r3, [r3, #4]
 80028d6:	f7fd fde7 	bl	80004a8 <__aeabi_uldivmod>
 80028da:	0002      	movs	r2, r0
 80028dc:	000b      	movs	r3, r1
 80028de:	491d      	ldr	r1, [pc, #116]	; (8002954 <tim64bit+0x294>)
 80028e0:	600a      	str	r2, [r1, #0]
 80028e2:	604b      	str	r3, [r1, #4]
	timEnd = TIM7->CNT;
 80028e4:	4b1c      	ldr	r3, [pc, #112]	; (8002958 <tim64bit+0x298>)
 80028e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028e8:	b29a      	uxth	r2, r3
 80028ea:	4b1d      	ldr	r3, [pc, #116]	; (8002960 <tim64bit+0x2a0>)
 80028ec:	801a      	strh	r2, [r3, #0]
//	print64bitu(c);
	timLap = ((float)(timEnd - timStart)) / 48;
 80028ee:	4b1c      	ldr	r3, [pc, #112]	; (8002960 <tim64bit+0x2a0>)
 80028f0:	881b      	ldrh	r3, [r3, #0]
 80028f2:	001a      	movs	r2, r3
 80028f4:	4b19      	ldr	r3, [pc, #100]	; (800295c <tim64bit+0x29c>)
 80028f6:	881b      	ldrh	r3, [r3, #0]
 80028f8:	1ad3      	subs	r3, r2, r3
 80028fa:	0018      	movs	r0, r3
 80028fc:	f7fe f806 	bl	800090c <__aeabi_i2f>
 8002900:	1c03      	adds	r3, r0, #0
 8002902:	4918      	ldr	r1, [pc, #96]	; (8002964 <tim64bit+0x2a4>)
 8002904:	1c18      	adds	r0, r3, #0
 8002906:	f7fd fee9 	bl	80006dc <__aeabi_fdiv>
 800290a:	1c03      	adds	r3, r0, #0
 800290c:	1c18      	adds	r0, r3, #0
 800290e:	f7ff fe31 	bl	8002574 <__aeabi_f2d>
 8002912:	0002      	movs	r2, r0
 8002914:	000b      	movs	r3, r1
 8002916:	4914      	ldr	r1, [pc, #80]	; (8002968 <tim64bit+0x2a8>)
 8002918:	600a      	str	r2, [r1, #0]
 800291a:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(DIV): %0.5fus\n", timLap);
 800291c:	4b12      	ldr	r3, [pc, #72]	; (8002968 <tim64bit+0x2a8>)
 800291e:	681a      	ldr	r2, [r3, #0]
 8002920:	685b      	ldr	r3, [r3, #4]
 8002922:	4917      	ldr	r1, [pc, #92]	; (8002980 <tim64bit+0x2c0>)
 8002924:	4812      	ldr	r0, [pc, #72]	; (8002970 <tim64bit+0x2b0>)
 8002926:	f002 fb6d 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 800292a:	4b11      	ldr	r3, [pc, #68]	; (8002970 <tim64bit+0x2b0>)
 800292c:	0018      	movs	r0, r3
 800292e:	f7fd fbeb 	bl	8000108 <strlen>
 8002932:	0002      	movs	r2, r0
 8002934:	4b0e      	ldr	r3, [pc, #56]	; (8002970 <tim64bit+0x2b0>)
 8002936:	4804      	ldr	r0, [pc, #16]	; (8002948 <tim64bit+0x288>)
 8002938:	0019      	movs	r1, r3
 800293a:	f001 fe3b 	bl	80045b4 <USART_WRITE>
}
 800293e:	46c0      	nop			; (mov r8, r8)
 8002940:	46bd      	mov	sp, r7
 8002942:	bd80      	pop	{r7, pc}
 8002944:	080076f0 	.word	0x080076f0
 8002948:	40004400 	.word	0x40004400
 800294c:	20000240 	.word	0x20000240
 8002950:	20000248 	.word	0x20000248
 8002954:	20000250 	.word	0x20000250
 8002958:	40001400 	.word	0x40001400
 800295c:	20000270 	.word	0x20000270
 8002960:	2000026e 	.word	0x2000026e
 8002964:	42400000 	.word	0x42400000
 8002968:	20000278 	.word	0x20000278
 800296c:	0800770c 	.word	0x0800770c
 8002970:	20000280 	.word	0x20000280
 8002974:	08007728 	.word	0x08007728
 8002978:	00ffffff 	.word	0x00ffffff
 800297c:	08007744 	.word	0x08007744
 8002980:	08007760 	.word	0x08007760

08002984 <tim32bit>:

void tim32bit() {
 8002984:	b580      	push	{r7, lr}
 8002986:	af00      	add	r7, sp, #0
	USART_WRITE(USART2, "//===| 32-bit Num |===//\n\r", 26);
 8002988:	4b89      	ldr	r3, [pc, #548]	; (8002bb0 <tim32bit+0x22c>)
 800298a:	488a      	ldr	r0, [pc, #552]	; (8002bb4 <tim32bit+0x230>)
 800298c:	221a      	movs	r2, #26
 800298e:	0019      	movs	r1, r3
 8002990:	f001 fe10 	bl	80045b4 <USART_WRITE>
	a1 = 0, b1 = 0, c1 = 0;
 8002994:	4b88      	ldr	r3, [pc, #544]	; (8002bb8 <tim32bit+0x234>)
 8002996:	2200      	movs	r2, #0
 8002998:	601a      	str	r2, [r3, #0]
 800299a:	4b88      	ldr	r3, [pc, #544]	; (8002bbc <tim32bit+0x238>)
 800299c:	2200      	movs	r2, #0
 800299e:	601a      	str	r2, [r3, #0]
 80029a0:	4b87      	ldr	r3, [pc, #540]	; (8002bc0 <tim32bit+0x23c>)
 80029a2:	2200      	movs	r2, #0
 80029a4:	601a      	str	r2, [r3, #0]

	a1 = 0xFFFFFF;
 80029a6:	4b84      	ldr	r3, [pc, #528]	; (8002bb8 <tim32bit+0x234>)
 80029a8:	4a86      	ldr	r2, [pc, #536]	; (8002bc4 <tim32bit+0x240>)
 80029aa:	601a      	str	r2, [r3, #0]
	b1 = 0xFFFFFF;
 80029ac:	4b83      	ldr	r3, [pc, #524]	; (8002bbc <tim32bit+0x238>)
 80029ae:	4a85      	ldr	r2, [pc, #532]	; (8002bc4 <tim32bit+0x240>)
 80029b0:	601a      	str	r2, [r3, #0]
	timStart = TIM7->CNT;
 80029b2:	4b85      	ldr	r3, [pc, #532]	; (8002bc8 <tim32bit+0x244>)
 80029b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80029b6:	b29a      	uxth	r2, r3
 80029b8:	4b84      	ldr	r3, [pc, #528]	; (8002bcc <tim32bit+0x248>)
 80029ba:	801a      	strh	r2, [r3, #0]
	c1 = a1 + b1;
 80029bc:	4b7e      	ldr	r3, [pc, #504]	; (8002bb8 <tim32bit+0x234>)
 80029be:	681a      	ldr	r2, [r3, #0]
 80029c0:	4b7e      	ldr	r3, [pc, #504]	; (8002bbc <tim32bit+0x238>)
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	18d2      	adds	r2, r2, r3
 80029c6:	4b7e      	ldr	r3, [pc, #504]	; (8002bc0 <tim32bit+0x23c>)
 80029c8:	601a      	str	r2, [r3, #0]
	timEnd = TIM7->CNT;
 80029ca:	4b7f      	ldr	r3, [pc, #508]	; (8002bc8 <tim32bit+0x244>)
 80029cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80029ce:	b29a      	uxth	r2, r3
 80029d0:	4b7f      	ldr	r3, [pc, #508]	; (8002bd0 <tim32bit+0x24c>)
 80029d2:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 80029d4:	4b7e      	ldr	r3, [pc, #504]	; (8002bd0 <tim32bit+0x24c>)
 80029d6:	881b      	ldrh	r3, [r3, #0]
 80029d8:	001a      	movs	r2, r3
 80029da:	4b7c      	ldr	r3, [pc, #496]	; (8002bcc <tim32bit+0x248>)
 80029dc:	881b      	ldrh	r3, [r3, #0]
 80029de:	1ad3      	subs	r3, r2, r3
 80029e0:	0018      	movs	r0, r3
 80029e2:	f7fd ff93 	bl	800090c <__aeabi_i2f>
 80029e6:	1c03      	adds	r3, r0, #0
 80029e8:	497a      	ldr	r1, [pc, #488]	; (8002bd4 <tim32bit+0x250>)
 80029ea:	1c18      	adds	r0, r3, #0
 80029ec:	f7fd fe76 	bl	80006dc <__aeabi_fdiv>
 80029f0:	1c03      	adds	r3, r0, #0
 80029f2:	1c18      	adds	r0, r3, #0
 80029f4:	f7ff fdbe 	bl	8002574 <__aeabi_f2d>
 80029f8:	0002      	movs	r2, r0
 80029fa:	000b      	movs	r3, r1
 80029fc:	4976      	ldr	r1, [pc, #472]	; (8002bd8 <tim32bit+0x254>)
 80029fe:	600a      	str	r2, [r1, #0]
 8002a00:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(ADD): %0.5fus\n", timLap);
 8002a02:	4b75      	ldr	r3, [pc, #468]	; (8002bd8 <tim32bit+0x254>)
 8002a04:	681a      	ldr	r2, [r3, #0]
 8002a06:	685b      	ldr	r3, [r3, #4]
 8002a08:	4974      	ldr	r1, [pc, #464]	; (8002bdc <tim32bit+0x258>)
 8002a0a:	4875      	ldr	r0, [pc, #468]	; (8002be0 <tim32bit+0x25c>)
 8002a0c:	f002 fafa 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002a10:	4b73      	ldr	r3, [pc, #460]	; (8002be0 <tim32bit+0x25c>)
 8002a12:	0018      	movs	r0, r3
 8002a14:	f7fd fb78 	bl	8000108 <strlen>
 8002a18:	0002      	movs	r2, r0
 8002a1a:	4b71      	ldr	r3, [pc, #452]	; (8002be0 <tim32bit+0x25c>)
 8002a1c:	4865      	ldr	r0, [pc, #404]	; (8002bb4 <tim32bit+0x230>)
 8002a1e:	0019      	movs	r1, r3
 8002a20:	f001 fdc8 	bl	80045b4 <USART_WRITE>


	a1 = 0xFFFFFF;
 8002a24:	4b64      	ldr	r3, [pc, #400]	; (8002bb8 <tim32bit+0x234>)
 8002a26:	4a67      	ldr	r2, [pc, #412]	; (8002bc4 <tim32bit+0x240>)
 8002a28:	601a      	str	r2, [r3, #0]
	b1 = 0xFFFFFF;
 8002a2a:	4b64      	ldr	r3, [pc, #400]	; (8002bbc <tim32bit+0x238>)
 8002a2c:	4a65      	ldr	r2, [pc, #404]	; (8002bc4 <tim32bit+0x240>)
 8002a2e:	601a      	str	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002a30:	4b65      	ldr	r3, [pc, #404]	; (8002bc8 <tim32bit+0x244>)
 8002a32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a34:	b29a      	uxth	r2, r3
 8002a36:	4b65      	ldr	r3, [pc, #404]	; (8002bcc <tim32bit+0x248>)
 8002a38:	801a      	strh	r2, [r3, #0]
	c1 = a1 - b1;
 8002a3a:	4b5f      	ldr	r3, [pc, #380]	; (8002bb8 <tim32bit+0x234>)
 8002a3c:	681a      	ldr	r2, [r3, #0]
 8002a3e:	4b5f      	ldr	r3, [pc, #380]	; (8002bbc <tim32bit+0x238>)
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	1ad2      	subs	r2, r2, r3
 8002a44:	4b5e      	ldr	r3, [pc, #376]	; (8002bc0 <tim32bit+0x23c>)
 8002a46:	601a      	str	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002a48:	4b5f      	ldr	r3, [pc, #380]	; (8002bc8 <tim32bit+0x244>)
 8002a4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a4c:	b29a      	uxth	r2, r3
 8002a4e:	4b60      	ldr	r3, [pc, #384]	; (8002bd0 <tim32bit+0x24c>)
 8002a50:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002a52:	4b5f      	ldr	r3, [pc, #380]	; (8002bd0 <tim32bit+0x24c>)
 8002a54:	881b      	ldrh	r3, [r3, #0]
 8002a56:	001a      	movs	r2, r3
 8002a58:	4b5c      	ldr	r3, [pc, #368]	; (8002bcc <tim32bit+0x248>)
 8002a5a:	881b      	ldrh	r3, [r3, #0]
 8002a5c:	1ad3      	subs	r3, r2, r3
 8002a5e:	0018      	movs	r0, r3
 8002a60:	f7fd ff54 	bl	800090c <__aeabi_i2f>
 8002a64:	1c03      	adds	r3, r0, #0
 8002a66:	495b      	ldr	r1, [pc, #364]	; (8002bd4 <tim32bit+0x250>)
 8002a68:	1c18      	adds	r0, r3, #0
 8002a6a:	f7fd fe37 	bl	80006dc <__aeabi_fdiv>
 8002a6e:	1c03      	adds	r3, r0, #0
 8002a70:	1c18      	adds	r0, r3, #0
 8002a72:	f7ff fd7f 	bl	8002574 <__aeabi_f2d>
 8002a76:	0002      	movs	r2, r0
 8002a78:	000b      	movs	r3, r1
 8002a7a:	4957      	ldr	r1, [pc, #348]	; (8002bd8 <tim32bit+0x254>)
 8002a7c:	600a      	str	r2, [r1, #0]
 8002a7e:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(SUB): %0.5fus\n", timLap);
 8002a80:	4b55      	ldr	r3, [pc, #340]	; (8002bd8 <tim32bit+0x254>)
 8002a82:	681a      	ldr	r2, [r3, #0]
 8002a84:	685b      	ldr	r3, [r3, #4]
 8002a86:	4957      	ldr	r1, [pc, #348]	; (8002be4 <tim32bit+0x260>)
 8002a88:	4855      	ldr	r0, [pc, #340]	; (8002be0 <tim32bit+0x25c>)
 8002a8a:	f002 fabb 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002a8e:	4b54      	ldr	r3, [pc, #336]	; (8002be0 <tim32bit+0x25c>)
 8002a90:	0018      	movs	r0, r3
 8002a92:	f7fd fb39 	bl	8000108 <strlen>
 8002a96:	0002      	movs	r2, r0
 8002a98:	4b51      	ldr	r3, [pc, #324]	; (8002be0 <tim32bit+0x25c>)
 8002a9a:	4846      	ldr	r0, [pc, #280]	; (8002bb4 <tim32bit+0x230>)
 8002a9c:	0019      	movs	r1, r3
 8002a9e:	f001 fd89 	bl	80045b4 <USART_WRITE>


	a1 = 0xFFFF;
 8002aa2:	4b45      	ldr	r3, [pc, #276]	; (8002bb8 <tim32bit+0x234>)
 8002aa4:	4a50      	ldr	r2, [pc, #320]	; (8002be8 <tim32bit+0x264>)
 8002aa6:	601a      	str	r2, [r3, #0]
	b1 = 0xFFFF;
 8002aa8:	4b44      	ldr	r3, [pc, #272]	; (8002bbc <tim32bit+0x238>)
 8002aaa:	4a4f      	ldr	r2, [pc, #316]	; (8002be8 <tim32bit+0x264>)
 8002aac:	601a      	str	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002aae:	4b46      	ldr	r3, [pc, #280]	; (8002bc8 <tim32bit+0x244>)
 8002ab0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ab2:	b29a      	uxth	r2, r3
 8002ab4:	4b45      	ldr	r3, [pc, #276]	; (8002bcc <tim32bit+0x248>)
 8002ab6:	801a      	strh	r2, [r3, #0]
	c1 = a1 * b1;
 8002ab8:	4b3f      	ldr	r3, [pc, #252]	; (8002bb8 <tim32bit+0x234>)
 8002aba:	681a      	ldr	r2, [r3, #0]
 8002abc:	4b3f      	ldr	r3, [pc, #252]	; (8002bbc <tim32bit+0x238>)
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	435a      	muls	r2, r3
 8002ac2:	4b3f      	ldr	r3, [pc, #252]	; (8002bc0 <tim32bit+0x23c>)
 8002ac4:	601a      	str	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002ac6:	4b40      	ldr	r3, [pc, #256]	; (8002bc8 <tim32bit+0x244>)
 8002ac8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002aca:	b29a      	uxth	r2, r3
 8002acc:	4b40      	ldr	r3, [pc, #256]	; (8002bd0 <tim32bit+0x24c>)
 8002ace:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002ad0:	4b3f      	ldr	r3, [pc, #252]	; (8002bd0 <tim32bit+0x24c>)
 8002ad2:	881b      	ldrh	r3, [r3, #0]
 8002ad4:	001a      	movs	r2, r3
 8002ad6:	4b3d      	ldr	r3, [pc, #244]	; (8002bcc <tim32bit+0x248>)
 8002ad8:	881b      	ldrh	r3, [r3, #0]
 8002ada:	1ad3      	subs	r3, r2, r3
 8002adc:	0018      	movs	r0, r3
 8002ade:	f7fd ff15 	bl	800090c <__aeabi_i2f>
 8002ae2:	1c03      	adds	r3, r0, #0
 8002ae4:	493b      	ldr	r1, [pc, #236]	; (8002bd4 <tim32bit+0x250>)
 8002ae6:	1c18      	adds	r0, r3, #0
 8002ae8:	f7fd fdf8 	bl	80006dc <__aeabi_fdiv>
 8002aec:	1c03      	adds	r3, r0, #0
 8002aee:	1c18      	adds	r0, r3, #0
 8002af0:	f7ff fd40 	bl	8002574 <__aeabi_f2d>
 8002af4:	0002      	movs	r2, r0
 8002af6:	000b      	movs	r3, r1
 8002af8:	4937      	ldr	r1, [pc, #220]	; (8002bd8 <tim32bit+0x254>)
 8002afa:	600a      	str	r2, [r1, #0]
 8002afc:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(MUL): %0.5fus\n", timLap);
 8002afe:	4b36      	ldr	r3, [pc, #216]	; (8002bd8 <tim32bit+0x254>)
 8002b00:	681a      	ldr	r2, [r3, #0]
 8002b02:	685b      	ldr	r3, [r3, #4]
 8002b04:	4939      	ldr	r1, [pc, #228]	; (8002bec <tim32bit+0x268>)
 8002b06:	4836      	ldr	r0, [pc, #216]	; (8002be0 <tim32bit+0x25c>)
 8002b08:	f002 fa7c 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002b0c:	4b34      	ldr	r3, [pc, #208]	; (8002be0 <tim32bit+0x25c>)
 8002b0e:	0018      	movs	r0, r3
 8002b10:	f7fd fafa 	bl	8000108 <strlen>
 8002b14:	0002      	movs	r2, r0
 8002b16:	4b32      	ldr	r3, [pc, #200]	; (8002be0 <tim32bit+0x25c>)
 8002b18:	4826      	ldr	r0, [pc, #152]	; (8002bb4 <tim32bit+0x230>)
 8002b1a:	0019      	movs	r1, r3
 8002b1c:	f001 fd4a 	bl	80045b4 <USART_WRITE>


	a1 = 0xFFFFFF;
 8002b20:	4b25      	ldr	r3, [pc, #148]	; (8002bb8 <tim32bit+0x234>)
 8002b22:	4a28      	ldr	r2, [pc, #160]	; (8002bc4 <tim32bit+0x240>)
 8002b24:	601a      	str	r2, [r3, #0]
	b1 = 0xFFFFFF;
 8002b26:	4b25      	ldr	r3, [pc, #148]	; (8002bbc <tim32bit+0x238>)
 8002b28:	4a26      	ldr	r2, [pc, #152]	; (8002bc4 <tim32bit+0x240>)
 8002b2a:	601a      	str	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002b2c:	4b26      	ldr	r3, [pc, #152]	; (8002bc8 <tim32bit+0x244>)
 8002b2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b30:	b29a      	uxth	r2, r3
 8002b32:	4b26      	ldr	r3, [pc, #152]	; (8002bcc <tim32bit+0x248>)
 8002b34:	801a      	strh	r2, [r3, #0]
	c1 = a1 / b1;
 8002b36:	4b20      	ldr	r3, [pc, #128]	; (8002bb8 <tim32bit+0x234>)
 8002b38:	681a      	ldr	r2, [r3, #0]
 8002b3a:	4b20      	ldr	r3, [pc, #128]	; (8002bbc <tim32bit+0x238>)
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	0019      	movs	r1, r3
 8002b40:	0010      	movs	r0, r2
 8002b42:	f7fd fafd 	bl	8000140 <__udivsi3>
 8002b46:	0003      	movs	r3, r0
 8002b48:	001a      	movs	r2, r3
 8002b4a:	4b1d      	ldr	r3, [pc, #116]	; (8002bc0 <tim32bit+0x23c>)
 8002b4c:	601a      	str	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002b4e:	4b1e      	ldr	r3, [pc, #120]	; (8002bc8 <tim32bit+0x244>)
 8002b50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b52:	b29a      	uxth	r2, r3
 8002b54:	4b1e      	ldr	r3, [pc, #120]	; (8002bd0 <tim32bit+0x24c>)
 8002b56:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002b58:	4b1d      	ldr	r3, [pc, #116]	; (8002bd0 <tim32bit+0x24c>)
 8002b5a:	881b      	ldrh	r3, [r3, #0]
 8002b5c:	001a      	movs	r2, r3
 8002b5e:	4b1b      	ldr	r3, [pc, #108]	; (8002bcc <tim32bit+0x248>)
 8002b60:	881b      	ldrh	r3, [r3, #0]
 8002b62:	1ad3      	subs	r3, r2, r3
 8002b64:	0018      	movs	r0, r3
 8002b66:	f7fd fed1 	bl	800090c <__aeabi_i2f>
 8002b6a:	1c03      	adds	r3, r0, #0
 8002b6c:	4919      	ldr	r1, [pc, #100]	; (8002bd4 <tim32bit+0x250>)
 8002b6e:	1c18      	adds	r0, r3, #0
 8002b70:	f7fd fdb4 	bl	80006dc <__aeabi_fdiv>
 8002b74:	1c03      	adds	r3, r0, #0
 8002b76:	1c18      	adds	r0, r3, #0
 8002b78:	f7ff fcfc 	bl	8002574 <__aeabi_f2d>
 8002b7c:	0002      	movs	r2, r0
 8002b7e:	000b      	movs	r3, r1
 8002b80:	4915      	ldr	r1, [pc, #84]	; (8002bd8 <tim32bit+0x254>)
 8002b82:	600a      	str	r2, [r1, #0]
 8002b84:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(DIV): %0.5fus\n", timLap);
 8002b86:	4b14      	ldr	r3, [pc, #80]	; (8002bd8 <tim32bit+0x254>)
 8002b88:	681a      	ldr	r2, [r3, #0]
 8002b8a:	685b      	ldr	r3, [r3, #4]
 8002b8c:	4918      	ldr	r1, [pc, #96]	; (8002bf0 <tim32bit+0x26c>)
 8002b8e:	4814      	ldr	r0, [pc, #80]	; (8002be0 <tim32bit+0x25c>)
 8002b90:	f002 fa38 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002b94:	4b12      	ldr	r3, [pc, #72]	; (8002be0 <tim32bit+0x25c>)
 8002b96:	0018      	movs	r0, r3
 8002b98:	f7fd fab6 	bl	8000108 <strlen>
 8002b9c:	0002      	movs	r2, r0
 8002b9e:	4b10      	ldr	r3, [pc, #64]	; (8002be0 <tim32bit+0x25c>)
 8002ba0:	4804      	ldr	r0, [pc, #16]	; (8002bb4 <tim32bit+0x230>)
 8002ba2:	0019      	movs	r1, r3
 8002ba4:	f001 fd06 	bl	80045b4 <USART_WRITE>
}
 8002ba8:	46c0      	nop			; (mov r8, r8)
 8002baa:	46bd      	mov	sp, r7
 8002bac:	bd80      	pop	{r7, pc}
 8002bae:	46c0      	nop			; (mov r8, r8)
 8002bb0:	0800777c 	.word	0x0800777c
 8002bb4:	40004400 	.word	0x40004400
 8002bb8:	20000258 	.word	0x20000258
 8002bbc:	2000025c 	.word	0x2000025c
 8002bc0:	20000260 	.word	0x20000260
 8002bc4:	00ffffff 	.word	0x00ffffff
 8002bc8:	40001400 	.word	0x40001400
 8002bcc:	20000270 	.word	0x20000270
 8002bd0:	2000026e 	.word	0x2000026e
 8002bd4:	42400000 	.word	0x42400000
 8002bd8:	20000278 	.word	0x20000278
 8002bdc:	0800770c 	.word	0x0800770c
 8002be0:	20000280 	.word	0x20000280
 8002be4:	08007728 	.word	0x08007728
 8002be8:	0000ffff 	.word	0x0000ffff
 8002bec:	08007744 	.word	0x08007744
 8002bf0:	08007760 	.word	0x08007760

08002bf4 <tim16bit>:

void tim16bit() {
 8002bf4:	b580      	push	{r7, lr}
 8002bf6:	af00      	add	r7, sp, #0
	USART_WRITE(USART2, "//===| 16-bit Num |===//\n\r", 26);
 8002bf8:	4b8c      	ldr	r3, [pc, #560]	; (8002e2c <tim16bit+0x238>)
 8002bfa:	488d      	ldr	r0, [pc, #564]	; (8002e30 <tim16bit+0x23c>)
 8002bfc:	221a      	movs	r2, #26
 8002bfe:	0019      	movs	r1, r3
 8002c00:	f001 fcd8 	bl	80045b4 <USART_WRITE>
	a2 = 0, b2 = 0, c2 = 0;
 8002c04:	4b8b      	ldr	r3, [pc, #556]	; (8002e34 <tim16bit+0x240>)
 8002c06:	2200      	movs	r2, #0
 8002c08:	801a      	strh	r2, [r3, #0]
 8002c0a:	4b8b      	ldr	r3, [pc, #556]	; (8002e38 <tim16bit+0x244>)
 8002c0c:	2200      	movs	r2, #0
 8002c0e:	801a      	strh	r2, [r3, #0]
 8002c10:	4b8a      	ldr	r3, [pc, #552]	; (8002e3c <tim16bit+0x248>)
 8002c12:	2200      	movs	r2, #0
 8002c14:	801a      	strh	r2, [r3, #0]

	a2 = 0xFFF;
 8002c16:	4b87      	ldr	r3, [pc, #540]	; (8002e34 <tim16bit+0x240>)
 8002c18:	4a89      	ldr	r2, [pc, #548]	; (8002e40 <tim16bit+0x24c>)
 8002c1a:	801a      	strh	r2, [r3, #0]
	b2 = 0xFFF;
 8002c1c:	4b86      	ldr	r3, [pc, #536]	; (8002e38 <tim16bit+0x244>)
 8002c1e:	4a88      	ldr	r2, [pc, #544]	; (8002e40 <tim16bit+0x24c>)
 8002c20:	801a      	strh	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002c22:	4b88      	ldr	r3, [pc, #544]	; (8002e44 <tim16bit+0x250>)
 8002c24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c26:	b29a      	uxth	r2, r3
 8002c28:	4b87      	ldr	r3, [pc, #540]	; (8002e48 <tim16bit+0x254>)
 8002c2a:	801a      	strh	r2, [r3, #0]
	c2 = a2 + b2;
 8002c2c:	4b81      	ldr	r3, [pc, #516]	; (8002e34 <tim16bit+0x240>)
 8002c2e:	881a      	ldrh	r2, [r3, #0]
 8002c30:	4b81      	ldr	r3, [pc, #516]	; (8002e38 <tim16bit+0x244>)
 8002c32:	881b      	ldrh	r3, [r3, #0]
 8002c34:	18d3      	adds	r3, r2, r3
 8002c36:	b29a      	uxth	r2, r3
 8002c38:	4b80      	ldr	r3, [pc, #512]	; (8002e3c <tim16bit+0x248>)
 8002c3a:	801a      	strh	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002c3c:	4b81      	ldr	r3, [pc, #516]	; (8002e44 <tim16bit+0x250>)
 8002c3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c40:	b29a      	uxth	r2, r3
 8002c42:	4b82      	ldr	r3, [pc, #520]	; (8002e4c <tim16bit+0x258>)
 8002c44:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002c46:	4b81      	ldr	r3, [pc, #516]	; (8002e4c <tim16bit+0x258>)
 8002c48:	881b      	ldrh	r3, [r3, #0]
 8002c4a:	001a      	movs	r2, r3
 8002c4c:	4b7e      	ldr	r3, [pc, #504]	; (8002e48 <tim16bit+0x254>)
 8002c4e:	881b      	ldrh	r3, [r3, #0]
 8002c50:	1ad3      	subs	r3, r2, r3
 8002c52:	0018      	movs	r0, r3
 8002c54:	f7fd fe5a 	bl	800090c <__aeabi_i2f>
 8002c58:	1c03      	adds	r3, r0, #0
 8002c5a:	497d      	ldr	r1, [pc, #500]	; (8002e50 <tim16bit+0x25c>)
 8002c5c:	1c18      	adds	r0, r3, #0
 8002c5e:	f7fd fd3d 	bl	80006dc <__aeabi_fdiv>
 8002c62:	1c03      	adds	r3, r0, #0
 8002c64:	1c18      	adds	r0, r3, #0
 8002c66:	f7ff fc85 	bl	8002574 <__aeabi_f2d>
 8002c6a:	0002      	movs	r2, r0
 8002c6c:	000b      	movs	r3, r1
 8002c6e:	4979      	ldr	r1, [pc, #484]	; (8002e54 <tim16bit+0x260>)
 8002c70:	600a      	str	r2, [r1, #0]
 8002c72:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(ADD): %0.5fus\n", timLap);
 8002c74:	4b77      	ldr	r3, [pc, #476]	; (8002e54 <tim16bit+0x260>)
 8002c76:	681a      	ldr	r2, [r3, #0]
 8002c78:	685b      	ldr	r3, [r3, #4]
 8002c7a:	4977      	ldr	r1, [pc, #476]	; (8002e58 <tim16bit+0x264>)
 8002c7c:	4877      	ldr	r0, [pc, #476]	; (8002e5c <tim16bit+0x268>)
 8002c7e:	f002 f9c1 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002c82:	4b76      	ldr	r3, [pc, #472]	; (8002e5c <tim16bit+0x268>)
 8002c84:	0018      	movs	r0, r3
 8002c86:	f7fd fa3f 	bl	8000108 <strlen>
 8002c8a:	0002      	movs	r2, r0
 8002c8c:	4b73      	ldr	r3, [pc, #460]	; (8002e5c <tim16bit+0x268>)
 8002c8e:	4868      	ldr	r0, [pc, #416]	; (8002e30 <tim16bit+0x23c>)
 8002c90:	0019      	movs	r1, r3
 8002c92:	f001 fc8f 	bl	80045b4 <USART_WRITE>


	a2 = 0xFFFF;
 8002c96:	4b67      	ldr	r3, [pc, #412]	; (8002e34 <tim16bit+0x240>)
 8002c98:	2201      	movs	r2, #1
 8002c9a:	4252      	negs	r2, r2
 8002c9c:	801a      	strh	r2, [r3, #0]
	b2 = 0xFFFF;
 8002c9e:	4b66      	ldr	r3, [pc, #408]	; (8002e38 <tim16bit+0x244>)
 8002ca0:	2201      	movs	r2, #1
 8002ca2:	4252      	negs	r2, r2
 8002ca4:	801a      	strh	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002ca6:	4b67      	ldr	r3, [pc, #412]	; (8002e44 <tim16bit+0x250>)
 8002ca8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002caa:	b29a      	uxth	r2, r3
 8002cac:	4b66      	ldr	r3, [pc, #408]	; (8002e48 <tim16bit+0x254>)
 8002cae:	801a      	strh	r2, [r3, #0]
	c2 = a2 - b2;
 8002cb0:	4b60      	ldr	r3, [pc, #384]	; (8002e34 <tim16bit+0x240>)
 8002cb2:	881a      	ldrh	r2, [r3, #0]
 8002cb4:	4b60      	ldr	r3, [pc, #384]	; (8002e38 <tim16bit+0x244>)
 8002cb6:	881b      	ldrh	r3, [r3, #0]
 8002cb8:	1ad3      	subs	r3, r2, r3
 8002cba:	b29a      	uxth	r2, r3
 8002cbc:	4b5f      	ldr	r3, [pc, #380]	; (8002e3c <tim16bit+0x248>)
 8002cbe:	801a      	strh	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002cc0:	4b60      	ldr	r3, [pc, #384]	; (8002e44 <tim16bit+0x250>)
 8002cc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cc4:	b29a      	uxth	r2, r3
 8002cc6:	4b61      	ldr	r3, [pc, #388]	; (8002e4c <tim16bit+0x258>)
 8002cc8:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002cca:	4b60      	ldr	r3, [pc, #384]	; (8002e4c <tim16bit+0x258>)
 8002ccc:	881b      	ldrh	r3, [r3, #0]
 8002cce:	001a      	movs	r2, r3
 8002cd0:	4b5d      	ldr	r3, [pc, #372]	; (8002e48 <tim16bit+0x254>)
 8002cd2:	881b      	ldrh	r3, [r3, #0]
 8002cd4:	1ad3      	subs	r3, r2, r3
 8002cd6:	0018      	movs	r0, r3
 8002cd8:	f7fd fe18 	bl	800090c <__aeabi_i2f>
 8002cdc:	1c03      	adds	r3, r0, #0
 8002cde:	495c      	ldr	r1, [pc, #368]	; (8002e50 <tim16bit+0x25c>)
 8002ce0:	1c18      	adds	r0, r3, #0
 8002ce2:	f7fd fcfb 	bl	80006dc <__aeabi_fdiv>
 8002ce6:	1c03      	adds	r3, r0, #0
 8002ce8:	1c18      	adds	r0, r3, #0
 8002cea:	f7ff fc43 	bl	8002574 <__aeabi_f2d>
 8002cee:	0002      	movs	r2, r0
 8002cf0:	000b      	movs	r3, r1
 8002cf2:	4958      	ldr	r1, [pc, #352]	; (8002e54 <tim16bit+0x260>)
 8002cf4:	600a      	str	r2, [r1, #0]
 8002cf6:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(SUB): %0.5fus\n", timLap);
 8002cf8:	4b56      	ldr	r3, [pc, #344]	; (8002e54 <tim16bit+0x260>)
 8002cfa:	681a      	ldr	r2, [r3, #0]
 8002cfc:	685b      	ldr	r3, [r3, #4]
 8002cfe:	4958      	ldr	r1, [pc, #352]	; (8002e60 <tim16bit+0x26c>)
 8002d00:	4856      	ldr	r0, [pc, #344]	; (8002e5c <tim16bit+0x268>)
 8002d02:	f002 f97f 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002d06:	4b55      	ldr	r3, [pc, #340]	; (8002e5c <tim16bit+0x268>)
 8002d08:	0018      	movs	r0, r3
 8002d0a:	f7fd f9fd 	bl	8000108 <strlen>
 8002d0e:	0002      	movs	r2, r0
 8002d10:	4b52      	ldr	r3, [pc, #328]	; (8002e5c <tim16bit+0x268>)
 8002d12:	4847      	ldr	r0, [pc, #284]	; (8002e30 <tim16bit+0x23c>)
 8002d14:	0019      	movs	r1, r3
 8002d16:	f001 fc4d 	bl	80045b4 <USART_WRITE>


	a2 = 0xFF;
 8002d1a:	4b46      	ldr	r3, [pc, #280]	; (8002e34 <tim16bit+0x240>)
 8002d1c:	22ff      	movs	r2, #255	; 0xff
 8002d1e:	801a      	strh	r2, [r3, #0]
	b2 = 0xFF;
 8002d20:	4b45      	ldr	r3, [pc, #276]	; (8002e38 <tim16bit+0x244>)
 8002d22:	22ff      	movs	r2, #255	; 0xff
 8002d24:	801a      	strh	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002d26:	4b47      	ldr	r3, [pc, #284]	; (8002e44 <tim16bit+0x250>)
 8002d28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d2a:	b29a      	uxth	r2, r3
 8002d2c:	4b46      	ldr	r3, [pc, #280]	; (8002e48 <tim16bit+0x254>)
 8002d2e:	801a      	strh	r2, [r3, #0]
	c2 = a2 * b2;
 8002d30:	4b40      	ldr	r3, [pc, #256]	; (8002e34 <tim16bit+0x240>)
 8002d32:	881b      	ldrh	r3, [r3, #0]
 8002d34:	4a40      	ldr	r2, [pc, #256]	; (8002e38 <tim16bit+0x244>)
 8002d36:	8812      	ldrh	r2, [r2, #0]
 8002d38:	4353      	muls	r3, r2
 8002d3a:	b29a      	uxth	r2, r3
 8002d3c:	4b3f      	ldr	r3, [pc, #252]	; (8002e3c <tim16bit+0x248>)
 8002d3e:	801a      	strh	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002d40:	4b40      	ldr	r3, [pc, #256]	; (8002e44 <tim16bit+0x250>)
 8002d42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d44:	b29a      	uxth	r2, r3
 8002d46:	4b41      	ldr	r3, [pc, #260]	; (8002e4c <tim16bit+0x258>)
 8002d48:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002d4a:	4b40      	ldr	r3, [pc, #256]	; (8002e4c <tim16bit+0x258>)
 8002d4c:	881b      	ldrh	r3, [r3, #0]
 8002d4e:	001a      	movs	r2, r3
 8002d50:	4b3d      	ldr	r3, [pc, #244]	; (8002e48 <tim16bit+0x254>)
 8002d52:	881b      	ldrh	r3, [r3, #0]
 8002d54:	1ad3      	subs	r3, r2, r3
 8002d56:	0018      	movs	r0, r3
 8002d58:	f7fd fdd8 	bl	800090c <__aeabi_i2f>
 8002d5c:	1c03      	adds	r3, r0, #0
 8002d5e:	493c      	ldr	r1, [pc, #240]	; (8002e50 <tim16bit+0x25c>)
 8002d60:	1c18      	adds	r0, r3, #0
 8002d62:	f7fd fcbb 	bl	80006dc <__aeabi_fdiv>
 8002d66:	1c03      	adds	r3, r0, #0
 8002d68:	1c18      	adds	r0, r3, #0
 8002d6a:	f7ff fc03 	bl	8002574 <__aeabi_f2d>
 8002d6e:	0002      	movs	r2, r0
 8002d70:	000b      	movs	r3, r1
 8002d72:	4938      	ldr	r1, [pc, #224]	; (8002e54 <tim16bit+0x260>)
 8002d74:	600a      	str	r2, [r1, #0]
 8002d76:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(MUL): %0.5fus\n", timLap);
 8002d78:	4b36      	ldr	r3, [pc, #216]	; (8002e54 <tim16bit+0x260>)
 8002d7a:	681a      	ldr	r2, [r3, #0]
 8002d7c:	685b      	ldr	r3, [r3, #4]
 8002d7e:	4939      	ldr	r1, [pc, #228]	; (8002e64 <tim16bit+0x270>)
 8002d80:	4836      	ldr	r0, [pc, #216]	; (8002e5c <tim16bit+0x268>)
 8002d82:	f002 f93f 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002d86:	4b35      	ldr	r3, [pc, #212]	; (8002e5c <tim16bit+0x268>)
 8002d88:	0018      	movs	r0, r3
 8002d8a:	f7fd f9bd 	bl	8000108 <strlen>
 8002d8e:	0002      	movs	r2, r0
 8002d90:	4b32      	ldr	r3, [pc, #200]	; (8002e5c <tim16bit+0x268>)
 8002d92:	4827      	ldr	r0, [pc, #156]	; (8002e30 <tim16bit+0x23c>)
 8002d94:	0019      	movs	r1, r3
 8002d96:	f001 fc0d 	bl	80045b4 <USART_WRITE>


	a2 = 0xFFFF;
 8002d9a:	4b26      	ldr	r3, [pc, #152]	; (8002e34 <tim16bit+0x240>)
 8002d9c:	2201      	movs	r2, #1
 8002d9e:	4252      	negs	r2, r2
 8002da0:	801a      	strh	r2, [r3, #0]
	b2 = 0xFFFF;
 8002da2:	4b25      	ldr	r3, [pc, #148]	; (8002e38 <tim16bit+0x244>)
 8002da4:	2201      	movs	r2, #1
 8002da6:	4252      	negs	r2, r2
 8002da8:	801a      	strh	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002daa:	4b26      	ldr	r3, [pc, #152]	; (8002e44 <tim16bit+0x250>)
 8002dac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dae:	b29a      	uxth	r2, r3
 8002db0:	4b25      	ldr	r3, [pc, #148]	; (8002e48 <tim16bit+0x254>)
 8002db2:	801a      	strh	r2, [r3, #0]
	c2 = a2 / b2;
 8002db4:	4b1f      	ldr	r3, [pc, #124]	; (8002e34 <tim16bit+0x240>)
 8002db6:	881a      	ldrh	r2, [r3, #0]
 8002db8:	4b1f      	ldr	r3, [pc, #124]	; (8002e38 <tim16bit+0x244>)
 8002dba:	881b      	ldrh	r3, [r3, #0]
 8002dbc:	0019      	movs	r1, r3
 8002dbe:	0010      	movs	r0, r2
 8002dc0:	f7fd f9be 	bl	8000140 <__udivsi3>
 8002dc4:	0003      	movs	r3, r0
 8002dc6:	b29a      	uxth	r2, r3
 8002dc8:	4b1c      	ldr	r3, [pc, #112]	; (8002e3c <tim16bit+0x248>)
 8002dca:	801a      	strh	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002dcc:	4b1d      	ldr	r3, [pc, #116]	; (8002e44 <tim16bit+0x250>)
 8002dce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dd0:	b29a      	uxth	r2, r3
 8002dd2:	4b1e      	ldr	r3, [pc, #120]	; (8002e4c <tim16bit+0x258>)
 8002dd4:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002dd6:	4b1d      	ldr	r3, [pc, #116]	; (8002e4c <tim16bit+0x258>)
 8002dd8:	881b      	ldrh	r3, [r3, #0]
 8002dda:	001a      	movs	r2, r3
 8002ddc:	4b1a      	ldr	r3, [pc, #104]	; (8002e48 <tim16bit+0x254>)
 8002dde:	881b      	ldrh	r3, [r3, #0]
 8002de0:	1ad3      	subs	r3, r2, r3
 8002de2:	0018      	movs	r0, r3
 8002de4:	f7fd fd92 	bl	800090c <__aeabi_i2f>
 8002de8:	1c03      	adds	r3, r0, #0
 8002dea:	4919      	ldr	r1, [pc, #100]	; (8002e50 <tim16bit+0x25c>)
 8002dec:	1c18      	adds	r0, r3, #0
 8002dee:	f7fd fc75 	bl	80006dc <__aeabi_fdiv>
 8002df2:	1c03      	adds	r3, r0, #0
 8002df4:	1c18      	adds	r0, r3, #0
 8002df6:	f7ff fbbd 	bl	8002574 <__aeabi_f2d>
 8002dfa:	0002      	movs	r2, r0
 8002dfc:	000b      	movs	r3, r1
 8002dfe:	4915      	ldr	r1, [pc, #84]	; (8002e54 <tim16bit+0x260>)
 8002e00:	600a      	str	r2, [r1, #0]
 8002e02:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(DIV): %0.5fus\n", timLap);
 8002e04:	4b13      	ldr	r3, [pc, #76]	; (8002e54 <tim16bit+0x260>)
 8002e06:	681a      	ldr	r2, [r3, #0]
 8002e08:	685b      	ldr	r3, [r3, #4]
 8002e0a:	4917      	ldr	r1, [pc, #92]	; (8002e68 <tim16bit+0x274>)
 8002e0c:	4813      	ldr	r0, [pc, #76]	; (8002e5c <tim16bit+0x268>)
 8002e0e:	f002 f8f9 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002e12:	4b12      	ldr	r3, [pc, #72]	; (8002e5c <tim16bit+0x268>)
 8002e14:	0018      	movs	r0, r3
 8002e16:	f7fd f977 	bl	8000108 <strlen>
 8002e1a:	0002      	movs	r2, r0
 8002e1c:	4b0f      	ldr	r3, [pc, #60]	; (8002e5c <tim16bit+0x268>)
 8002e1e:	4804      	ldr	r0, [pc, #16]	; (8002e30 <tim16bit+0x23c>)
 8002e20:	0019      	movs	r1, r3
 8002e22:	f001 fbc7 	bl	80045b4 <USART_WRITE>
}
 8002e26:	46c0      	nop			; (mov r8, r8)
 8002e28:	46bd      	mov	sp, r7
 8002e2a:	bd80      	pop	{r7, pc}
 8002e2c:	08007798 	.word	0x08007798
 8002e30:	40004400 	.word	0x40004400
 8002e34:	20000264 	.word	0x20000264
 8002e38:	20000266 	.word	0x20000266
 8002e3c:	20000268 	.word	0x20000268
 8002e40:	00000fff 	.word	0x00000fff
 8002e44:	40001400 	.word	0x40001400
 8002e48:	20000270 	.word	0x20000270
 8002e4c:	2000026e 	.word	0x2000026e
 8002e50:	42400000 	.word	0x42400000
 8002e54:	20000278 	.word	0x20000278
 8002e58:	0800770c 	.word	0x0800770c
 8002e5c:	20000280 	.word	0x20000280
 8002e60:	08007728 	.word	0x08007728
 8002e64:	08007744 	.word	0x08007744
 8002e68:	08007760 	.word	0x08007760

08002e6c <tim8bit>:

void tim8bit() {
 8002e6c:	b580      	push	{r7, lr}
 8002e6e:	af00      	add	r7, sp, #0
	USART_WRITE(USART2, "//===| 8-bit Num |===//\n\r", 26);
 8002e70:	4b8a      	ldr	r3, [pc, #552]	; (800309c <tim8bit+0x230>)
 8002e72:	488b      	ldr	r0, [pc, #556]	; (80030a0 <tim8bit+0x234>)
 8002e74:	221a      	movs	r2, #26
 8002e76:	0019      	movs	r1, r3
 8002e78:	f001 fb9c 	bl	80045b4 <USART_WRITE>
	a3 = 0, b3 = 0, c3 = 0;
 8002e7c:	4b89      	ldr	r3, [pc, #548]	; (80030a4 <tim8bit+0x238>)
 8002e7e:	2200      	movs	r2, #0
 8002e80:	701a      	strb	r2, [r3, #0]
 8002e82:	4b89      	ldr	r3, [pc, #548]	; (80030a8 <tim8bit+0x23c>)
 8002e84:	2200      	movs	r2, #0
 8002e86:	701a      	strb	r2, [r3, #0]
 8002e88:	4b88      	ldr	r3, [pc, #544]	; (80030ac <tim8bit+0x240>)
 8002e8a:	2200      	movs	r2, #0
 8002e8c:	701a      	strb	r2, [r3, #0]

	a3 = 0x0F;
 8002e8e:	4b85      	ldr	r3, [pc, #532]	; (80030a4 <tim8bit+0x238>)
 8002e90:	220f      	movs	r2, #15
 8002e92:	701a      	strb	r2, [r3, #0]
	b3 = 0x0F;
 8002e94:	4b84      	ldr	r3, [pc, #528]	; (80030a8 <tim8bit+0x23c>)
 8002e96:	220f      	movs	r2, #15
 8002e98:	701a      	strb	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002e9a:	4b85      	ldr	r3, [pc, #532]	; (80030b0 <tim8bit+0x244>)
 8002e9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e9e:	b29a      	uxth	r2, r3
 8002ea0:	4b84      	ldr	r3, [pc, #528]	; (80030b4 <tim8bit+0x248>)
 8002ea2:	801a      	strh	r2, [r3, #0]
	c3 = a3 + b3;
 8002ea4:	4b7f      	ldr	r3, [pc, #508]	; (80030a4 <tim8bit+0x238>)
 8002ea6:	781a      	ldrb	r2, [r3, #0]
 8002ea8:	4b7f      	ldr	r3, [pc, #508]	; (80030a8 <tim8bit+0x23c>)
 8002eaa:	781b      	ldrb	r3, [r3, #0]
 8002eac:	18d3      	adds	r3, r2, r3
 8002eae:	b2da      	uxtb	r2, r3
 8002eb0:	4b7e      	ldr	r3, [pc, #504]	; (80030ac <tim8bit+0x240>)
 8002eb2:	701a      	strb	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002eb4:	4b7e      	ldr	r3, [pc, #504]	; (80030b0 <tim8bit+0x244>)
 8002eb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002eb8:	b29a      	uxth	r2, r3
 8002eba:	4b7f      	ldr	r3, [pc, #508]	; (80030b8 <tim8bit+0x24c>)
 8002ebc:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002ebe:	4b7e      	ldr	r3, [pc, #504]	; (80030b8 <tim8bit+0x24c>)
 8002ec0:	881b      	ldrh	r3, [r3, #0]
 8002ec2:	001a      	movs	r2, r3
 8002ec4:	4b7b      	ldr	r3, [pc, #492]	; (80030b4 <tim8bit+0x248>)
 8002ec6:	881b      	ldrh	r3, [r3, #0]
 8002ec8:	1ad3      	subs	r3, r2, r3
 8002eca:	0018      	movs	r0, r3
 8002ecc:	f7fd fd1e 	bl	800090c <__aeabi_i2f>
 8002ed0:	1c03      	adds	r3, r0, #0
 8002ed2:	497a      	ldr	r1, [pc, #488]	; (80030bc <tim8bit+0x250>)
 8002ed4:	1c18      	adds	r0, r3, #0
 8002ed6:	f7fd fc01 	bl	80006dc <__aeabi_fdiv>
 8002eda:	1c03      	adds	r3, r0, #0
 8002edc:	1c18      	adds	r0, r3, #0
 8002ede:	f7ff fb49 	bl	8002574 <__aeabi_f2d>
 8002ee2:	0002      	movs	r2, r0
 8002ee4:	000b      	movs	r3, r1
 8002ee6:	4976      	ldr	r1, [pc, #472]	; (80030c0 <tim8bit+0x254>)
 8002ee8:	600a      	str	r2, [r1, #0]
 8002eea:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(ADD): %0.5fus\n", timLap);
 8002eec:	4b74      	ldr	r3, [pc, #464]	; (80030c0 <tim8bit+0x254>)
 8002eee:	681a      	ldr	r2, [r3, #0]
 8002ef0:	685b      	ldr	r3, [r3, #4]
 8002ef2:	4974      	ldr	r1, [pc, #464]	; (80030c4 <tim8bit+0x258>)
 8002ef4:	4874      	ldr	r0, [pc, #464]	; (80030c8 <tim8bit+0x25c>)
 8002ef6:	f002 f885 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002efa:	4b73      	ldr	r3, [pc, #460]	; (80030c8 <tim8bit+0x25c>)
 8002efc:	0018      	movs	r0, r3
 8002efe:	f7fd f903 	bl	8000108 <strlen>
 8002f02:	0002      	movs	r2, r0
 8002f04:	4b70      	ldr	r3, [pc, #448]	; (80030c8 <tim8bit+0x25c>)
 8002f06:	4866      	ldr	r0, [pc, #408]	; (80030a0 <tim8bit+0x234>)
 8002f08:	0019      	movs	r1, r3
 8002f0a:	f001 fb53 	bl	80045b4 <USART_WRITE>


	a3 = 0xFF;
 8002f0e:	4b65      	ldr	r3, [pc, #404]	; (80030a4 <tim8bit+0x238>)
 8002f10:	22ff      	movs	r2, #255	; 0xff
 8002f12:	701a      	strb	r2, [r3, #0]
	b3 = 0xFF;
 8002f14:	4b64      	ldr	r3, [pc, #400]	; (80030a8 <tim8bit+0x23c>)
 8002f16:	22ff      	movs	r2, #255	; 0xff
 8002f18:	701a      	strb	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002f1a:	4b65      	ldr	r3, [pc, #404]	; (80030b0 <tim8bit+0x244>)
 8002f1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f1e:	b29a      	uxth	r2, r3
 8002f20:	4b64      	ldr	r3, [pc, #400]	; (80030b4 <tim8bit+0x248>)
 8002f22:	801a      	strh	r2, [r3, #0]
	c3 = a3 - b3;
 8002f24:	4b5f      	ldr	r3, [pc, #380]	; (80030a4 <tim8bit+0x238>)
 8002f26:	781a      	ldrb	r2, [r3, #0]
 8002f28:	4b5f      	ldr	r3, [pc, #380]	; (80030a8 <tim8bit+0x23c>)
 8002f2a:	781b      	ldrb	r3, [r3, #0]
 8002f2c:	1ad3      	subs	r3, r2, r3
 8002f2e:	b2da      	uxtb	r2, r3
 8002f30:	4b5e      	ldr	r3, [pc, #376]	; (80030ac <tim8bit+0x240>)
 8002f32:	701a      	strb	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002f34:	4b5e      	ldr	r3, [pc, #376]	; (80030b0 <tim8bit+0x244>)
 8002f36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f38:	b29a      	uxth	r2, r3
 8002f3a:	4b5f      	ldr	r3, [pc, #380]	; (80030b8 <tim8bit+0x24c>)
 8002f3c:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002f3e:	4b5e      	ldr	r3, [pc, #376]	; (80030b8 <tim8bit+0x24c>)
 8002f40:	881b      	ldrh	r3, [r3, #0]
 8002f42:	001a      	movs	r2, r3
 8002f44:	4b5b      	ldr	r3, [pc, #364]	; (80030b4 <tim8bit+0x248>)
 8002f46:	881b      	ldrh	r3, [r3, #0]
 8002f48:	1ad3      	subs	r3, r2, r3
 8002f4a:	0018      	movs	r0, r3
 8002f4c:	f7fd fcde 	bl	800090c <__aeabi_i2f>
 8002f50:	1c03      	adds	r3, r0, #0
 8002f52:	495a      	ldr	r1, [pc, #360]	; (80030bc <tim8bit+0x250>)
 8002f54:	1c18      	adds	r0, r3, #0
 8002f56:	f7fd fbc1 	bl	80006dc <__aeabi_fdiv>
 8002f5a:	1c03      	adds	r3, r0, #0
 8002f5c:	1c18      	adds	r0, r3, #0
 8002f5e:	f7ff fb09 	bl	8002574 <__aeabi_f2d>
 8002f62:	0002      	movs	r2, r0
 8002f64:	000b      	movs	r3, r1
 8002f66:	4956      	ldr	r1, [pc, #344]	; (80030c0 <tim8bit+0x254>)
 8002f68:	600a      	str	r2, [r1, #0]
 8002f6a:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(SUB): %0.5fus\n", timLap);
 8002f6c:	4b54      	ldr	r3, [pc, #336]	; (80030c0 <tim8bit+0x254>)
 8002f6e:	681a      	ldr	r2, [r3, #0]
 8002f70:	685b      	ldr	r3, [r3, #4]
 8002f72:	4956      	ldr	r1, [pc, #344]	; (80030cc <tim8bit+0x260>)
 8002f74:	4854      	ldr	r0, [pc, #336]	; (80030c8 <tim8bit+0x25c>)
 8002f76:	f002 f845 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002f7a:	4b53      	ldr	r3, [pc, #332]	; (80030c8 <tim8bit+0x25c>)
 8002f7c:	0018      	movs	r0, r3
 8002f7e:	f7fd f8c3 	bl	8000108 <strlen>
 8002f82:	0002      	movs	r2, r0
 8002f84:	4b50      	ldr	r3, [pc, #320]	; (80030c8 <tim8bit+0x25c>)
 8002f86:	4846      	ldr	r0, [pc, #280]	; (80030a0 <tim8bit+0x234>)
 8002f88:	0019      	movs	r1, r3
 8002f8a:	f001 fb13 	bl	80045b4 <USART_WRITE>


	a3 = 0x0F;
 8002f8e:	4b45      	ldr	r3, [pc, #276]	; (80030a4 <tim8bit+0x238>)
 8002f90:	220f      	movs	r2, #15
 8002f92:	701a      	strb	r2, [r3, #0]
	b3 = 0x0F;
 8002f94:	4b44      	ldr	r3, [pc, #272]	; (80030a8 <tim8bit+0x23c>)
 8002f96:	220f      	movs	r2, #15
 8002f98:	701a      	strb	r2, [r3, #0]
	timStart = TIM7->CNT;
 8002f9a:	4b45      	ldr	r3, [pc, #276]	; (80030b0 <tim8bit+0x244>)
 8002f9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f9e:	b29a      	uxth	r2, r3
 8002fa0:	4b44      	ldr	r3, [pc, #272]	; (80030b4 <tim8bit+0x248>)
 8002fa2:	801a      	strh	r2, [r3, #0]
	c3 = a3 * b3;
 8002fa4:	4b3f      	ldr	r3, [pc, #252]	; (80030a4 <tim8bit+0x238>)
 8002fa6:	781b      	ldrb	r3, [r3, #0]
 8002fa8:	4a3f      	ldr	r2, [pc, #252]	; (80030a8 <tim8bit+0x23c>)
 8002faa:	7812      	ldrb	r2, [r2, #0]
 8002fac:	4353      	muls	r3, r2
 8002fae:	b2da      	uxtb	r2, r3
 8002fb0:	4b3e      	ldr	r3, [pc, #248]	; (80030ac <tim8bit+0x240>)
 8002fb2:	701a      	strb	r2, [r3, #0]
	timEnd = TIM7->CNT;
 8002fb4:	4b3e      	ldr	r3, [pc, #248]	; (80030b0 <tim8bit+0x244>)
 8002fb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fb8:	b29a      	uxth	r2, r3
 8002fba:	4b3f      	ldr	r3, [pc, #252]	; (80030b8 <tim8bit+0x24c>)
 8002fbc:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8002fbe:	4b3e      	ldr	r3, [pc, #248]	; (80030b8 <tim8bit+0x24c>)
 8002fc0:	881b      	ldrh	r3, [r3, #0]
 8002fc2:	001a      	movs	r2, r3
 8002fc4:	4b3b      	ldr	r3, [pc, #236]	; (80030b4 <tim8bit+0x248>)
 8002fc6:	881b      	ldrh	r3, [r3, #0]
 8002fc8:	1ad3      	subs	r3, r2, r3
 8002fca:	0018      	movs	r0, r3
 8002fcc:	f7fd fc9e 	bl	800090c <__aeabi_i2f>
 8002fd0:	1c03      	adds	r3, r0, #0
 8002fd2:	493a      	ldr	r1, [pc, #232]	; (80030bc <tim8bit+0x250>)
 8002fd4:	1c18      	adds	r0, r3, #0
 8002fd6:	f7fd fb81 	bl	80006dc <__aeabi_fdiv>
 8002fda:	1c03      	adds	r3, r0, #0
 8002fdc:	1c18      	adds	r0, r3, #0
 8002fde:	f7ff fac9 	bl	8002574 <__aeabi_f2d>
 8002fe2:	0002      	movs	r2, r0
 8002fe4:	000b      	movs	r3, r1
 8002fe6:	4936      	ldr	r1, [pc, #216]	; (80030c0 <tim8bit+0x254>)
 8002fe8:	600a      	str	r2, [r1, #0]
 8002fea:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(MUL): %0.5fus\n", timLap);
 8002fec:	4b34      	ldr	r3, [pc, #208]	; (80030c0 <tim8bit+0x254>)
 8002fee:	681a      	ldr	r2, [r3, #0]
 8002ff0:	685b      	ldr	r3, [r3, #4]
 8002ff2:	4937      	ldr	r1, [pc, #220]	; (80030d0 <tim8bit+0x264>)
 8002ff4:	4834      	ldr	r0, [pc, #208]	; (80030c8 <tim8bit+0x25c>)
 8002ff6:	f002 f805 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8002ffa:	4b33      	ldr	r3, [pc, #204]	; (80030c8 <tim8bit+0x25c>)
 8002ffc:	0018      	movs	r0, r3
 8002ffe:	f7fd f883 	bl	8000108 <strlen>
 8003002:	0002      	movs	r2, r0
 8003004:	4b30      	ldr	r3, [pc, #192]	; (80030c8 <tim8bit+0x25c>)
 8003006:	4826      	ldr	r0, [pc, #152]	; (80030a0 <tim8bit+0x234>)
 8003008:	0019      	movs	r1, r3
 800300a:	f001 fad3 	bl	80045b4 <USART_WRITE>


	a3 = 0xFF;
 800300e:	4b25      	ldr	r3, [pc, #148]	; (80030a4 <tim8bit+0x238>)
 8003010:	22ff      	movs	r2, #255	; 0xff
 8003012:	701a      	strb	r2, [r3, #0]
	b3 = 0xFF;
 8003014:	4b24      	ldr	r3, [pc, #144]	; (80030a8 <tim8bit+0x23c>)
 8003016:	22ff      	movs	r2, #255	; 0xff
 8003018:	701a      	strb	r2, [r3, #0]
	timStart = TIM7->CNT;
 800301a:	4b25      	ldr	r3, [pc, #148]	; (80030b0 <tim8bit+0x244>)
 800301c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800301e:	b29a      	uxth	r2, r3
 8003020:	4b24      	ldr	r3, [pc, #144]	; (80030b4 <tim8bit+0x248>)
 8003022:	801a      	strh	r2, [r3, #0]
	c3 = a3 / b3;
 8003024:	4b1f      	ldr	r3, [pc, #124]	; (80030a4 <tim8bit+0x238>)
 8003026:	781a      	ldrb	r2, [r3, #0]
 8003028:	4b1f      	ldr	r3, [pc, #124]	; (80030a8 <tim8bit+0x23c>)
 800302a:	781b      	ldrb	r3, [r3, #0]
 800302c:	0019      	movs	r1, r3
 800302e:	0010      	movs	r0, r2
 8003030:	f7fd f886 	bl	8000140 <__udivsi3>
 8003034:	0003      	movs	r3, r0
 8003036:	b2da      	uxtb	r2, r3
 8003038:	4b1c      	ldr	r3, [pc, #112]	; (80030ac <tim8bit+0x240>)
 800303a:	701a      	strb	r2, [r3, #0]
	timEnd = TIM7->CNT;
 800303c:	4b1c      	ldr	r3, [pc, #112]	; (80030b0 <tim8bit+0x244>)
 800303e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003040:	b29a      	uxth	r2, r3
 8003042:	4b1d      	ldr	r3, [pc, #116]	; (80030b8 <tim8bit+0x24c>)
 8003044:	801a      	strh	r2, [r3, #0]
	timLap = ((float)(timEnd - timStart)) / 48;
 8003046:	4b1c      	ldr	r3, [pc, #112]	; (80030b8 <tim8bit+0x24c>)
 8003048:	881b      	ldrh	r3, [r3, #0]
 800304a:	001a      	movs	r2, r3
 800304c:	4b19      	ldr	r3, [pc, #100]	; (80030b4 <tim8bit+0x248>)
 800304e:	881b      	ldrh	r3, [r3, #0]
 8003050:	1ad3      	subs	r3, r2, r3
 8003052:	0018      	movs	r0, r3
 8003054:	f7fd fc5a 	bl	800090c <__aeabi_i2f>
 8003058:	1c03      	adds	r3, r0, #0
 800305a:	4918      	ldr	r1, [pc, #96]	; (80030bc <tim8bit+0x250>)
 800305c:	1c18      	adds	r0, r3, #0
 800305e:	f7fd fb3d 	bl	80006dc <__aeabi_fdiv>
 8003062:	1c03      	adds	r3, r0, #0
 8003064:	1c18      	adds	r0, r3, #0
 8003066:	f7ff fa85 	bl	8002574 <__aeabi_f2d>
 800306a:	0002      	movs	r2, r0
 800306c:	000b      	movs	r3, r1
 800306e:	4914      	ldr	r1, [pc, #80]	; (80030c0 <tim8bit+0x254>)
 8003070:	600a      	str	r2, [r1, #0]
 8003072:	604b      	str	r3, [r1, #4]
	sprintf(strVal, "Time Lapsed(DIV): %0.5fus\n", timLap);
 8003074:	4b12      	ldr	r3, [pc, #72]	; (80030c0 <tim8bit+0x254>)
 8003076:	681a      	ldr	r2, [r3, #0]
 8003078:	685b      	ldr	r3, [r3, #4]
 800307a:	4916      	ldr	r1, [pc, #88]	; (80030d4 <tim8bit+0x268>)
 800307c:	4812      	ldr	r0, [pc, #72]	; (80030c8 <tim8bit+0x25c>)
 800307e:	f001 ffc1 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8003082:	4b11      	ldr	r3, [pc, #68]	; (80030c8 <tim8bit+0x25c>)
 8003084:	0018      	movs	r0, r3
 8003086:	f7fd f83f 	bl	8000108 <strlen>
 800308a:	0002      	movs	r2, r0
 800308c:	4b0e      	ldr	r3, [pc, #56]	; (80030c8 <tim8bit+0x25c>)
 800308e:	4804      	ldr	r0, [pc, #16]	; (80030a0 <tim8bit+0x234>)
 8003090:	0019      	movs	r1, r3
 8003092:	f001 fa8f 	bl	80045b4 <USART_WRITE>
}
 8003096:	46c0      	nop			; (mov r8, r8)
 8003098:	46bd      	mov	sp, r7
 800309a:	bd80      	pop	{r7, pc}
 800309c:	080077b4 	.word	0x080077b4
 80030a0:	40004400 	.word	0x40004400
 80030a4:	2000026a 	.word	0x2000026a
 80030a8:	2000026b 	.word	0x2000026b
 80030ac:	2000026c 	.word	0x2000026c
 80030b0:	40001400 	.word	0x40001400
 80030b4:	20000270 	.word	0x20000270
 80030b8:	2000026e 	.word	0x2000026e
 80030bc:	42400000 	.word	0x42400000
 80030c0:	20000278 	.word	0x20000278
 80030c4:	0800770c 	.word	0x0800770c
 80030c8:	20000280 	.word	0x20000280
 80030cc:	08007728 	.word	0x08007728
 80030d0:	08007744 	.word	0x08007744
 80030d4:	08007760 	.word	0x08007760

080030d8 <main>:

int main() {
 80030d8:	b580      	push	{r7, lr}
 80030da:	b082      	sub	sp, #8
 80030dc:	af02      	add	r7, sp, #8
	RCC_CONFIG_48MHZ();
 80030de:	f001 fa9d 	bl	800461c <RCC_CONFIG_48MHZ>
	USART_INIT(USART2, PORTA, PORTA, 2, 3, 9600);
 80030e2:	2390      	movs	r3, #144	; 0x90
 80030e4:	05da      	lsls	r2, r3, #23
 80030e6:	2390      	movs	r3, #144	; 0x90
 80030e8:	05d9      	lsls	r1, r3, #23
 80030ea:	481b      	ldr	r0, [pc, #108]	; (8003158 <main+0x80>)
 80030ec:	2396      	movs	r3, #150	; 0x96
 80030ee:	019b      	lsls	r3, r3, #6
 80030f0:	9301      	str	r3, [sp, #4]
 80030f2:	2303      	movs	r3, #3
 80030f4:	9300      	str	r3, [sp, #0]
 80030f6:	2302      	movs	r3, #2
 80030f8:	f001 f8c8 	bl	800428c <USART_INIT>
	USART_WRITE(USART2, "\r\nRunning\n\r", 9);
 80030fc:	4b17      	ldr	r3, [pc, #92]	; (800315c <main+0x84>)
 80030fe:	4816      	ldr	r0, [pc, #88]	; (8003158 <main+0x80>)
 8003100:	2209      	movs	r2, #9
 8003102:	0019      	movs	r1, r3
 8003104:	f001 fa56 	bl	80045b4 <USART_WRITE>
	sprintf(strVal, "\n\rSystem Clk Val: %d\n", SystemCoreClock);
 8003108:	4b15      	ldr	r3, [pc, #84]	; (8003160 <main+0x88>)
 800310a:	681a      	ldr	r2, [r3, #0]
 800310c:	4915      	ldr	r1, [pc, #84]	; (8003164 <main+0x8c>)
 800310e:	4b16      	ldr	r3, [pc, #88]	; (8003168 <main+0x90>)
 8003110:	0018      	movs	r0, r3
 8003112:	f001 ff77 	bl	8005004 <siprintf>
	USART_WRITE(USART2, strVal, strlen(strVal));
 8003116:	4b14      	ldr	r3, [pc, #80]	; (8003168 <main+0x90>)
 8003118:	0018      	movs	r0, r3
 800311a:	f7fc fff5 	bl	8000108 <strlen>
 800311e:	0002      	movs	r2, r0
 8003120:	4b11      	ldr	r3, [pc, #68]	; (8003168 <main+0x90>)
 8003122:	480d      	ldr	r0, [pc, #52]	; (8003158 <main+0x80>)
 8003124:	0019      	movs	r1, r3
 8003126:	f001 fa45 	bl	80045b4 <USART_WRITE>

	gpio_config(PORTA, 5, OUTPUT_MODE, HIGH_SPEED, DI_PUPD, PHPL);
 800312a:	2390      	movs	r3, #144	; 0x90
 800312c:	05d8      	lsls	r0, r3, #23
 800312e:	2300      	movs	r3, #0
 8003130:	9301      	str	r3, [sp, #4]
 8003132:	2300      	movs	r3, #0
 8003134:	9300      	str	r3, [sp, #0]
 8003136:	2302      	movs	r3, #2
 8003138:	2201      	movs	r2, #1
 800313a:	2105      	movs	r1, #5
 800313c:	f000 feb8 	bl	8003eb0 <gpio_config>
	Ticks7_timer();
 8003140:	f7ff faaa 	bl	8002698 <Ticks7_timer>

	tim64bit();
 8003144:	f7ff fabc 	bl	80026c0 <tim64bit>
	tim32bit();
 8003148:	f7ff fc1c 	bl	8002984 <tim32bit>
	tim16bit();
 800314c:	f7ff fd52 	bl	8002bf4 <tim16bit>
	tim8bit();
 8003150:	f7ff fe8c 	bl	8002e6c <tim8bit>

	while (1) {
 8003154:	e7fe      	b.n	8003154 <main+0x7c>
 8003156:	46c0      	nop			; (mov r8, r8)
 8003158:	40004400 	.word	0x40004400
 800315c:	080077d0 	.word	0x080077d0
 8003160:	20000000 	.word	0x20000000
 8003164:	080077dc 	.word	0x080077dc
 8003168:	20000280 	.word	0x20000280

0800316c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800316c:	b580      	push	{r7, lr}
 800316e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8003170:	e7fe      	b.n	8003170 <NMI_Handler+0x4>

08003172 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003172:	b580      	push	{r7, lr}
 8003174:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003176:	e7fe      	b.n	8003176 <HardFault_Handler+0x4>

08003178 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003178:	b580      	push	{r7, lr}
 800317a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 800317c:	46c0      	nop			; (mov r8, r8)
 800317e:	46bd      	mov	sp, r7
 8003180:	bd80      	pop	{r7, pc}

08003182 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003182:	b580      	push	{r7, lr}
 8003184:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003186:	46c0      	nop			; (mov r8, r8)
 8003188:	46bd      	mov	sp, r7
 800318a:	bd80      	pop	{r7, pc}

0800318c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800318c:	b580      	push	{r7, lr}
 800318e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003190:	f000 f924 	bl	80033dc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003194:	46c0      	nop			; (mov r8, r8)
 8003196:	46bd      	mov	sp, r7
 8003198:	bd80      	pop	{r7, pc}

0800319a <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800319a:	b580      	push	{r7, lr}
 800319c:	af00      	add	r7, sp, #0
	return 1;
 800319e:	2301      	movs	r3, #1
}
 80031a0:	0018      	movs	r0, r3
 80031a2:	46bd      	mov	sp, r7
 80031a4:	bd80      	pop	{r7, pc}

080031a6 <_kill>:

int _kill(int pid, int sig)
{
 80031a6:	b580      	push	{r7, lr}
 80031a8:	b082      	sub	sp, #8
 80031aa:	af00      	add	r7, sp, #0
 80031ac:	6078      	str	r0, [r7, #4]
 80031ae:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80031b0:	f001 fa88 	bl	80046c4 <__errno>
 80031b4:	0003      	movs	r3, r0
 80031b6:	2216      	movs	r2, #22
 80031b8:	601a      	str	r2, [r3, #0]
	return -1;
 80031ba:	2301      	movs	r3, #1
 80031bc:	425b      	negs	r3, r3
}
 80031be:	0018      	movs	r0, r3
 80031c0:	46bd      	mov	sp, r7
 80031c2:	b002      	add	sp, #8
 80031c4:	bd80      	pop	{r7, pc}

080031c6 <_exit>:

void _exit (int status)
{
 80031c6:	b580      	push	{r7, lr}
 80031c8:	b082      	sub	sp, #8
 80031ca:	af00      	add	r7, sp, #0
 80031cc:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80031ce:	2301      	movs	r3, #1
 80031d0:	425a      	negs	r2, r3
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	0011      	movs	r1, r2
 80031d6:	0018      	movs	r0, r3
 80031d8:	f7ff ffe5 	bl	80031a6 <_kill>
	while (1) {}		/* Make sure we hang here */
 80031dc:	e7fe      	b.n	80031dc <_exit+0x16>

080031de <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80031de:	b580      	push	{r7, lr}
 80031e0:	b086      	sub	sp, #24
 80031e2:	af00      	add	r7, sp, #0
 80031e4:	60f8      	str	r0, [r7, #12]
 80031e6:	60b9      	str	r1, [r7, #8]
 80031e8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80031ea:	2300      	movs	r3, #0
 80031ec:	617b      	str	r3, [r7, #20]
 80031ee:	e00a      	b.n	8003206 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80031f0:	e000      	b.n	80031f4 <_read+0x16>
 80031f2:	bf00      	nop
 80031f4:	0001      	movs	r1, r0
 80031f6:	68bb      	ldr	r3, [r7, #8]
 80031f8:	1c5a      	adds	r2, r3, #1
 80031fa:	60ba      	str	r2, [r7, #8]
 80031fc:	b2ca      	uxtb	r2, r1
 80031fe:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003200:	697b      	ldr	r3, [r7, #20]
 8003202:	3301      	adds	r3, #1
 8003204:	617b      	str	r3, [r7, #20]
 8003206:	697a      	ldr	r2, [r7, #20]
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	429a      	cmp	r2, r3
 800320c:	dbf0      	blt.n	80031f0 <_read+0x12>
	}

return len;
 800320e:	687b      	ldr	r3, [r7, #4]
}
 8003210:	0018      	movs	r0, r3
 8003212:	46bd      	mov	sp, r7
 8003214:	b006      	add	sp, #24
 8003216:	bd80      	pop	{r7, pc}

08003218 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8003218:	b580      	push	{r7, lr}
 800321a:	b086      	sub	sp, #24
 800321c:	af00      	add	r7, sp, #0
 800321e:	60f8      	str	r0, [r7, #12]
 8003220:	60b9      	str	r1, [r7, #8]
 8003222:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003224:	2300      	movs	r3, #0
 8003226:	617b      	str	r3, [r7, #20]
 8003228:	e009      	b.n	800323e <_write+0x26>
	{
		__io_putchar(*ptr++);
 800322a:	68bb      	ldr	r3, [r7, #8]
 800322c:	1c5a      	adds	r2, r3, #1
 800322e:	60ba      	str	r2, [r7, #8]
 8003230:	781b      	ldrb	r3, [r3, #0]
 8003232:	0018      	movs	r0, r3
 8003234:	e000      	b.n	8003238 <_write+0x20>
 8003236:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003238:	697b      	ldr	r3, [r7, #20]
 800323a:	3301      	adds	r3, #1
 800323c:	617b      	str	r3, [r7, #20]
 800323e:	697a      	ldr	r2, [r7, #20]
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	429a      	cmp	r2, r3
 8003244:	dbf1      	blt.n	800322a <_write+0x12>
	}
	return len;
 8003246:	687b      	ldr	r3, [r7, #4]
}
 8003248:	0018      	movs	r0, r3
 800324a:	46bd      	mov	sp, r7
 800324c:	b006      	add	sp, #24
 800324e:	bd80      	pop	{r7, pc}

08003250 <_close>:

int _close(int file)
{
 8003250:	b580      	push	{r7, lr}
 8003252:	b082      	sub	sp, #8
 8003254:	af00      	add	r7, sp, #0
 8003256:	6078      	str	r0, [r7, #4]
	return -1;
 8003258:	2301      	movs	r3, #1
 800325a:	425b      	negs	r3, r3
}
 800325c:	0018      	movs	r0, r3
 800325e:	46bd      	mov	sp, r7
 8003260:	b002      	add	sp, #8
 8003262:	bd80      	pop	{r7, pc}

08003264 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8003264:	b580      	push	{r7, lr}
 8003266:	b082      	sub	sp, #8
 8003268:	af00      	add	r7, sp, #0
 800326a:	6078      	str	r0, [r7, #4]
 800326c:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800326e:	683b      	ldr	r3, [r7, #0]
 8003270:	2280      	movs	r2, #128	; 0x80
 8003272:	0192      	lsls	r2, r2, #6
 8003274:	605a      	str	r2, [r3, #4]
	return 0;
 8003276:	2300      	movs	r3, #0
}
 8003278:	0018      	movs	r0, r3
 800327a:	46bd      	mov	sp, r7
 800327c:	b002      	add	sp, #8
 800327e:	bd80      	pop	{r7, pc}

08003280 <_isatty>:

int _isatty(int file)
{
 8003280:	b580      	push	{r7, lr}
 8003282:	b082      	sub	sp, #8
 8003284:	af00      	add	r7, sp, #0
 8003286:	6078      	str	r0, [r7, #4]
	return 1;
 8003288:	2301      	movs	r3, #1
}
 800328a:	0018      	movs	r0, r3
 800328c:	46bd      	mov	sp, r7
 800328e:	b002      	add	sp, #8
 8003290:	bd80      	pop	{r7, pc}

08003292 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8003292:	b580      	push	{r7, lr}
 8003294:	b084      	sub	sp, #16
 8003296:	af00      	add	r7, sp, #0
 8003298:	60f8      	str	r0, [r7, #12]
 800329a:	60b9      	str	r1, [r7, #8]
 800329c:	607a      	str	r2, [r7, #4]
	return 0;
 800329e:	2300      	movs	r3, #0
}
 80032a0:	0018      	movs	r0, r3
 80032a2:	46bd      	mov	sp, r7
 80032a4:	b004      	add	sp, #16
 80032a6:	bd80      	pop	{r7, pc}

080032a8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80032a8:	b580      	push	{r7, lr}
 80032aa:	b086      	sub	sp, #24
 80032ac:	af00      	add	r7, sp, #0
 80032ae:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80032b0:	4a14      	ldr	r2, [pc, #80]	; (8003304 <_sbrk+0x5c>)
 80032b2:	4b15      	ldr	r3, [pc, #84]	; (8003308 <_sbrk+0x60>)
 80032b4:	1ad3      	subs	r3, r2, r3
 80032b6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80032b8:	697b      	ldr	r3, [r7, #20]
 80032ba:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80032bc:	4b13      	ldr	r3, [pc, #76]	; (800330c <_sbrk+0x64>)
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	2b00      	cmp	r3, #0
 80032c2:	d102      	bne.n	80032ca <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80032c4:	4b11      	ldr	r3, [pc, #68]	; (800330c <_sbrk+0x64>)
 80032c6:	4a12      	ldr	r2, [pc, #72]	; (8003310 <_sbrk+0x68>)
 80032c8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80032ca:	4b10      	ldr	r3, [pc, #64]	; (800330c <_sbrk+0x64>)
 80032cc:	681a      	ldr	r2, [r3, #0]
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	18d3      	adds	r3, r2, r3
 80032d2:	693a      	ldr	r2, [r7, #16]
 80032d4:	429a      	cmp	r2, r3
 80032d6:	d207      	bcs.n	80032e8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80032d8:	f001 f9f4 	bl	80046c4 <__errno>
 80032dc:	0003      	movs	r3, r0
 80032de:	220c      	movs	r2, #12
 80032e0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80032e2:	2301      	movs	r3, #1
 80032e4:	425b      	negs	r3, r3
 80032e6:	e009      	b.n	80032fc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80032e8:	4b08      	ldr	r3, [pc, #32]	; (800330c <_sbrk+0x64>)
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80032ee:	4b07      	ldr	r3, [pc, #28]	; (800330c <_sbrk+0x64>)
 80032f0:	681a      	ldr	r2, [r3, #0]
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	18d2      	adds	r2, r2, r3
 80032f6:	4b05      	ldr	r3, [pc, #20]	; (800330c <_sbrk+0x64>)
 80032f8:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80032fa:	68fb      	ldr	r3, [r7, #12]
}
 80032fc:	0018      	movs	r0, r3
 80032fe:	46bd      	mov	sp, r7
 8003300:	b006      	add	sp, #24
 8003302:	bd80      	pop	{r7, pc}
 8003304:	20004000 	.word	0x20004000
 8003308:	00000400 	.word	0x00000400
 800330c:	200002b4 	.word	0x200002b4
 8003310:	200003d0 	.word	0x200003d0

08003314 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8003314:	b580      	push	{r7, lr}
 8003316:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8003318:	46c0      	nop			; (mov r8, r8)
 800331a:	46bd      	mov	sp, r7
 800331c:	bd80      	pop	{r7, pc}
	...

08003320 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003320:	480d      	ldr	r0, [pc, #52]	; (8003358 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8003322:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003324:	480d      	ldr	r0, [pc, #52]	; (800335c <LoopForever+0x6>)
  ldr r1, =_edata
 8003326:	490e      	ldr	r1, [pc, #56]	; (8003360 <LoopForever+0xa>)
  ldr r2, =_sidata
 8003328:	4a0e      	ldr	r2, [pc, #56]	; (8003364 <LoopForever+0xe>)
  movs r3, #0
 800332a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800332c:	e002      	b.n	8003334 <LoopCopyDataInit>

0800332e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800332e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003330:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003332:	3304      	adds	r3, #4

08003334 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003334:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003336:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003338:	d3f9      	bcc.n	800332e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800333a:	4a0b      	ldr	r2, [pc, #44]	; (8003368 <LoopForever+0x12>)
  ldr r4, =_ebss
 800333c:	4c0b      	ldr	r4, [pc, #44]	; (800336c <LoopForever+0x16>)
  movs r3, #0
 800333e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003340:	e001      	b.n	8003346 <LoopFillZerobss>

08003342 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003342:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003344:	3204      	adds	r2, #4

08003346 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003346:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003348:	d3fb      	bcc.n	8003342 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800334a:	f7ff ffe3 	bl	8003314 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 800334e:	f001 f9bf 	bl	80046d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8003352:	f7ff fec1 	bl	80030d8 <main>

08003356 <LoopForever>:

LoopForever:
    b LoopForever
 8003356:	e7fe      	b.n	8003356 <LoopForever>
  ldr   r0, =_estack
 8003358:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 800335c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003360:	2000021c 	.word	0x2000021c
  ldr r2, =_sidata
 8003364:	08007d6c 	.word	0x08007d6c
  ldr r2, =_sbss
 8003368:	20000220 	.word	0x20000220
  ldr r4, =_ebss
 800336c:	200003d0 	.word	0x200003d0

08003370 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003370:	e7fe      	b.n	8003370 <ADC1_IRQHandler>
	...

08003374 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003374:	b590      	push	{r4, r7, lr}
 8003376:	b083      	sub	sp, #12
 8003378:	af00      	add	r7, sp, #0
 800337a:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800337c:	4b14      	ldr	r3, [pc, #80]	; (80033d0 <HAL_InitTick+0x5c>)
 800337e:	681c      	ldr	r4, [r3, #0]
 8003380:	4b14      	ldr	r3, [pc, #80]	; (80033d4 <HAL_InitTick+0x60>)
 8003382:	781b      	ldrb	r3, [r3, #0]
 8003384:	0019      	movs	r1, r3
 8003386:	23fa      	movs	r3, #250	; 0xfa
 8003388:	0098      	lsls	r0, r3, #2
 800338a:	f7fc fed9 	bl	8000140 <__udivsi3>
 800338e:	0003      	movs	r3, r0
 8003390:	0019      	movs	r1, r3
 8003392:	0020      	movs	r0, r4
 8003394:	f7fc fed4 	bl	8000140 <__udivsi3>
 8003398:	0003      	movs	r3, r0
 800339a:	0018      	movs	r0, r3
 800339c:	f000 f8e1 	bl	8003562 <HAL_SYSTICK_Config>
 80033a0:	1e03      	subs	r3, r0, #0
 80033a2:	d001      	beq.n	80033a8 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 80033a4:	2301      	movs	r3, #1
 80033a6:	e00f      	b.n	80033c8 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	2b03      	cmp	r3, #3
 80033ac:	d80b      	bhi.n	80033c6 <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80033ae:	6879      	ldr	r1, [r7, #4]
 80033b0:	2301      	movs	r3, #1
 80033b2:	425b      	negs	r3, r3
 80033b4:	2200      	movs	r2, #0
 80033b6:	0018      	movs	r0, r3
 80033b8:	f000 f8be 	bl	8003538 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80033bc:	4b06      	ldr	r3, [pc, #24]	; (80033d8 <HAL_InitTick+0x64>)
 80033be:	687a      	ldr	r2, [r7, #4]
 80033c0:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 80033c2:	2300      	movs	r3, #0
 80033c4:	e000      	b.n	80033c8 <HAL_InitTick+0x54>
    return HAL_ERROR;
 80033c6:	2301      	movs	r3, #1
}
 80033c8:	0018      	movs	r0, r3
 80033ca:	46bd      	mov	sp, r7
 80033cc:	b003      	add	sp, #12
 80033ce:	bd90      	pop	{r4, r7, pc}
 80033d0:	20000000 	.word	0x20000000
 80033d4:	20000008 	.word	0x20000008
 80033d8:	20000004 	.word	0x20000004

080033dc <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80033dc:	b580      	push	{r7, lr}
 80033de:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80033e0:	4b05      	ldr	r3, [pc, #20]	; (80033f8 <HAL_IncTick+0x1c>)
 80033e2:	781b      	ldrb	r3, [r3, #0]
 80033e4:	001a      	movs	r2, r3
 80033e6:	4b05      	ldr	r3, [pc, #20]	; (80033fc <HAL_IncTick+0x20>)
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	18d2      	adds	r2, r2, r3
 80033ec:	4b03      	ldr	r3, [pc, #12]	; (80033fc <HAL_IncTick+0x20>)
 80033ee:	601a      	str	r2, [r3, #0]
}
 80033f0:	46c0      	nop			; (mov r8, r8)
 80033f2:	46bd      	mov	sp, r7
 80033f4:	bd80      	pop	{r7, pc}
 80033f6:	46c0      	nop			; (mov r8, r8)
 80033f8:	20000008 	.word	0x20000008
 80033fc:	200002b8 	.word	0x200002b8

08003400 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003400:	b580      	push	{r7, lr}
 8003402:	af00      	add	r7, sp, #0
  return uwTick;
 8003404:	4b02      	ldr	r3, [pc, #8]	; (8003410 <HAL_GetTick+0x10>)
 8003406:	681b      	ldr	r3, [r3, #0]
}
 8003408:	0018      	movs	r0, r3
 800340a:	46bd      	mov	sp, r7
 800340c:	bd80      	pop	{r7, pc}
 800340e:	46c0      	nop			; (mov r8, r8)
 8003410:	200002b8 	.word	0x200002b8

08003414 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003414:	b590      	push	{r4, r7, lr}
 8003416:	b083      	sub	sp, #12
 8003418:	af00      	add	r7, sp, #0
 800341a:	0002      	movs	r2, r0
 800341c:	6039      	str	r1, [r7, #0]
 800341e:	1dfb      	adds	r3, r7, #7
 8003420:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8003422:	1dfb      	adds	r3, r7, #7
 8003424:	781b      	ldrb	r3, [r3, #0]
 8003426:	2b7f      	cmp	r3, #127	; 0x7f
 8003428:	d828      	bhi.n	800347c <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800342a:	4a2f      	ldr	r2, [pc, #188]	; (80034e8 <__NVIC_SetPriority+0xd4>)
 800342c:	1dfb      	adds	r3, r7, #7
 800342e:	781b      	ldrb	r3, [r3, #0]
 8003430:	b25b      	sxtb	r3, r3
 8003432:	089b      	lsrs	r3, r3, #2
 8003434:	33c0      	adds	r3, #192	; 0xc0
 8003436:	009b      	lsls	r3, r3, #2
 8003438:	589b      	ldr	r3, [r3, r2]
 800343a:	1dfa      	adds	r2, r7, #7
 800343c:	7812      	ldrb	r2, [r2, #0]
 800343e:	0011      	movs	r1, r2
 8003440:	2203      	movs	r2, #3
 8003442:	400a      	ands	r2, r1
 8003444:	00d2      	lsls	r2, r2, #3
 8003446:	21ff      	movs	r1, #255	; 0xff
 8003448:	4091      	lsls	r1, r2
 800344a:	000a      	movs	r2, r1
 800344c:	43d2      	mvns	r2, r2
 800344e:	401a      	ands	r2, r3
 8003450:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003452:	683b      	ldr	r3, [r7, #0]
 8003454:	019b      	lsls	r3, r3, #6
 8003456:	22ff      	movs	r2, #255	; 0xff
 8003458:	401a      	ands	r2, r3
 800345a:	1dfb      	adds	r3, r7, #7
 800345c:	781b      	ldrb	r3, [r3, #0]
 800345e:	0018      	movs	r0, r3
 8003460:	2303      	movs	r3, #3
 8003462:	4003      	ands	r3, r0
 8003464:	00db      	lsls	r3, r3, #3
 8003466:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003468:	481f      	ldr	r0, [pc, #124]	; (80034e8 <__NVIC_SetPriority+0xd4>)
 800346a:	1dfb      	adds	r3, r7, #7
 800346c:	781b      	ldrb	r3, [r3, #0]
 800346e:	b25b      	sxtb	r3, r3
 8003470:	089b      	lsrs	r3, r3, #2
 8003472:	430a      	orrs	r2, r1
 8003474:	33c0      	adds	r3, #192	; 0xc0
 8003476:	009b      	lsls	r3, r3, #2
 8003478:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 800347a:	e031      	b.n	80034e0 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800347c:	4a1b      	ldr	r2, [pc, #108]	; (80034ec <__NVIC_SetPriority+0xd8>)
 800347e:	1dfb      	adds	r3, r7, #7
 8003480:	781b      	ldrb	r3, [r3, #0]
 8003482:	0019      	movs	r1, r3
 8003484:	230f      	movs	r3, #15
 8003486:	400b      	ands	r3, r1
 8003488:	3b08      	subs	r3, #8
 800348a:	089b      	lsrs	r3, r3, #2
 800348c:	3306      	adds	r3, #6
 800348e:	009b      	lsls	r3, r3, #2
 8003490:	18d3      	adds	r3, r2, r3
 8003492:	3304      	adds	r3, #4
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	1dfa      	adds	r2, r7, #7
 8003498:	7812      	ldrb	r2, [r2, #0]
 800349a:	0011      	movs	r1, r2
 800349c:	2203      	movs	r2, #3
 800349e:	400a      	ands	r2, r1
 80034a0:	00d2      	lsls	r2, r2, #3
 80034a2:	21ff      	movs	r1, #255	; 0xff
 80034a4:	4091      	lsls	r1, r2
 80034a6:	000a      	movs	r2, r1
 80034a8:	43d2      	mvns	r2, r2
 80034aa:	401a      	ands	r2, r3
 80034ac:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80034ae:	683b      	ldr	r3, [r7, #0]
 80034b0:	019b      	lsls	r3, r3, #6
 80034b2:	22ff      	movs	r2, #255	; 0xff
 80034b4:	401a      	ands	r2, r3
 80034b6:	1dfb      	adds	r3, r7, #7
 80034b8:	781b      	ldrb	r3, [r3, #0]
 80034ba:	0018      	movs	r0, r3
 80034bc:	2303      	movs	r3, #3
 80034be:	4003      	ands	r3, r0
 80034c0:	00db      	lsls	r3, r3, #3
 80034c2:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80034c4:	4809      	ldr	r0, [pc, #36]	; (80034ec <__NVIC_SetPriority+0xd8>)
 80034c6:	1dfb      	adds	r3, r7, #7
 80034c8:	781b      	ldrb	r3, [r3, #0]
 80034ca:	001c      	movs	r4, r3
 80034cc:	230f      	movs	r3, #15
 80034ce:	4023      	ands	r3, r4
 80034d0:	3b08      	subs	r3, #8
 80034d2:	089b      	lsrs	r3, r3, #2
 80034d4:	430a      	orrs	r2, r1
 80034d6:	3306      	adds	r3, #6
 80034d8:	009b      	lsls	r3, r3, #2
 80034da:	18c3      	adds	r3, r0, r3
 80034dc:	3304      	adds	r3, #4
 80034de:	601a      	str	r2, [r3, #0]
}
 80034e0:	46c0      	nop			; (mov r8, r8)
 80034e2:	46bd      	mov	sp, r7
 80034e4:	b003      	add	sp, #12
 80034e6:	bd90      	pop	{r4, r7, pc}
 80034e8:	e000e100 	.word	0xe000e100
 80034ec:	e000ed00 	.word	0xe000ed00

080034f0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80034f0:	b580      	push	{r7, lr}
 80034f2:	b082      	sub	sp, #8
 80034f4:	af00      	add	r7, sp, #0
 80034f6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	1e5a      	subs	r2, r3, #1
 80034fc:	2380      	movs	r3, #128	; 0x80
 80034fe:	045b      	lsls	r3, r3, #17
 8003500:	429a      	cmp	r2, r3
 8003502:	d301      	bcc.n	8003508 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003504:	2301      	movs	r3, #1
 8003506:	e010      	b.n	800352a <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003508:	4b0a      	ldr	r3, [pc, #40]	; (8003534 <SysTick_Config+0x44>)
 800350a:	687a      	ldr	r2, [r7, #4]
 800350c:	3a01      	subs	r2, #1
 800350e:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003510:	2301      	movs	r3, #1
 8003512:	425b      	negs	r3, r3
 8003514:	2103      	movs	r1, #3
 8003516:	0018      	movs	r0, r3
 8003518:	f7ff ff7c 	bl	8003414 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800351c:	4b05      	ldr	r3, [pc, #20]	; (8003534 <SysTick_Config+0x44>)
 800351e:	2200      	movs	r2, #0
 8003520:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003522:	4b04      	ldr	r3, [pc, #16]	; (8003534 <SysTick_Config+0x44>)
 8003524:	2207      	movs	r2, #7
 8003526:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003528:	2300      	movs	r3, #0
}
 800352a:	0018      	movs	r0, r3
 800352c:	46bd      	mov	sp, r7
 800352e:	b002      	add	sp, #8
 8003530:	bd80      	pop	{r7, pc}
 8003532:	46c0      	nop			; (mov r8, r8)
 8003534:	e000e010 	.word	0xe000e010

08003538 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003538:	b580      	push	{r7, lr}
 800353a:	b084      	sub	sp, #16
 800353c:	af00      	add	r7, sp, #0
 800353e:	60b9      	str	r1, [r7, #8]
 8003540:	607a      	str	r2, [r7, #4]
 8003542:	210f      	movs	r1, #15
 8003544:	187b      	adds	r3, r7, r1
 8003546:	1c02      	adds	r2, r0, #0
 8003548:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 800354a:	68ba      	ldr	r2, [r7, #8]
 800354c:	187b      	adds	r3, r7, r1
 800354e:	781b      	ldrb	r3, [r3, #0]
 8003550:	b25b      	sxtb	r3, r3
 8003552:	0011      	movs	r1, r2
 8003554:	0018      	movs	r0, r3
 8003556:	f7ff ff5d 	bl	8003414 <__NVIC_SetPriority>
}
 800355a:	46c0      	nop			; (mov r8, r8)
 800355c:	46bd      	mov	sp, r7
 800355e:	b004      	add	sp, #16
 8003560:	bd80      	pop	{r7, pc}

08003562 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8003562:	b580      	push	{r7, lr}
 8003564:	b082      	sub	sp, #8
 8003566:	af00      	add	r7, sp, #0
 8003568:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	0018      	movs	r0, r3
 800356e:	f7ff ffbf 	bl	80034f0 <SysTick_Config>
 8003572:	0003      	movs	r3, r0
}
 8003574:	0018      	movs	r0, r3
 8003576:	46bd      	mov	sp, r7
 8003578:	b002      	add	sp, #8
 800357a:	bd80      	pop	{r7, pc}

0800357c <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800357c:	b580      	push	{r7, lr}
 800357e:	b088      	sub	sp, #32
 8003580:	af00      	add	r7, sp, #0
 8003582:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	2b00      	cmp	r3, #0
 8003588:	d101      	bne.n	800358e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800358a:	2301      	movs	r3, #1
 800358c:	e305      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	2201      	movs	r2, #1
 8003594:	4013      	ands	r3, r2
 8003596:	d100      	bne.n	800359a <HAL_RCC_OscConfig+0x1e>
 8003598:	e08d      	b.n	80036b6 <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 800359a:	4bc5      	ldr	r3, [pc, #788]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 800359c:	685b      	ldr	r3, [r3, #4]
 800359e:	220c      	movs	r2, #12
 80035a0:	4013      	ands	r3, r2
 80035a2:	2b04      	cmp	r3, #4
 80035a4:	d00e      	beq.n	80035c4 <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80035a6:	4bc2      	ldr	r3, [pc, #776]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80035a8:	685b      	ldr	r3, [r3, #4]
 80035aa:	220c      	movs	r2, #12
 80035ac:	4013      	ands	r3, r2
 80035ae:	2b08      	cmp	r3, #8
 80035b0:	d116      	bne.n	80035e0 <HAL_RCC_OscConfig+0x64>
 80035b2:	4bbf      	ldr	r3, [pc, #764]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80035b4:	685a      	ldr	r2, [r3, #4]
 80035b6:	23c0      	movs	r3, #192	; 0xc0
 80035b8:	025b      	lsls	r3, r3, #9
 80035ba:	401a      	ands	r2, r3
 80035bc:	2380      	movs	r3, #128	; 0x80
 80035be:	025b      	lsls	r3, r3, #9
 80035c0:	429a      	cmp	r2, r3
 80035c2:	d10d      	bne.n	80035e0 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80035c4:	4bba      	ldr	r3, [pc, #744]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80035c6:	681a      	ldr	r2, [r3, #0]
 80035c8:	2380      	movs	r3, #128	; 0x80
 80035ca:	029b      	lsls	r3, r3, #10
 80035cc:	4013      	ands	r3, r2
 80035ce:	d100      	bne.n	80035d2 <HAL_RCC_OscConfig+0x56>
 80035d0:	e070      	b.n	80036b4 <HAL_RCC_OscConfig+0x138>
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	685b      	ldr	r3, [r3, #4]
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	d000      	beq.n	80035dc <HAL_RCC_OscConfig+0x60>
 80035da:	e06b      	b.n	80036b4 <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 80035dc:	2301      	movs	r3, #1
 80035de:	e2dc      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	685b      	ldr	r3, [r3, #4]
 80035e4:	2b01      	cmp	r3, #1
 80035e6:	d107      	bne.n	80035f8 <HAL_RCC_OscConfig+0x7c>
 80035e8:	4bb1      	ldr	r3, [pc, #708]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80035ea:	681a      	ldr	r2, [r3, #0]
 80035ec:	4bb0      	ldr	r3, [pc, #704]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80035ee:	2180      	movs	r1, #128	; 0x80
 80035f0:	0249      	lsls	r1, r1, #9
 80035f2:	430a      	orrs	r2, r1
 80035f4:	601a      	str	r2, [r3, #0]
 80035f6:	e02f      	b.n	8003658 <HAL_RCC_OscConfig+0xdc>
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	685b      	ldr	r3, [r3, #4]
 80035fc:	2b00      	cmp	r3, #0
 80035fe:	d10c      	bne.n	800361a <HAL_RCC_OscConfig+0x9e>
 8003600:	4bab      	ldr	r3, [pc, #684]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003602:	681a      	ldr	r2, [r3, #0]
 8003604:	4baa      	ldr	r3, [pc, #680]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003606:	49ab      	ldr	r1, [pc, #684]	; (80038b4 <HAL_RCC_OscConfig+0x338>)
 8003608:	400a      	ands	r2, r1
 800360a:	601a      	str	r2, [r3, #0]
 800360c:	4ba8      	ldr	r3, [pc, #672]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 800360e:	681a      	ldr	r2, [r3, #0]
 8003610:	4ba7      	ldr	r3, [pc, #668]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003612:	49a9      	ldr	r1, [pc, #676]	; (80038b8 <HAL_RCC_OscConfig+0x33c>)
 8003614:	400a      	ands	r2, r1
 8003616:	601a      	str	r2, [r3, #0]
 8003618:	e01e      	b.n	8003658 <HAL_RCC_OscConfig+0xdc>
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	685b      	ldr	r3, [r3, #4]
 800361e:	2b05      	cmp	r3, #5
 8003620:	d10e      	bne.n	8003640 <HAL_RCC_OscConfig+0xc4>
 8003622:	4ba3      	ldr	r3, [pc, #652]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003624:	681a      	ldr	r2, [r3, #0]
 8003626:	4ba2      	ldr	r3, [pc, #648]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003628:	2180      	movs	r1, #128	; 0x80
 800362a:	02c9      	lsls	r1, r1, #11
 800362c:	430a      	orrs	r2, r1
 800362e:	601a      	str	r2, [r3, #0]
 8003630:	4b9f      	ldr	r3, [pc, #636]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003632:	681a      	ldr	r2, [r3, #0]
 8003634:	4b9e      	ldr	r3, [pc, #632]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003636:	2180      	movs	r1, #128	; 0x80
 8003638:	0249      	lsls	r1, r1, #9
 800363a:	430a      	orrs	r2, r1
 800363c:	601a      	str	r2, [r3, #0]
 800363e:	e00b      	b.n	8003658 <HAL_RCC_OscConfig+0xdc>
 8003640:	4b9b      	ldr	r3, [pc, #620]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003642:	681a      	ldr	r2, [r3, #0]
 8003644:	4b9a      	ldr	r3, [pc, #616]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003646:	499b      	ldr	r1, [pc, #620]	; (80038b4 <HAL_RCC_OscConfig+0x338>)
 8003648:	400a      	ands	r2, r1
 800364a:	601a      	str	r2, [r3, #0]
 800364c:	4b98      	ldr	r3, [pc, #608]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 800364e:	681a      	ldr	r2, [r3, #0]
 8003650:	4b97      	ldr	r3, [pc, #604]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003652:	4999      	ldr	r1, [pc, #612]	; (80038b8 <HAL_RCC_OscConfig+0x33c>)
 8003654:	400a      	ands	r2, r1
 8003656:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	685b      	ldr	r3, [r3, #4]
 800365c:	2b00      	cmp	r3, #0
 800365e:	d014      	beq.n	800368a <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003660:	f7ff fece 	bl	8003400 <HAL_GetTick>
 8003664:	0003      	movs	r3, r0
 8003666:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003668:	e008      	b.n	800367c <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800366a:	f7ff fec9 	bl	8003400 <HAL_GetTick>
 800366e:	0002      	movs	r2, r0
 8003670:	69bb      	ldr	r3, [r7, #24]
 8003672:	1ad3      	subs	r3, r2, r3
 8003674:	2b64      	cmp	r3, #100	; 0x64
 8003676:	d901      	bls.n	800367c <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 8003678:	2303      	movs	r3, #3
 800367a:	e28e      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800367c:	4b8c      	ldr	r3, [pc, #560]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 800367e:	681a      	ldr	r2, [r3, #0]
 8003680:	2380      	movs	r3, #128	; 0x80
 8003682:	029b      	lsls	r3, r3, #10
 8003684:	4013      	ands	r3, r2
 8003686:	d0f0      	beq.n	800366a <HAL_RCC_OscConfig+0xee>
 8003688:	e015      	b.n	80036b6 <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800368a:	f7ff feb9 	bl	8003400 <HAL_GetTick>
 800368e:	0003      	movs	r3, r0
 8003690:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003692:	e008      	b.n	80036a6 <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003694:	f7ff feb4 	bl	8003400 <HAL_GetTick>
 8003698:	0002      	movs	r2, r0
 800369a:	69bb      	ldr	r3, [r7, #24]
 800369c:	1ad3      	subs	r3, r2, r3
 800369e:	2b64      	cmp	r3, #100	; 0x64
 80036a0:	d901      	bls.n	80036a6 <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 80036a2:	2303      	movs	r3, #3
 80036a4:	e279      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80036a6:	4b82      	ldr	r3, [pc, #520]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80036a8:	681a      	ldr	r2, [r3, #0]
 80036aa:	2380      	movs	r3, #128	; 0x80
 80036ac:	029b      	lsls	r3, r3, #10
 80036ae:	4013      	ands	r3, r2
 80036b0:	d1f0      	bne.n	8003694 <HAL_RCC_OscConfig+0x118>
 80036b2:	e000      	b.n	80036b6 <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80036b4:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80036b6:	687b      	ldr	r3, [r7, #4]
 80036b8:	681b      	ldr	r3, [r3, #0]
 80036ba:	2202      	movs	r2, #2
 80036bc:	4013      	ands	r3, r2
 80036be:	d100      	bne.n	80036c2 <HAL_RCC_OscConfig+0x146>
 80036c0:	e06c      	b.n	800379c <HAL_RCC_OscConfig+0x220>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 80036c2:	4b7b      	ldr	r3, [pc, #492]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80036c4:	685b      	ldr	r3, [r3, #4]
 80036c6:	220c      	movs	r2, #12
 80036c8:	4013      	ands	r3, r2
 80036ca:	d00e      	beq.n	80036ea <HAL_RCC_OscConfig+0x16e>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 80036cc:	4b78      	ldr	r3, [pc, #480]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80036ce:	685b      	ldr	r3, [r3, #4]
 80036d0:	220c      	movs	r2, #12
 80036d2:	4013      	ands	r3, r2
 80036d4:	2b08      	cmp	r3, #8
 80036d6:	d11f      	bne.n	8003718 <HAL_RCC_OscConfig+0x19c>
 80036d8:	4b75      	ldr	r3, [pc, #468]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80036da:	685a      	ldr	r2, [r3, #4]
 80036dc:	23c0      	movs	r3, #192	; 0xc0
 80036de:	025b      	lsls	r3, r3, #9
 80036e0:	401a      	ands	r2, r3
 80036e2:	2380      	movs	r3, #128	; 0x80
 80036e4:	021b      	lsls	r3, r3, #8
 80036e6:	429a      	cmp	r2, r3
 80036e8:	d116      	bne.n	8003718 <HAL_RCC_OscConfig+0x19c>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80036ea:	4b71      	ldr	r3, [pc, #452]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	2202      	movs	r2, #2
 80036f0:	4013      	ands	r3, r2
 80036f2:	d005      	beq.n	8003700 <HAL_RCC_OscConfig+0x184>
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	68db      	ldr	r3, [r3, #12]
 80036f8:	2b01      	cmp	r3, #1
 80036fa:	d001      	beq.n	8003700 <HAL_RCC_OscConfig+0x184>
      {
        return HAL_ERROR;
 80036fc:	2301      	movs	r3, #1
 80036fe:	e24c      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003700:	4b6b      	ldr	r3, [pc, #428]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	22f8      	movs	r2, #248	; 0xf8
 8003706:	4393      	bics	r3, r2
 8003708:	0019      	movs	r1, r3
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	691b      	ldr	r3, [r3, #16]
 800370e:	00da      	lsls	r2, r3, #3
 8003710:	4b67      	ldr	r3, [pc, #412]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003712:	430a      	orrs	r2, r1
 8003714:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8003716:	e041      	b.n	800379c <HAL_RCC_OscConfig+0x220>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	68db      	ldr	r3, [r3, #12]
 800371c:	2b00      	cmp	r3, #0
 800371e:	d024      	beq.n	800376a <HAL_RCC_OscConfig+0x1ee>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8003720:	4b63      	ldr	r3, [pc, #396]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003722:	681a      	ldr	r2, [r3, #0]
 8003724:	4b62      	ldr	r3, [pc, #392]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003726:	2101      	movs	r1, #1
 8003728:	430a      	orrs	r2, r1
 800372a:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800372c:	f7ff fe68 	bl	8003400 <HAL_GetTick>
 8003730:	0003      	movs	r3, r0
 8003732:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003734:	e008      	b.n	8003748 <HAL_RCC_OscConfig+0x1cc>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003736:	f7ff fe63 	bl	8003400 <HAL_GetTick>
 800373a:	0002      	movs	r2, r0
 800373c:	69bb      	ldr	r3, [r7, #24]
 800373e:	1ad3      	subs	r3, r2, r3
 8003740:	2b02      	cmp	r3, #2
 8003742:	d901      	bls.n	8003748 <HAL_RCC_OscConfig+0x1cc>
          {
            return HAL_TIMEOUT;
 8003744:	2303      	movs	r3, #3
 8003746:	e228      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003748:	4b59      	ldr	r3, [pc, #356]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 800374a:	681b      	ldr	r3, [r3, #0]
 800374c:	2202      	movs	r2, #2
 800374e:	4013      	ands	r3, r2
 8003750:	d0f1      	beq.n	8003736 <HAL_RCC_OscConfig+0x1ba>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003752:	4b57      	ldr	r3, [pc, #348]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003754:	681b      	ldr	r3, [r3, #0]
 8003756:	22f8      	movs	r2, #248	; 0xf8
 8003758:	4393      	bics	r3, r2
 800375a:	0019      	movs	r1, r3
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	691b      	ldr	r3, [r3, #16]
 8003760:	00da      	lsls	r2, r3, #3
 8003762:	4b53      	ldr	r3, [pc, #332]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003764:	430a      	orrs	r2, r1
 8003766:	601a      	str	r2, [r3, #0]
 8003768:	e018      	b.n	800379c <HAL_RCC_OscConfig+0x220>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800376a:	4b51      	ldr	r3, [pc, #324]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 800376c:	681a      	ldr	r2, [r3, #0]
 800376e:	4b50      	ldr	r3, [pc, #320]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003770:	2101      	movs	r1, #1
 8003772:	438a      	bics	r2, r1
 8003774:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003776:	f7ff fe43 	bl	8003400 <HAL_GetTick>
 800377a:	0003      	movs	r3, r0
 800377c:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800377e:	e008      	b.n	8003792 <HAL_RCC_OscConfig+0x216>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003780:	f7ff fe3e 	bl	8003400 <HAL_GetTick>
 8003784:	0002      	movs	r2, r0
 8003786:	69bb      	ldr	r3, [r7, #24]
 8003788:	1ad3      	subs	r3, r2, r3
 800378a:	2b02      	cmp	r3, #2
 800378c:	d901      	bls.n	8003792 <HAL_RCC_OscConfig+0x216>
          {
            return HAL_TIMEOUT;
 800378e:	2303      	movs	r3, #3
 8003790:	e203      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003792:	4b47      	ldr	r3, [pc, #284]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	2202      	movs	r2, #2
 8003798:	4013      	ands	r3, r2
 800379a:	d1f1      	bne.n	8003780 <HAL_RCC_OscConfig+0x204>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	2208      	movs	r2, #8
 80037a2:	4013      	ands	r3, r2
 80037a4:	d036      	beq.n	8003814 <HAL_RCC_OscConfig+0x298>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	69db      	ldr	r3, [r3, #28]
 80037aa:	2b00      	cmp	r3, #0
 80037ac:	d019      	beq.n	80037e2 <HAL_RCC_OscConfig+0x266>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80037ae:	4b40      	ldr	r3, [pc, #256]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80037b0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80037b2:	4b3f      	ldr	r3, [pc, #252]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80037b4:	2101      	movs	r1, #1
 80037b6:	430a      	orrs	r2, r1
 80037b8:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80037ba:	f7ff fe21 	bl	8003400 <HAL_GetTick>
 80037be:	0003      	movs	r3, r0
 80037c0:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80037c2:	e008      	b.n	80037d6 <HAL_RCC_OscConfig+0x25a>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80037c4:	f7ff fe1c 	bl	8003400 <HAL_GetTick>
 80037c8:	0002      	movs	r2, r0
 80037ca:	69bb      	ldr	r3, [r7, #24]
 80037cc:	1ad3      	subs	r3, r2, r3
 80037ce:	2b02      	cmp	r3, #2
 80037d0:	d901      	bls.n	80037d6 <HAL_RCC_OscConfig+0x25a>
        {
          return HAL_TIMEOUT;
 80037d2:	2303      	movs	r3, #3
 80037d4:	e1e1      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80037d6:	4b36      	ldr	r3, [pc, #216]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80037d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037da:	2202      	movs	r2, #2
 80037dc:	4013      	ands	r3, r2
 80037de:	d0f1      	beq.n	80037c4 <HAL_RCC_OscConfig+0x248>
 80037e0:	e018      	b.n	8003814 <HAL_RCC_OscConfig+0x298>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80037e2:	4b33      	ldr	r3, [pc, #204]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80037e4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80037e6:	4b32      	ldr	r3, [pc, #200]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80037e8:	2101      	movs	r1, #1
 80037ea:	438a      	bics	r2, r1
 80037ec:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80037ee:	f7ff fe07 	bl	8003400 <HAL_GetTick>
 80037f2:	0003      	movs	r3, r0
 80037f4:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80037f6:	e008      	b.n	800380a <HAL_RCC_OscConfig+0x28e>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80037f8:	f7ff fe02 	bl	8003400 <HAL_GetTick>
 80037fc:	0002      	movs	r2, r0
 80037fe:	69bb      	ldr	r3, [r7, #24]
 8003800:	1ad3      	subs	r3, r2, r3
 8003802:	2b02      	cmp	r3, #2
 8003804:	d901      	bls.n	800380a <HAL_RCC_OscConfig+0x28e>
        {
          return HAL_TIMEOUT;
 8003806:	2303      	movs	r3, #3
 8003808:	e1c7      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800380a:	4b29      	ldr	r3, [pc, #164]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 800380c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800380e:	2202      	movs	r2, #2
 8003810:	4013      	ands	r3, r2
 8003812:	d1f1      	bne.n	80037f8 <HAL_RCC_OscConfig+0x27c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	2204      	movs	r2, #4
 800381a:	4013      	ands	r3, r2
 800381c:	d100      	bne.n	8003820 <HAL_RCC_OscConfig+0x2a4>
 800381e:	e0b5      	b.n	800398c <HAL_RCC_OscConfig+0x410>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003820:	201f      	movs	r0, #31
 8003822:	183b      	adds	r3, r7, r0
 8003824:	2200      	movs	r2, #0
 8003826:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003828:	4b21      	ldr	r3, [pc, #132]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 800382a:	69da      	ldr	r2, [r3, #28]
 800382c:	2380      	movs	r3, #128	; 0x80
 800382e:	055b      	lsls	r3, r3, #21
 8003830:	4013      	ands	r3, r2
 8003832:	d110      	bne.n	8003856 <HAL_RCC_OscConfig+0x2da>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8003834:	4b1e      	ldr	r3, [pc, #120]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003836:	69da      	ldr	r2, [r3, #28]
 8003838:	4b1d      	ldr	r3, [pc, #116]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 800383a:	2180      	movs	r1, #128	; 0x80
 800383c:	0549      	lsls	r1, r1, #21
 800383e:	430a      	orrs	r2, r1
 8003840:	61da      	str	r2, [r3, #28]
 8003842:	4b1b      	ldr	r3, [pc, #108]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 8003844:	69da      	ldr	r2, [r3, #28]
 8003846:	2380      	movs	r3, #128	; 0x80
 8003848:	055b      	lsls	r3, r3, #21
 800384a:	4013      	ands	r3, r2
 800384c:	60fb      	str	r3, [r7, #12]
 800384e:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 8003850:	183b      	adds	r3, r7, r0
 8003852:	2201      	movs	r2, #1
 8003854:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003856:	4b19      	ldr	r3, [pc, #100]	; (80038bc <HAL_RCC_OscConfig+0x340>)
 8003858:	681a      	ldr	r2, [r3, #0]
 800385a:	2380      	movs	r3, #128	; 0x80
 800385c:	005b      	lsls	r3, r3, #1
 800385e:	4013      	ands	r3, r2
 8003860:	d11a      	bne.n	8003898 <HAL_RCC_OscConfig+0x31c>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003862:	4b16      	ldr	r3, [pc, #88]	; (80038bc <HAL_RCC_OscConfig+0x340>)
 8003864:	681a      	ldr	r2, [r3, #0]
 8003866:	4b15      	ldr	r3, [pc, #84]	; (80038bc <HAL_RCC_OscConfig+0x340>)
 8003868:	2180      	movs	r1, #128	; 0x80
 800386a:	0049      	lsls	r1, r1, #1
 800386c:	430a      	orrs	r2, r1
 800386e:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8003870:	f7ff fdc6 	bl	8003400 <HAL_GetTick>
 8003874:	0003      	movs	r3, r0
 8003876:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003878:	e008      	b.n	800388c <HAL_RCC_OscConfig+0x310>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800387a:	f7ff fdc1 	bl	8003400 <HAL_GetTick>
 800387e:	0002      	movs	r2, r0
 8003880:	69bb      	ldr	r3, [r7, #24]
 8003882:	1ad3      	subs	r3, r2, r3
 8003884:	2b64      	cmp	r3, #100	; 0x64
 8003886:	d901      	bls.n	800388c <HAL_RCC_OscConfig+0x310>
        {
          return HAL_TIMEOUT;
 8003888:	2303      	movs	r3, #3
 800388a:	e186      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800388c:	4b0b      	ldr	r3, [pc, #44]	; (80038bc <HAL_RCC_OscConfig+0x340>)
 800388e:	681a      	ldr	r2, [r3, #0]
 8003890:	2380      	movs	r3, #128	; 0x80
 8003892:	005b      	lsls	r3, r3, #1
 8003894:	4013      	ands	r3, r2
 8003896:	d0f0      	beq.n	800387a <HAL_RCC_OscConfig+0x2fe>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	689b      	ldr	r3, [r3, #8]
 800389c:	2b01      	cmp	r3, #1
 800389e:	d10f      	bne.n	80038c0 <HAL_RCC_OscConfig+0x344>
 80038a0:	4b03      	ldr	r3, [pc, #12]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80038a2:	6a1a      	ldr	r2, [r3, #32]
 80038a4:	4b02      	ldr	r3, [pc, #8]	; (80038b0 <HAL_RCC_OscConfig+0x334>)
 80038a6:	2101      	movs	r1, #1
 80038a8:	430a      	orrs	r2, r1
 80038aa:	621a      	str	r2, [r3, #32]
 80038ac:	e036      	b.n	800391c <HAL_RCC_OscConfig+0x3a0>
 80038ae:	46c0      	nop			; (mov r8, r8)
 80038b0:	40021000 	.word	0x40021000
 80038b4:	fffeffff 	.word	0xfffeffff
 80038b8:	fffbffff 	.word	0xfffbffff
 80038bc:	40007000 	.word	0x40007000
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	689b      	ldr	r3, [r3, #8]
 80038c4:	2b00      	cmp	r3, #0
 80038c6:	d10c      	bne.n	80038e2 <HAL_RCC_OscConfig+0x366>
 80038c8:	4bb6      	ldr	r3, [pc, #728]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80038ca:	6a1a      	ldr	r2, [r3, #32]
 80038cc:	4bb5      	ldr	r3, [pc, #724]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80038ce:	2101      	movs	r1, #1
 80038d0:	438a      	bics	r2, r1
 80038d2:	621a      	str	r2, [r3, #32]
 80038d4:	4bb3      	ldr	r3, [pc, #716]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80038d6:	6a1a      	ldr	r2, [r3, #32]
 80038d8:	4bb2      	ldr	r3, [pc, #712]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80038da:	2104      	movs	r1, #4
 80038dc:	438a      	bics	r2, r1
 80038de:	621a      	str	r2, [r3, #32]
 80038e0:	e01c      	b.n	800391c <HAL_RCC_OscConfig+0x3a0>
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	689b      	ldr	r3, [r3, #8]
 80038e6:	2b05      	cmp	r3, #5
 80038e8:	d10c      	bne.n	8003904 <HAL_RCC_OscConfig+0x388>
 80038ea:	4bae      	ldr	r3, [pc, #696]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80038ec:	6a1a      	ldr	r2, [r3, #32]
 80038ee:	4bad      	ldr	r3, [pc, #692]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80038f0:	2104      	movs	r1, #4
 80038f2:	430a      	orrs	r2, r1
 80038f4:	621a      	str	r2, [r3, #32]
 80038f6:	4bab      	ldr	r3, [pc, #684]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80038f8:	6a1a      	ldr	r2, [r3, #32]
 80038fa:	4baa      	ldr	r3, [pc, #680]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80038fc:	2101      	movs	r1, #1
 80038fe:	430a      	orrs	r2, r1
 8003900:	621a      	str	r2, [r3, #32]
 8003902:	e00b      	b.n	800391c <HAL_RCC_OscConfig+0x3a0>
 8003904:	4ba7      	ldr	r3, [pc, #668]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003906:	6a1a      	ldr	r2, [r3, #32]
 8003908:	4ba6      	ldr	r3, [pc, #664]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 800390a:	2101      	movs	r1, #1
 800390c:	438a      	bics	r2, r1
 800390e:	621a      	str	r2, [r3, #32]
 8003910:	4ba4      	ldr	r3, [pc, #656]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003912:	6a1a      	ldr	r2, [r3, #32]
 8003914:	4ba3      	ldr	r3, [pc, #652]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003916:	2104      	movs	r1, #4
 8003918:	438a      	bics	r2, r1
 800391a:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	689b      	ldr	r3, [r3, #8]
 8003920:	2b00      	cmp	r3, #0
 8003922:	d014      	beq.n	800394e <HAL_RCC_OscConfig+0x3d2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003924:	f7ff fd6c 	bl	8003400 <HAL_GetTick>
 8003928:	0003      	movs	r3, r0
 800392a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800392c:	e009      	b.n	8003942 <HAL_RCC_OscConfig+0x3c6>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800392e:	f7ff fd67 	bl	8003400 <HAL_GetTick>
 8003932:	0002      	movs	r2, r0
 8003934:	69bb      	ldr	r3, [r7, #24]
 8003936:	1ad3      	subs	r3, r2, r3
 8003938:	4a9b      	ldr	r2, [pc, #620]	; (8003ba8 <HAL_RCC_OscConfig+0x62c>)
 800393a:	4293      	cmp	r3, r2
 800393c:	d901      	bls.n	8003942 <HAL_RCC_OscConfig+0x3c6>
        {
          return HAL_TIMEOUT;
 800393e:	2303      	movs	r3, #3
 8003940:	e12b      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003942:	4b98      	ldr	r3, [pc, #608]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003944:	6a1b      	ldr	r3, [r3, #32]
 8003946:	2202      	movs	r2, #2
 8003948:	4013      	ands	r3, r2
 800394a:	d0f0      	beq.n	800392e <HAL_RCC_OscConfig+0x3b2>
 800394c:	e013      	b.n	8003976 <HAL_RCC_OscConfig+0x3fa>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800394e:	f7ff fd57 	bl	8003400 <HAL_GetTick>
 8003952:	0003      	movs	r3, r0
 8003954:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003956:	e009      	b.n	800396c <HAL_RCC_OscConfig+0x3f0>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003958:	f7ff fd52 	bl	8003400 <HAL_GetTick>
 800395c:	0002      	movs	r2, r0
 800395e:	69bb      	ldr	r3, [r7, #24]
 8003960:	1ad3      	subs	r3, r2, r3
 8003962:	4a91      	ldr	r2, [pc, #580]	; (8003ba8 <HAL_RCC_OscConfig+0x62c>)
 8003964:	4293      	cmp	r3, r2
 8003966:	d901      	bls.n	800396c <HAL_RCC_OscConfig+0x3f0>
        {
          return HAL_TIMEOUT;
 8003968:	2303      	movs	r3, #3
 800396a:	e116      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800396c:	4b8d      	ldr	r3, [pc, #564]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 800396e:	6a1b      	ldr	r3, [r3, #32]
 8003970:	2202      	movs	r2, #2
 8003972:	4013      	ands	r3, r2
 8003974:	d1f0      	bne.n	8003958 <HAL_RCC_OscConfig+0x3dc>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003976:	231f      	movs	r3, #31
 8003978:	18fb      	adds	r3, r7, r3
 800397a:	781b      	ldrb	r3, [r3, #0]
 800397c:	2b01      	cmp	r3, #1
 800397e:	d105      	bne.n	800398c <HAL_RCC_OscConfig+0x410>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003980:	4b88      	ldr	r3, [pc, #544]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003982:	69da      	ldr	r2, [r3, #28]
 8003984:	4b87      	ldr	r3, [pc, #540]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003986:	4989      	ldr	r1, [pc, #548]	; (8003bac <HAL_RCC_OscConfig+0x630>)
 8003988:	400a      	ands	r2, r1
 800398a:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	2210      	movs	r2, #16
 8003992:	4013      	ands	r3, r2
 8003994:	d063      	beq.n	8003a5e <HAL_RCC_OscConfig+0x4e2>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	695b      	ldr	r3, [r3, #20]
 800399a:	2b01      	cmp	r3, #1
 800399c:	d12a      	bne.n	80039f4 <HAL_RCC_OscConfig+0x478>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 800399e:	4b81      	ldr	r3, [pc, #516]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80039a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80039a2:	4b80      	ldr	r3, [pc, #512]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80039a4:	2104      	movs	r1, #4
 80039a6:	430a      	orrs	r2, r1
 80039a8:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 80039aa:	4b7e      	ldr	r3, [pc, #504]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80039ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80039ae:	4b7d      	ldr	r3, [pc, #500]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80039b0:	2101      	movs	r1, #1
 80039b2:	430a      	orrs	r2, r1
 80039b4:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80039b6:	f7ff fd23 	bl	8003400 <HAL_GetTick>
 80039ba:	0003      	movs	r3, r0
 80039bc:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80039be:	e008      	b.n	80039d2 <HAL_RCC_OscConfig+0x456>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 80039c0:	f7ff fd1e 	bl	8003400 <HAL_GetTick>
 80039c4:	0002      	movs	r2, r0
 80039c6:	69bb      	ldr	r3, [r7, #24]
 80039c8:	1ad3      	subs	r3, r2, r3
 80039ca:	2b02      	cmp	r3, #2
 80039cc:	d901      	bls.n	80039d2 <HAL_RCC_OscConfig+0x456>
        {
          return HAL_TIMEOUT;
 80039ce:	2303      	movs	r3, #3
 80039d0:	e0e3      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80039d2:	4b74      	ldr	r3, [pc, #464]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80039d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80039d6:	2202      	movs	r2, #2
 80039d8:	4013      	ands	r3, r2
 80039da:	d0f1      	beq.n	80039c0 <HAL_RCC_OscConfig+0x444>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 80039dc:	4b71      	ldr	r3, [pc, #452]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80039de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80039e0:	22f8      	movs	r2, #248	; 0xf8
 80039e2:	4393      	bics	r3, r2
 80039e4:	0019      	movs	r1, r3
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	699b      	ldr	r3, [r3, #24]
 80039ea:	00da      	lsls	r2, r3, #3
 80039ec:	4b6d      	ldr	r3, [pc, #436]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80039ee:	430a      	orrs	r2, r1
 80039f0:	635a      	str	r2, [r3, #52]	; 0x34
 80039f2:	e034      	b.n	8003a5e <HAL_RCC_OscConfig+0x4e2>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	695b      	ldr	r3, [r3, #20]
 80039f8:	3305      	adds	r3, #5
 80039fa:	d111      	bne.n	8003a20 <HAL_RCC_OscConfig+0x4a4>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 80039fc:	4b69      	ldr	r3, [pc, #420]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 80039fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a00:	4b68      	ldr	r3, [pc, #416]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a02:	2104      	movs	r1, #4
 8003a04:	438a      	bics	r2, r1
 8003a06:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003a08:	4b66      	ldr	r3, [pc, #408]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a0a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003a0c:	22f8      	movs	r2, #248	; 0xf8
 8003a0e:	4393      	bics	r3, r2
 8003a10:	0019      	movs	r1, r3
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	699b      	ldr	r3, [r3, #24]
 8003a16:	00da      	lsls	r2, r3, #3
 8003a18:	4b62      	ldr	r3, [pc, #392]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a1a:	430a      	orrs	r2, r1
 8003a1c:	635a      	str	r2, [r3, #52]	; 0x34
 8003a1e:	e01e      	b.n	8003a5e <HAL_RCC_OscConfig+0x4e2>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8003a20:	4b60      	ldr	r3, [pc, #384]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a22:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a24:	4b5f      	ldr	r3, [pc, #380]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a26:	2104      	movs	r1, #4
 8003a28:	430a      	orrs	r2, r1
 8003a2a:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8003a2c:	4b5d      	ldr	r3, [pc, #372]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a2e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a30:	4b5c      	ldr	r3, [pc, #368]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a32:	2101      	movs	r1, #1
 8003a34:	438a      	bics	r2, r1
 8003a36:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003a38:	f7ff fce2 	bl	8003400 <HAL_GetTick>
 8003a3c:	0003      	movs	r3, r0
 8003a3e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003a40:	e008      	b.n	8003a54 <HAL_RCC_OscConfig+0x4d8>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003a42:	f7ff fcdd 	bl	8003400 <HAL_GetTick>
 8003a46:	0002      	movs	r2, r0
 8003a48:	69bb      	ldr	r3, [r7, #24]
 8003a4a:	1ad3      	subs	r3, r2, r3
 8003a4c:	2b02      	cmp	r3, #2
 8003a4e:	d901      	bls.n	8003a54 <HAL_RCC_OscConfig+0x4d8>
        {
          return HAL_TIMEOUT;
 8003a50:	2303      	movs	r3, #3
 8003a52:	e0a2      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8003a54:	4b53      	ldr	r3, [pc, #332]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003a58:	2202      	movs	r2, #2
 8003a5a:	4013      	ands	r3, r2
 8003a5c:	d1f1      	bne.n	8003a42 <HAL_RCC_OscConfig+0x4c6>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	6a1b      	ldr	r3, [r3, #32]
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d100      	bne.n	8003a68 <HAL_RCC_OscConfig+0x4ec>
 8003a66:	e097      	b.n	8003b98 <HAL_RCC_OscConfig+0x61c>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003a68:	4b4e      	ldr	r3, [pc, #312]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a6a:	685b      	ldr	r3, [r3, #4]
 8003a6c:	220c      	movs	r2, #12
 8003a6e:	4013      	ands	r3, r2
 8003a70:	2b08      	cmp	r3, #8
 8003a72:	d100      	bne.n	8003a76 <HAL_RCC_OscConfig+0x4fa>
 8003a74:	e06b      	b.n	8003b4e <HAL_RCC_OscConfig+0x5d2>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	6a1b      	ldr	r3, [r3, #32]
 8003a7a:	2b02      	cmp	r3, #2
 8003a7c:	d14c      	bne.n	8003b18 <HAL_RCC_OscConfig+0x59c>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003a7e:	4b49      	ldr	r3, [pc, #292]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a80:	681a      	ldr	r2, [r3, #0]
 8003a82:	4b48      	ldr	r3, [pc, #288]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003a84:	494a      	ldr	r1, [pc, #296]	; (8003bb0 <HAL_RCC_OscConfig+0x634>)
 8003a86:	400a      	ands	r2, r1
 8003a88:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003a8a:	f7ff fcb9 	bl	8003400 <HAL_GetTick>
 8003a8e:	0003      	movs	r3, r0
 8003a90:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003a92:	e008      	b.n	8003aa6 <HAL_RCC_OscConfig+0x52a>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003a94:	f7ff fcb4 	bl	8003400 <HAL_GetTick>
 8003a98:	0002      	movs	r2, r0
 8003a9a:	69bb      	ldr	r3, [r7, #24]
 8003a9c:	1ad3      	subs	r3, r2, r3
 8003a9e:	2b02      	cmp	r3, #2
 8003aa0:	d901      	bls.n	8003aa6 <HAL_RCC_OscConfig+0x52a>
          {
            return HAL_TIMEOUT;
 8003aa2:	2303      	movs	r3, #3
 8003aa4:	e079      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003aa6:	4b3f      	ldr	r3, [pc, #252]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003aa8:	681a      	ldr	r2, [r3, #0]
 8003aaa:	2380      	movs	r3, #128	; 0x80
 8003aac:	049b      	lsls	r3, r3, #18
 8003aae:	4013      	ands	r3, r2
 8003ab0:	d1f0      	bne.n	8003a94 <HAL_RCC_OscConfig+0x518>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003ab2:	4b3c      	ldr	r3, [pc, #240]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003ab4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003ab6:	220f      	movs	r2, #15
 8003ab8:	4393      	bics	r3, r2
 8003aba:	0019      	movs	r1, r3
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003ac0:	4b38      	ldr	r3, [pc, #224]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003ac2:	430a      	orrs	r2, r1
 8003ac4:	62da      	str	r2, [r3, #44]	; 0x2c
 8003ac6:	4b37      	ldr	r3, [pc, #220]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003ac8:	685b      	ldr	r3, [r3, #4]
 8003aca:	4a3a      	ldr	r2, [pc, #232]	; (8003bb4 <HAL_RCC_OscConfig+0x638>)
 8003acc:	4013      	ands	r3, r2
 8003ace:	0019      	movs	r1, r3
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ad8:	431a      	orrs	r2, r3
 8003ada:	4b32      	ldr	r3, [pc, #200]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003adc:	430a      	orrs	r2, r1
 8003ade:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003ae0:	4b30      	ldr	r3, [pc, #192]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003ae2:	681a      	ldr	r2, [r3, #0]
 8003ae4:	4b2f      	ldr	r3, [pc, #188]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003ae6:	2180      	movs	r1, #128	; 0x80
 8003ae8:	0449      	lsls	r1, r1, #17
 8003aea:	430a      	orrs	r2, r1
 8003aec:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003aee:	f7ff fc87 	bl	8003400 <HAL_GetTick>
 8003af2:	0003      	movs	r3, r0
 8003af4:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003af6:	e008      	b.n	8003b0a <HAL_RCC_OscConfig+0x58e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003af8:	f7ff fc82 	bl	8003400 <HAL_GetTick>
 8003afc:	0002      	movs	r2, r0
 8003afe:	69bb      	ldr	r3, [r7, #24]
 8003b00:	1ad3      	subs	r3, r2, r3
 8003b02:	2b02      	cmp	r3, #2
 8003b04:	d901      	bls.n	8003b0a <HAL_RCC_OscConfig+0x58e>
          {
            return HAL_TIMEOUT;
 8003b06:	2303      	movs	r3, #3
 8003b08:	e047      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8003b0a:	4b26      	ldr	r3, [pc, #152]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003b0c:	681a      	ldr	r2, [r3, #0]
 8003b0e:	2380      	movs	r3, #128	; 0x80
 8003b10:	049b      	lsls	r3, r3, #18
 8003b12:	4013      	ands	r3, r2
 8003b14:	d0f0      	beq.n	8003af8 <HAL_RCC_OscConfig+0x57c>
 8003b16:	e03f      	b.n	8003b98 <HAL_RCC_OscConfig+0x61c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003b18:	4b22      	ldr	r3, [pc, #136]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003b1a:	681a      	ldr	r2, [r3, #0]
 8003b1c:	4b21      	ldr	r3, [pc, #132]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003b1e:	4924      	ldr	r1, [pc, #144]	; (8003bb0 <HAL_RCC_OscConfig+0x634>)
 8003b20:	400a      	ands	r2, r1
 8003b22:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003b24:	f7ff fc6c 	bl	8003400 <HAL_GetTick>
 8003b28:	0003      	movs	r3, r0
 8003b2a:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003b2c:	e008      	b.n	8003b40 <HAL_RCC_OscConfig+0x5c4>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003b2e:	f7ff fc67 	bl	8003400 <HAL_GetTick>
 8003b32:	0002      	movs	r2, r0
 8003b34:	69bb      	ldr	r3, [r7, #24]
 8003b36:	1ad3      	subs	r3, r2, r3
 8003b38:	2b02      	cmp	r3, #2
 8003b3a:	d901      	bls.n	8003b40 <HAL_RCC_OscConfig+0x5c4>
          {
            return HAL_TIMEOUT;
 8003b3c:	2303      	movs	r3, #3
 8003b3e:	e02c      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8003b40:	4b18      	ldr	r3, [pc, #96]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003b42:	681a      	ldr	r2, [r3, #0]
 8003b44:	2380      	movs	r3, #128	; 0x80
 8003b46:	049b      	lsls	r3, r3, #18
 8003b48:	4013      	ands	r3, r2
 8003b4a:	d1f0      	bne.n	8003b2e <HAL_RCC_OscConfig+0x5b2>
 8003b4c:	e024      	b.n	8003b98 <HAL_RCC_OscConfig+0x61c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	6a1b      	ldr	r3, [r3, #32]
 8003b52:	2b01      	cmp	r3, #1
 8003b54:	d101      	bne.n	8003b5a <HAL_RCC_OscConfig+0x5de>
      {
        return HAL_ERROR;
 8003b56:	2301      	movs	r3, #1
 8003b58:	e01f      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8003b5a:	4b12      	ldr	r3, [pc, #72]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003b5c:	685b      	ldr	r3, [r3, #4]
 8003b5e:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 8003b60:	4b10      	ldr	r3, [pc, #64]	; (8003ba4 <HAL_RCC_OscConfig+0x628>)
 8003b62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b64:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003b66:	697a      	ldr	r2, [r7, #20]
 8003b68:	23c0      	movs	r3, #192	; 0xc0
 8003b6a:	025b      	lsls	r3, r3, #9
 8003b6c:	401a      	ands	r2, r3
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b72:	429a      	cmp	r2, r3
 8003b74:	d10e      	bne.n	8003b94 <HAL_RCC_OscConfig+0x618>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003b76:	693b      	ldr	r3, [r7, #16]
 8003b78:	220f      	movs	r2, #15
 8003b7a:	401a      	ands	r2, r3
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003b80:	429a      	cmp	r2, r3
 8003b82:	d107      	bne.n	8003b94 <HAL_RCC_OscConfig+0x618>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8003b84:	697a      	ldr	r2, [r7, #20]
 8003b86:	23f0      	movs	r3, #240	; 0xf0
 8003b88:	039b      	lsls	r3, r3, #14
 8003b8a:	401a      	ands	r2, r3
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003b90:	429a      	cmp	r2, r3
 8003b92:	d001      	beq.n	8003b98 <HAL_RCC_OscConfig+0x61c>
        {
          return HAL_ERROR;
 8003b94:	2301      	movs	r3, #1
 8003b96:	e000      	b.n	8003b9a <HAL_RCC_OscConfig+0x61e>
        }
      }
    }
  }

  return HAL_OK;
 8003b98:	2300      	movs	r3, #0
}
 8003b9a:	0018      	movs	r0, r3
 8003b9c:	46bd      	mov	sp, r7
 8003b9e:	b008      	add	sp, #32
 8003ba0:	bd80      	pop	{r7, pc}
 8003ba2:	46c0      	nop			; (mov r8, r8)
 8003ba4:	40021000 	.word	0x40021000
 8003ba8:	00001388 	.word	0x00001388
 8003bac:	efffffff 	.word	0xefffffff
 8003bb0:	feffffff 	.word	0xfeffffff
 8003bb4:	ffc27fff 	.word	0xffc27fff

08003bb8 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8003bb8:	b580      	push	{r7, lr}
 8003bba:	b084      	sub	sp, #16
 8003bbc:	af00      	add	r7, sp, #0
 8003bbe:	6078      	str	r0, [r7, #4]
 8003bc0:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	d101      	bne.n	8003bcc <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003bc8:	2301      	movs	r3, #1
 8003bca:	e0b3      	b.n	8003d34 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003bcc:	4b5b      	ldr	r3, [pc, #364]	; (8003d3c <HAL_RCC_ClockConfig+0x184>)
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	2201      	movs	r2, #1
 8003bd2:	4013      	ands	r3, r2
 8003bd4:	683a      	ldr	r2, [r7, #0]
 8003bd6:	429a      	cmp	r2, r3
 8003bd8:	d911      	bls.n	8003bfe <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003bda:	4b58      	ldr	r3, [pc, #352]	; (8003d3c <HAL_RCC_ClockConfig+0x184>)
 8003bdc:	681b      	ldr	r3, [r3, #0]
 8003bde:	2201      	movs	r2, #1
 8003be0:	4393      	bics	r3, r2
 8003be2:	0019      	movs	r1, r3
 8003be4:	4b55      	ldr	r3, [pc, #340]	; (8003d3c <HAL_RCC_ClockConfig+0x184>)
 8003be6:	683a      	ldr	r2, [r7, #0]
 8003be8:	430a      	orrs	r2, r1
 8003bea:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003bec:	4b53      	ldr	r3, [pc, #332]	; (8003d3c <HAL_RCC_ClockConfig+0x184>)
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	2201      	movs	r2, #1
 8003bf2:	4013      	ands	r3, r2
 8003bf4:	683a      	ldr	r2, [r7, #0]
 8003bf6:	429a      	cmp	r2, r3
 8003bf8:	d001      	beq.n	8003bfe <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8003bfa:	2301      	movs	r3, #1
 8003bfc:	e09a      	b.n	8003d34 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	681b      	ldr	r3, [r3, #0]
 8003c02:	2202      	movs	r2, #2
 8003c04:	4013      	ands	r3, r2
 8003c06:	d015      	beq.n	8003c34 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	2204      	movs	r2, #4
 8003c0e:	4013      	ands	r3, r2
 8003c10:	d006      	beq.n	8003c20 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8003c12:	4b4b      	ldr	r3, [pc, #300]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003c14:	685a      	ldr	r2, [r3, #4]
 8003c16:	4b4a      	ldr	r3, [pc, #296]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003c18:	21e0      	movs	r1, #224	; 0xe0
 8003c1a:	00c9      	lsls	r1, r1, #3
 8003c1c:	430a      	orrs	r2, r1
 8003c1e:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003c20:	4b47      	ldr	r3, [pc, #284]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003c22:	685b      	ldr	r3, [r3, #4]
 8003c24:	22f0      	movs	r2, #240	; 0xf0
 8003c26:	4393      	bics	r3, r2
 8003c28:	0019      	movs	r1, r3
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	689a      	ldr	r2, [r3, #8]
 8003c2e:	4b44      	ldr	r3, [pc, #272]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003c30:	430a      	orrs	r2, r1
 8003c32:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	2201      	movs	r2, #1
 8003c3a:	4013      	ands	r3, r2
 8003c3c:	d040      	beq.n	8003cc0 <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	685b      	ldr	r3, [r3, #4]
 8003c42:	2b01      	cmp	r3, #1
 8003c44:	d107      	bne.n	8003c56 <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003c46:	4b3e      	ldr	r3, [pc, #248]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003c48:	681a      	ldr	r2, [r3, #0]
 8003c4a:	2380      	movs	r3, #128	; 0x80
 8003c4c:	029b      	lsls	r3, r3, #10
 8003c4e:	4013      	ands	r3, r2
 8003c50:	d114      	bne.n	8003c7c <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003c52:	2301      	movs	r3, #1
 8003c54:	e06e      	b.n	8003d34 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	685b      	ldr	r3, [r3, #4]
 8003c5a:	2b02      	cmp	r3, #2
 8003c5c:	d107      	bne.n	8003c6e <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003c5e:	4b38      	ldr	r3, [pc, #224]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003c60:	681a      	ldr	r2, [r3, #0]
 8003c62:	2380      	movs	r3, #128	; 0x80
 8003c64:	049b      	lsls	r3, r3, #18
 8003c66:	4013      	ands	r3, r2
 8003c68:	d108      	bne.n	8003c7c <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003c6a:	2301      	movs	r3, #1
 8003c6c:	e062      	b.n	8003d34 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003c6e:	4b34      	ldr	r3, [pc, #208]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	2202      	movs	r2, #2
 8003c74:	4013      	ands	r3, r2
 8003c76:	d101      	bne.n	8003c7c <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003c78:	2301      	movs	r3, #1
 8003c7a:	e05b      	b.n	8003d34 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003c7c:	4b30      	ldr	r3, [pc, #192]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003c7e:	685b      	ldr	r3, [r3, #4]
 8003c80:	2203      	movs	r2, #3
 8003c82:	4393      	bics	r3, r2
 8003c84:	0019      	movs	r1, r3
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	685a      	ldr	r2, [r3, #4]
 8003c8a:	4b2d      	ldr	r3, [pc, #180]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003c8c:	430a      	orrs	r2, r1
 8003c8e:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8003c90:	f7ff fbb6 	bl	8003400 <HAL_GetTick>
 8003c94:	0003      	movs	r3, r0
 8003c96:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003c98:	e009      	b.n	8003cae <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003c9a:	f7ff fbb1 	bl	8003400 <HAL_GetTick>
 8003c9e:	0002      	movs	r2, r0
 8003ca0:	68fb      	ldr	r3, [r7, #12]
 8003ca2:	1ad3      	subs	r3, r2, r3
 8003ca4:	4a27      	ldr	r2, [pc, #156]	; (8003d44 <HAL_RCC_ClockConfig+0x18c>)
 8003ca6:	4293      	cmp	r3, r2
 8003ca8:	d901      	bls.n	8003cae <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8003caa:	2303      	movs	r3, #3
 8003cac:	e042      	b.n	8003d34 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003cae:	4b24      	ldr	r3, [pc, #144]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003cb0:	685b      	ldr	r3, [r3, #4]
 8003cb2:	220c      	movs	r2, #12
 8003cb4:	401a      	ands	r2, r3
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	685b      	ldr	r3, [r3, #4]
 8003cba:	009b      	lsls	r3, r3, #2
 8003cbc:	429a      	cmp	r2, r3
 8003cbe:	d1ec      	bne.n	8003c9a <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003cc0:	4b1e      	ldr	r3, [pc, #120]	; (8003d3c <HAL_RCC_ClockConfig+0x184>)
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	2201      	movs	r2, #1
 8003cc6:	4013      	ands	r3, r2
 8003cc8:	683a      	ldr	r2, [r7, #0]
 8003cca:	429a      	cmp	r2, r3
 8003ccc:	d211      	bcs.n	8003cf2 <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003cce:	4b1b      	ldr	r3, [pc, #108]	; (8003d3c <HAL_RCC_ClockConfig+0x184>)
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	2201      	movs	r2, #1
 8003cd4:	4393      	bics	r3, r2
 8003cd6:	0019      	movs	r1, r3
 8003cd8:	4b18      	ldr	r3, [pc, #96]	; (8003d3c <HAL_RCC_ClockConfig+0x184>)
 8003cda:	683a      	ldr	r2, [r7, #0]
 8003cdc:	430a      	orrs	r2, r1
 8003cde:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003ce0:	4b16      	ldr	r3, [pc, #88]	; (8003d3c <HAL_RCC_ClockConfig+0x184>)
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	2201      	movs	r2, #1
 8003ce6:	4013      	ands	r3, r2
 8003ce8:	683a      	ldr	r2, [r7, #0]
 8003cea:	429a      	cmp	r2, r3
 8003cec:	d001      	beq.n	8003cf2 <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 8003cee:	2301      	movs	r3, #1
 8003cf0:	e020      	b.n	8003d34 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	2204      	movs	r2, #4
 8003cf8:	4013      	ands	r3, r2
 8003cfa:	d009      	beq.n	8003d10 <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8003cfc:	4b10      	ldr	r3, [pc, #64]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003cfe:	685b      	ldr	r3, [r3, #4]
 8003d00:	4a11      	ldr	r2, [pc, #68]	; (8003d48 <HAL_RCC_ClockConfig+0x190>)
 8003d02:	4013      	ands	r3, r2
 8003d04:	0019      	movs	r1, r3
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	68da      	ldr	r2, [r3, #12]
 8003d0a:	4b0d      	ldr	r3, [pc, #52]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003d0c:	430a      	orrs	r2, r1
 8003d0e:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 8003d10:	f000 f820 	bl	8003d54 <HAL_RCC_GetSysClockFreq>
 8003d14:	0001      	movs	r1, r0
 8003d16:	4b0a      	ldr	r3, [pc, #40]	; (8003d40 <HAL_RCC_ClockConfig+0x188>)
 8003d18:	685b      	ldr	r3, [r3, #4]
 8003d1a:	091b      	lsrs	r3, r3, #4
 8003d1c:	220f      	movs	r2, #15
 8003d1e:	4013      	ands	r3, r2
 8003d20:	4a0a      	ldr	r2, [pc, #40]	; (8003d4c <HAL_RCC_ClockConfig+0x194>)
 8003d22:	5cd3      	ldrb	r3, [r2, r3]
 8003d24:	000a      	movs	r2, r1
 8003d26:	40da      	lsrs	r2, r3
 8003d28:	4b09      	ldr	r3, [pc, #36]	; (8003d50 <HAL_RCC_ClockConfig+0x198>)
 8003d2a:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8003d2c:	2000      	movs	r0, #0
 8003d2e:	f7ff fb21 	bl	8003374 <HAL_InitTick>
  
  return HAL_OK;
 8003d32:	2300      	movs	r3, #0
}
 8003d34:	0018      	movs	r0, r3
 8003d36:	46bd      	mov	sp, r7
 8003d38:	b004      	add	sp, #16
 8003d3a:	bd80      	pop	{r7, pc}
 8003d3c:	40022000 	.word	0x40022000
 8003d40:	40021000 	.word	0x40021000
 8003d44:	00001388 	.word	0x00001388
 8003d48:	fffff8ff 	.word	0xfffff8ff
 8003d4c:	0800793c 	.word	0x0800793c
 8003d50:	20000000 	.word	0x20000000

08003d54 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003d54:	b590      	push	{r4, r7, lr}
 8003d56:	b08f      	sub	sp, #60	; 0x3c
 8003d58:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 8003d5a:	2314      	movs	r3, #20
 8003d5c:	18fb      	adds	r3, r7, r3
 8003d5e:	4a2c      	ldr	r2, [pc, #176]	; (8003e10 <HAL_RCC_GetSysClockFreq+0xbc>)
 8003d60:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003d62:	c313      	stmia	r3!, {r0, r1, r4}
 8003d64:	6812      	ldr	r2, [r2, #0]
 8003d66:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 8003d68:	1d3b      	adds	r3, r7, #4
 8003d6a:	4a2a      	ldr	r2, [pc, #168]	; (8003e14 <HAL_RCC_GetSysClockFreq+0xc0>)
 8003d6c:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003d6e:	c313      	stmia	r3!, {r0, r1, r4}
 8003d70:	6812      	ldr	r2, [r2, #0]
 8003d72:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8003d74:	2300      	movs	r3, #0
 8003d76:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003d78:	2300      	movs	r3, #0
 8003d7a:	62bb      	str	r3, [r7, #40]	; 0x28
 8003d7c:	2300      	movs	r3, #0
 8003d7e:	637b      	str	r3, [r7, #52]	; 0x34
 8003d80:	2300      	movs	r3, #0
 8003d82:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t sysclockfreq = 0U;
 8003d84:	2300      	movs	r3, #0
 8003d86:	633b      	str	r3, [r7, #48]	; 0x30
  
  tmpreg = RCC->CFGR;
 8003d88:	4b23      	ldr	r3, [pc, #140]	; (8003e18 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003d8a:	685b      	ldr	r3, [r3, #4]
 8003d8c:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003d8e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003d90:	220c      	movs	r2, #12
 8003d92:	4013      	ands	r3, r2
 8003d94:	2b04      	cmp	r3, #4
 8003d96:	d002      	beq.n	8003d9e <HAL_RCC_GetSysClockFreq+0x4a>
 8003d98:	2b08      	cmp	r3, #8
 8003d9a:	d003      	beq.n	8003da4 <HAL_RCC_GetSysClockFreq+0x50>
 8003d9c:	e02f      	b.n	8003dfe <HAL_RCC_GetSysClockFreq+0xaa>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003d9e:	4b1f      	ldr	r3, [pc, #124]	; (8003e1c <HAL_RCC_GetSysClockFreq+0xc8>)
 8003da0:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003da2:	e02f      	b.n	8003e04 <HAL_RCC_GetSysClockFreq+0xb0>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8003da4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003da6:	0c9b      	lsrs	r3, r3, #18
 8003da8:	220f      	movs	r2, #15
 8003daa:	4013      	ands	r3, r2
 8003dac:	2214      	movs	r2, #20
 8003dae:	18ba      	adds	r2, r7, r2
 8003db0:	5cd3      	ldrb	r3, [r2, r3]
 8003db2:	627b      	str	r3, [r7, #36]	; 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8003db4:	4b18      	ldr	r3, [pc, #96]	; (8003e18 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003db6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003db8:	220f      	movs	r2, #15
 8003dba:	4013      	ands	r3, r2
 8003dbc:	1d3a      	adds	r2, r7, #4
 8003dbe:	5cd3      	ldrb	r3, [r2, r3]
 8003dc0:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 8003dc2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003dc4:	23c0      	movs	r3, #192	; 0xc0
 8003dc6:	025b      	lsls	r3, r3, #9
 8003dc8:	401a      	ands	r2, r3
 8003dca:	2380      	movs	r3, #128	; 0x80
 8003dcc:	025b      	lsls	r3, r3, #9
 8003dce:	429a      	cmp	r2, r3
 8003dd0:	d109      	bne.n	8003de6 <HAL_RCC_GetSysClockFreq+0x92>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003dd2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003dd4:	4811      	ldr	r0, [pc, #68]	; (8003e1c <HAL_RCC_GetSysClockFreq+0xc8>)
 8003dd6:	f7fc f9b3 	bl	8000140 <__udivsi3>
 8003dda:	0003      	movs	r3, r0
 8003ddc:	001a      	movs	r2, r3
 8003dde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003de0:	4353      	muls	r3, r2
 8003de2:	637b      	str	r3, [r7, #52]	; 0x34
 8003de4:	e008      	b.n	8003df8 <HAL_RCC_GetSysClockFreq+0xa4>
#endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
      else
      {
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003de6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003de8:	480c      	ldr	r0, [pc, #48]	; (8003e1c <HAL_RCC_GetSysClockFreq+0xc8>)
 8003dea:	f7fc f9a9 	bl	8000140 <__udivsi3>
 8003dee:	0003      	movs	r3, r0
 8003df0:	001a      	movs	r2, r3
 8003df2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003df4:	4353      	muls	r3, r2
 8003df6:	637b      	str	r3, [r7, #52]	; 0x34
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
#endif
      }
      sysclockfreq = pllclk;
 8003df8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003dfa:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003dfc:	e002      	b.n	8003e04 <HAL_RCC_GetSysClockFreq+0xb0>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8003dfe:	4b07      	ldr	r3, [pc, #28]	; (8003e1c <HAL_RCC_GetSysClockFreq+0xc8>)
 8003e00:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8003e02:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 8003e04:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 8003e06:	0018      	movs	r0, r3
 8003e08:	46bd      	mov	sp, r7
 8003e0a:	b00f      	add	sp, #60	; 0x3c
 8003e0c:	bd90      	pop	{r4, r7, pc}
 8003e0e:	46c0      	nop			; (mov r8, r8)
 8003e10:	080077f4 	.word	0x080077f4
 8003e14:	08007804 	.word	0x08007804
 8003e18:	40021000 	.word	0x40021000
 8003e1c:	007a1200 	.word	0x007a1200

08003e20 <gpio_clk_en>:
		uint16_t out_max) {
	return (((x - in_min) * (out_max - out_min)) / ((in_max - in_min) + out_min));
}

/**********************Enable clock Function*************************************/
void gpio_clk_en(GPIO_TypeDef *port) {
 8003e20:	b580      	push	{r7, lr}
 8003e22:	b082      	sub	sp, #8
 8003e24:	af00      	add	r7, sp, #0
 8003e26:	6078      	str	r0, [r7, #4]
	if (port == GPIOA) {
 8003e28:	687a      	ldr	r2, [r7, #4]
 8003e2a:	2390      	movs	r3, #144	; 0x90
 8003e2c:	05db      	lsls	r3, r3, #23
 8003e2e:	429a      	cmp	r2, r3
 8003e30:	d107      	bne.n	8003e42 <gpio_clk_en+0x22>
		GPIOA_CLK_EN;
 8003e32:	4b1b      	ldr	r3, [pc, #108]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e34:	695a      	ldr	r2, [r3, #20]
 8003e36:	4b1a      	ldr	r3, [pc, #104]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e38:	2180      	movs	r1, #128	; 0x80
 8003e3a:	0289      	lsls	r1, r1, #10
 8003e3c:	430a      	orrs	r2, r1
 8003e3e:	615a      	str	r2, [r3, #20]
	} else if (port == GPIOD) {
		GPIOD_CLK_EN;
	} else {
		GPIOF_CLK_EN;
	}
}
 8003e40:	e02a      	b.n	8003e98 <gpio_clk_en+0x78>
	} else if (port == GPIOB) {
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	4a17      	ldr	r2, [pc, #92]	; (8003ea4 <gpio_clk_en+0x84>)
 8003e46:	4293      	cmp	r3, r2
 8003e48:	d107      	bne.n	8003e5a <gpio_clk_en+0x3a>
		GPIOB_CLK_EN;
 8003e4a:	4b15      	ldr	r3, [pc, #84]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e4c:	695a      	ldr	r2, [r3, #20]
 8003e4e:	4b14      	ldr	r3, [pc, #80]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e50:	2180      	movs	r1, #128	; 0x80
 8003e52:	02c9      	lsls	r1, r1, #11
 8003e54:	430a      	orrs	r2, r1
 8003e56:	615a      	str	r2, [r3, #20]
}
 8003e58:	e01e      	b.n	8003e98 <gpio_clk_en+0x78>
	} else if (port == GPIOC) {
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	4a12      	ldr	r2, [pc, #72]	; (8003ea8 <gpio_clk_en+0x88>)
 8003e5e:	4293      	cmp	r3, r2
 8003e60:	d107      	bne.n	8003e72 <gpio_clk_en+0x52>
		GPIOC_CLK_EN;
 8003e62:	4b0f      	ldr	r3, [pc, #60]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e64:	695a      	ldr	r2, [r3, #20]
 8003e66:	4b0e      	ldr	r3, [pc, #56]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e68:	2180      	movs	r1, #128	; 0x80
 8003e6a:	0309      	lsls	r1, r1, #12
 8003e6c:	430a      	orrs	r2, r1
 8003e6e:	615a      	str	r2, [r3, #20]
}
 8003e70:	e012      	b.n	8003e98 <gpio_clk_en+0x78>
	} else if (port == GPIOD) {
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	4a0d      	ldr	r2, [pc, #52]	; (8003eac <gpio_clk_en+0x8c>)
 8003e76:	4293      	cmp	r3, r2
 8003e78:	d107      	bne.n	8003e8a <gpio_clk_en+0x6a>
		GPIOD_CLK_EN;
 8003e7a:	4b09      	ldr	r3, [pc, #36]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e7c:	695a      	ldr	r2, [r3, #20]
 8003e7e:	4b08      	ldr	r3, [pc, #32]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e80:	2180      	movs	r1, #128	; 0x80
 8003e82:	0349      	lsls	r1, r1, #13
 8003e84:	430a      	orrs	r2, r1
 8003e86:	615a      	str	r2, [r3, #20]
}
 8003e88:	e006      	b.n	8003e98 <gpio_clk_en+0x78>
		GPIOF_CLK_EN;
 8003e8a:	4b05      	ldr	r3, [pc, #20]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e8c:	695a      	ldr	r2, [r3, #20]
 8003e8e:	4b04      	ldr	r3, [pc, #16]	; (8003ea0 <gpio_clk_en+0x80>)
 8003e90:	2180      	movs	r1, #128	; 0x80
 8003e92:	03c9      	lsls	r1, r1, #15
 8003e94:	430a      	orrs	r2, r1
 8003e96:	615a      	str	r2, [r3, #20]
}
 8003e98:	46c0      	nop			; (mov r8, r8)
 8003e9a:	46bd      	mov	sp, r7
 8003e9c:	b002      	add	sp, #8
 8003e9e:	bd80      	pop	{r7, pc}
 8003ea0:	40021000 	.word	0x40021000
 8003ea4:	48000400 	.word	0x48000400
 8003ea8:	48000800 	.word	0x48000800
 8003eac:	48000c00 	.word	0x48000c00

08003eb0 <gpio_config>:
/**********************************************************************************/

/********************GPIO Configuration Functions**********************************/
void gpio_config(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinMode,
		uint32_t pinSpeed, uint32_t pinPUPD, uint32_t PHPL_OD) {
 8003eb0:	b580      	push	{r7, lr}
 8003eb2:	b084      	sub	sp, #16
 8003eb4:	af00      	add	r7, sp, #0
 8003eb6:	60f8      	str	r0, [r7, #12]
 8003eb8:	60b9      	str	r1, [r7, #8]
 8003eba:	607a      	str	r2, [r7, #4]
 8003ebc:	603b      	str	r3, [r7, #0]

	if (pinMode == OUTPUT_MODE) {
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	2b01      	cmp	r3, #1
 8003ec2:	d11c      	bne.n	8003efe <gpio_config+0x4e>
		gpio_clk_en(port);
 8003ec4:	68fb      	ldr	r3, [r7, #12]
 8003ec6:	0018      	movs	r0, r3
 8003ec8:	f7ff ffaa 	bl	8003e20 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003ecc:	687a      	ldr	r2, [r7, #4]
 8003ece:	68b9      	ldr	r1, [r7, #8]
 8003ed0:	68fb      	ldr	r3, [r7, #12]
 8003ed2:	0018      	movs	r0, r3
 8003ed4:	f000 f85a 	bl	8003f8c <gpio_moder>
		gpio_speed(port, pinNumber, pinSpeed);
 8003ed8:	683a      	ldr	r2, [r7, #0]
 8003eda:	68b9      	ldr	r1, [r7, #8]
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	0018      	movs	r0, r3
 8003ee0:	f000 f86c 	bl	8003fbc <gpio_speed>
		gpio_PUPD(port, pinNumber, pinPUPD);
 8003ee4:	69ba      	ldr	r2, [r7, #24]
 8003ee6:	68b9      	ldr	r1, [r7, #8]
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	0018      	movs	r0, r3
 8003eec:	f000 f87e 	bl	8003fec <gpio_PUPD>
		gpio_PHPL_OD(port, pinNumber, PHPL_OD);
 8003ef0:	69fa      	ldr	r2, [r7, #28]
 8003ef2:	68b9      	ldr	r1, [r7, #8]
 8003ef4:	68fb      	ldr	r3, [r7, #12]
 8003ef6:	0018      	movs	r0, r3
 8003ef8:	f000 f890 	bl	800401c <gpio_PHPL_OD>
	} else if (pinMode == ANALOG_MODE) {
		gpio_clk_en(port);
		gpio_moder(port, pinNumber, pinMode);
		adc_chsel(port, pinNumber);
	}
}
 8003efc:	e041      	b.n	8003f82 <gpio_config+0xd2>
	} else if (pinMode == INPUT_MODE) {
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d110      	bne.n	8003f26 <gpio_config+0x76>
		gpio_clk_en(port);
 8003f04:	68fb      	ldr	r3, [r7, #12]
 8003f06:	0018      	movs	r0, r3
 8003f08:	f7ff ff8a 	bl	8003e20 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003f0c:	687a      	ldr	r2, [r7, #4]
 8003f0e:	68b9      	ldr	r1, [r7, #8]
 8003f10:	68fb      	ldr	r3, [r7, #12]
 8003f12:	0018      	movs	r0, r3
 8003f14:	f000 f83a 	bl	8003f8c <gpio_moder>
		gpio_PUPD(port, pinNumber, pinPUPD);
 8003f18:	69ba      	ldr	r2, [r7, #24]
 8003f1a:	68b9      	ldr	r1, [r7, #8]
 8003f1c:	68fb      	ldr	r3, [r7, #12]
 8003f1e:	0018      	movs	r0, r3
 8003f20:	f000 f864 	bl	8003fec <gpio_PUPD>
}
 8003f24:	e02d      	b.n	8003f82 <gpio_config+0xd2>
	} else if (pinMode == ALT_MODE) {
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	2b02      	cmp	r3, #2
 8003f2a:	d116      	bne.n	8003f5a <gpio_config+0xaa>
		gpio_clk_en(port);
 8003f2c:	68fb      	ldr	r3, [r7, #12]
 8003f2e:	0018      	movs	r0, r3
 8003f30:	f7ff ff76 	bl	8003e20 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003f34:	687a      	ldr	r2, [r7, #4]
 8003f36:	68b9      	ldr	r1, [r7, #8]
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	0018      	movs	r0, r3
 8003f3c:	f000 f826 	bl	8003f8c <gpio_moder>
		gpio_PUPD(port, pinNumber, pinPUPD);
 8003f40:	69ba      	ldr	r2, [r7, #24]
 8003f42:	68b9      	ldr	r1, [r7, #8]
 8003f44:	68fb      	ldr	r3, [r7, #12]
 8003f46:	0018      	movs	r0, r3
 8003f48:	f000 f850 	bl	8003fec <gpio_PUPD>
		gpio_PHPL_OD(port, pinNumber, PHPL_OD);
 8003f4c:	69fa      	ldr	r2, [r7, #28]
 8003f4e:	68b9      	ldr	r1, [r7, #8]
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	0018      	movs	r0, r3
 8003f54:	f000 f862 	bl	800401c <gpio_PHPL_OD>
}
 8003f58:	e013      	b.n	8003f82 <gpio_config+0xd2>
	} else if (pinMode == ANALOG_MODE) {
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	2b03      	cmp	r3, #3
 8003f5e:	d110      	bne.n	8003f82 <gpio_config+0xd2>
		gpio_clk_en(port);
 8003f60:	68fb      	ldr	r3, [r7, #12]
 8003f62:	0018      	movs	r0, r3
 8003f64:	f7ff ff5c 	bl	8003e20 <gpio_clk_en>
		gpio_moder(port, pinNumber, pinMode);
 8003f68:	687a      	ldr	r2, [r7, #4]
 8003f6a:	68b9      	ldr	r1, [r7, #8]
 8003f6c:	68fb      	ldr	r3, [r7, #12]
 8003f6e:	0018      	movs	r0, r3
 8003f70:	f000 f80c 	bl	8003f8c <gpio_moder>
		adc_chsel(port, pinNumber);
 8003f74:	68bb      	ldr	r3, [r7, #8]
 8003f76:	b29a      	uxth	r2, r3
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	0011      	movs	r1, r2
 8003f7c:	0018      	movs	r0, r3
 8003f7e:	f000 f8d9 	bl	8004134 <adc_chsel>
}
 8003f82:	46c0      	nop			; (mov r8, r8)
 8003f84:	46bd      	mov	sp, r7
 8003f86:	b004      	add	sp, #16
 8003f88:	bd80      	pop	{r7, pc}
	...

08003f8c <gpio_moder>:

void gpio_moder(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinMode) {	// Config the mode
 8003f8c:	b580      	push	{r7, lr}
 8003f8e:	b084      	sub	sp, #16
 8003f90:	af00      	add	r7, sp, #0
 8003f92:	60f8      	str	r0, [r7, #12]
 8003f94:	60b9      	str	r1, [r7, #8]
 8003f96:	607a      	str	r2, [r7, #4]
	port->MODER |= (pinMode << (PINPOS_2B[pinNumber]));	// IN/OP/Alternate/ANALOG
 8003f98:	68fb      	ldr	r3, [r7, #12]
 8003f9a:	681a      	ldr	r2, [r3, #0]
 8003f9c:	4b06      	ldr	r3, [pc, #24]	; (8003fb8 <gpio_moder+0x2c>)
 8003f9e:	68b9      	ldr	r1, [r7, #8]
 8003fa0:	0089      	lsls	r1, r1, #2
 8003fa2:	58cb      	ldr	r3, [r1, r3]
 8003fa4:	6879      	ldr	r1, [r7, #4]
 8003fa6:	4099      	lsls	r1, r3
 8003fa8:	000b      	movs	r3, r1
 8003faa:	431a      	orrs	r2, r3
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	601a      	str	r2, [r3, #0]
}
 8003fb0:	46c0      	nop			; (mov r8, r8)
 8003fb2:	46bd      	mov	sp, r7
 8003fb4:	b004      	add	sp, #16
 8003fb6:	bd80      	pop	{r7, pc}
 8003fb8:	2000000c 	.word	0x2000000c

08003fbc <gpio_speed>:

void gpio_speed(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinSpeed) {// Config the speed
 8003fbc:	b580      	push	{r7, lr}
 8003fbe:	b084      	sub	sp, #16
 8003fc0:	af00      	add	r7, sp, #0
 8003fc2:	60f8      	str	r0, [r7, #12]
 8003fc4:	60b9      	str	r1, [r7, #8]
 8003fc6:	607a      	str	r2, [r7, #4]
	port->OSPEEDR |= (pinSpeed << PINPOS_2B[pinNumber]);		// LOW/MED/HIGH
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	689a      	ldr	r2, [r3, #8]
 8003fcc:	4b06      	ldr	r3, [pc, #24]	; (8003fe8 <gpio_speed+0x2c>)
 8003fce:	68b9      	ldr	r1, [r7, #8]
 8003fd0:	0089      	lsls	r1, r1, #2
 8003fd2:	58cb      	ldr	r3, [r1, r3]
 8003fd4:	6879      	ldr	r1, [r7, #4]
 8003fd6:	4099      	lsls	r1, r3
 8003fd8:	000b      	movs	r3, r1
 8003fda:	431a      	orrs	r2, r3
 8003fdc:	68fb      	ldr	r3, [r7, #12]
 8003fde:	609a      	str	r2, [r3, #8]
}
 8003fe0:	46c0      	nop			; (mov r8, r8)
 8003fe2:	46bd      	mov	sp, r7
 8003fe4:	b004      	add	sp, #16
 8003fe6:	bd80      	pop	{r7, pc}
 8003fe8:	2000000c 	.word	0x2000000c

08003fec <gpio_PUPD>:

void gpio_PUPD(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t pinPUPD) {// ENABLE/DISABLE
 8003fec:	b580      	push	{r7, lr}
 8003fee:	b084      	sub	sp, #16
 8003ff0:	af00      	add	r7, sp, #0
 8003ff2:	60f8      	str	r0, [r7, #12]
 8003ff4:	60b9      	str	r1, [r7, #8]
 8003ff6:	607a      	str	r2, [r7, #4]
	port->PUPDR |= (pinPUPD << PINPOS_2B[pinNumber]);		// PULL-UP/PULL-DOWN
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	68da      	ldr	r2, [r3, #12]
 8003ffc:	4b06      	ldr	r3, [pc, #24]	; (8004018 <gpio_PUPD+0x2c>)
 8003ffe:	68b9      	ldr	r1, [r7, #8]
 8004000:	0089      	lsls	r1, r1, #2
 8004002:	58cb      	ldr	r3, [r1, r3]
 8004004:	6879      	ldr	r1, [r7, #4]
 8004006:	4099      	lsls	r1, r3
 8004008:	000b      	movs	r3, r1
 800400a:	431a      	orrs	r2, r3
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	60da      	str	r2, [r3, #12]
}
 8004010:	46c0      	nop			; (mov r8, r8)
 8004012:	46bd      	mov	sp, r7
 8004014:	b004      	add	sp, #16
 8004016:	bd80      	pop	{r7, pc}
 8004018:	2000000c 	.word	0x2000000c

0800401c <gpio_PHPL_OD>:
void gpio_PHPL_OD(GPIO_TypeDef *port, uint32_t pinNumber, uint32_t PHPL_OD) {// ENABLE/DISABLE
 800401c:	b580      	push	{r7, lr}
 800401e:	b084      	sub	sp, #16
 8004020:	af00      	add	r7, sp, #0
 8004022:	60f8      	str	r0, [r7, #12]
 8004024:	60b9      	str	r1, [r7, #8]
 8004026:	607a      	str	r2, [r7, #4]
	port->OTYPER |= (PHPL_OD << pinNumber);	// PUSH-PULL/OPEN DRAIN
 8004028:	68fb      	ldr	r3, [r7, #12]
 800402a:	685a      	ldr	r2, [r3, #4]
 800402c:	6879      	ldr	r1, [r7, #4]
 800402e:	68bb      	ldr	r3, [r7, #8]
 8004030:	4099      	lsls	r1, r3
 8004032:	000b      	movs	r3, r1
 8004034:	431a      	orrs	r2, r3
 8004036:	68fb      	ldr	r3, [r7, #12]
 8004038:	605a      	str	r2, [r3, #4]
}
 800403a:	46c0      	nop			; (mov r8, r8)
 800403c:	46bd      	mov	sp, r7
 800403e:	b004      	add	sp, #16
 8004040:	bd80      	pop	{r7, pc}

08004042 <gpio_altfn>:

void gpio_altfn(GPIO_TypeDef *port, uint32_t pinNumber,
		uint32_t alternate_function) {
 8004042:	b580      	push	{r7, lr}
 8004044:	b084      	sub	sp, #16
 8004046:	af00      	add	r7, sp, #0
 8004048:	60f8      	str	r0, [r7, #12]
 800404a:	60b9      	str	r1, [r7, #8]
 800404c:	607a      	str	r2, [r7, #4]
	if (pinNumber < 8) {
 800404e:	68bb      	ldr	r3, [r7, #8]
 8004050:	2b07      	cmp	r3, #7
 8004052:	d80a      	bhi.n	800406a <gpio_altfn+0x28>
		port->AFR[0] |= (alternate_function << (4 * pinNumber));
 8004054:	68fb      	ldr	r3, [r7, #12]
 8004056:	6a1a      	ldr	r2, [r3, #32]
 8004058:	68bb      	ldr	r3, [r7, #8]
 800405a:	009b      	lsls	r3, r3, #2
 800405c:	6879      	ldr	r1, [r7, #4]
 800405e:	4099      	lsls	r1, r3
 8004060:	000b      	movs	r3, r1
 8004062:	431a      	orrs	r2, r3
 8004064:	68fb      	ldr	r3, [r7, #12]
 8004066:	621a      	str	r2, [r3, #32]
	} else {
		port->AFR[1] |= (alternate_function << (4 * (pinNumber - 8)));
	}
}
 8004068:	e00a      	b.n	8004080 <gpio_altfn+0x3e>
		port->AFR[1] |= (alternate_function << (4 * (pinNumber - 8)));
 800406a:	68fb      	ldr	r3, [r7, #12]
 800406c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800406e:	68bb      	ldr	r3, [r7, #8]
 8004070:	3b08      	subs	r3, #8
 8004072:	009b      	lsls	r3, r3, #2
 8004074:	6879      	ldr	r1, [r7, #4]
 8004076:	4099      	lsls	r1, r3
 8004078:	000b      	movs	r3, r1
 800407a:	431a      	orrs	r2, r3
 800407c:	68fb      	ldr	r3, [r7, #12]
 800407e:	625a      	str	r2, [r3, #36]	; 0x24
}
 8004080:	46c0      	nop			; (mov r8, r8)
 8004082:	46bd      	mov	sp, r7
 8004084:	b004      	add	sp, #16
 8004086:	bd80      	pop	{r7, pc}

08004088 <print>:

//*******************************************************************************************//

//************************** UART SERIAL PRINTING *******************************************//

void print(const char *fmt, ...) {
 8004088:	b40f      	push	{r0, r1, r2, r3}
 800408a:	b580      	push	{r7, lr}
 800408c:	b084      	sub	sp, #16
 800408e:	af00      	add	r7, sp, #0
	static char buffer[256];
	va_list args;
	va_start(args, fmt);
 8004090:	231c      	movs	r3, #28
 8004092:	18fb      	adds	r3, r7, r3
 8004094:	607b      	str	r3, [r7, #4]
	vsnprintf(buffer, sizeof(buffer), fmt, args);
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	69ba      	ldr	r2, [r7, #24]
 800409a:	2180      	movs	r1, #128	; 0x80
 800409c:	0049      	lsls	r1, r1, #1
 800409e:	4818      	ldr	r0, [pc, #96]	; (8004100 <print+0x78>)
 80040a0:	f000 fffc 	bl	800509c <vsniprintf>
	va_end(args);

	int len = strlen(buffer);
 80040a4:	4b16      	ldr	r3, [pc, #88]	; (8004100 <print+0x78>)
 80040a6:	0018      	movs	r0, r3
 80040a8:	f7fc f82e 	bl	8000108 <strlen>
 80040ac:	0003      	movs	r3, r0
 80040ae:	60bb      	str	r3, [r7, #8]
	for (uint8_t i = 0; i < len; i++) {
 80040b0:	230f      	movs	r3, #15
 80040b2:	18fb      	adds	r3, r7, r3
 80040b4:	2200      	movs	r2, #0
 80040b6:	701a      	strb	r2, [r3, #0]
 80040b8:	e013      	b.n	80040e2 <print+0x5a>
		USART2->TDR = buffer[i];
 80040ba:	230f      	movs	r3, #15
 80040bc:	18fb      	adds	r3, r7, r3
 80040be:	781b      	ldrb	r3, [r3, #0]
 80040c0:	4a0f      	ldr	r2, [pc, #60]	; (8004100 <print+0x78>)
 80040c2:	5cd2      	ldrb	r2, [r2, r3]
 80040c4:	4b0f      	ldr	r3, [pc, #60]	; (8004104 <print+0x7c>)
 80040c6:	b292      	uxth	r2, r2
 80040c8:	851a      	strh	r2, [r3, #40]	; 0x28
		while (!(USART2->ISR & USART_ISR_TXE))
 80040ca:	46c0      	nop			; (mov r8, r8)
 80040cc:	4b0d      	ldr	r3, [pc, #52]	; (8004104 <print+0x7c>)
 80040ce:	69db      	ldr	r3, [r3, #28]
 80040d0:	2280      	movs	r2, #128	; 0x80
 80040d2:	4013      	ands	r3, r2
 80040d4:	d0fa      	beq.n	80040cc <print+0x44>
	for (uint8_t i = 0; i < len; i++) {
 80040d6:	210f      	movs	r1, #15
 80040d8:	187b      	adds	r3, r7, r1
 80040da:	781a      	ldrb	r2, [r3, #0]
 80040dc:	187b      	adds	r3, r7, r1
 80040de:	3201      	adds	r2, #1
 80040e0:	701a      	strb	r2, [r3, #0]
 80040e2:	230f      	movs	r3, #15
 80040e4:	18fb      	adds	r3, r7, r3
 80040e6:	781b      	ldrb	r3, [r3, #0]
 80040e8:	68ba      	ldr	r2, [r7, #8]
 80040ea:	429a      	cmp	r2, r3
 80040ec:	dce5      	bgt.n	80040ba <print+0x32>
			;
	}

}
 80040ee:	46c0      	nop			; (mov r8, r8)
 80040f0:	46c0      	nop			; (mov r8, r8)
 80040f2:	46bd      	mov	sp, r7
 80040f4:	b004      	add	sp, #16
 80040f6:	bc80      	pop	{r7}
 80040f8:	bc08      	pop	{r3}
 80040fa:	b004      	add	sp, #16
 80040fc:	4718      	bx	r3
 80040fe:	46c0      	nop			; (mov r8, r8)
 8004100:	200002c0 	.word	0x200002c0
 8004104:	40004400 	.word	0x40004400

08004108 <TIM6_IRQHandler>:
	return ticks;
}
void ticks_reset() {
	ticks = 0;
}
void TIM6_IRQHandler(void) {		// Timer Interrupt helping in delay
 8004108:	b580      	push	{r7, lr}
 800410a:	af00      	add	r7, sp, #0
	ticks++;
 800410c:	4b07      	ldr	r3, [pc, #28]	; (800412c <TIM6_IRQHandler+0x24>)
 800410e:	881b      	ldrh	r3, [r3, #0]
 8004110:	3301      	adds	r3, #1
 8004112:	b29a      	uxth	r2, r3
 8004114:	4b05      	ldr	r3, [pc, #20]	; (800412c <TIM6_IRQHandler+0x24>)
 8004116:	801a      	strh	r2, [r3, #0]
	TIM6->SR &= ~TIM_SR_UIF;
 8004118:	4b05      	ldr	r3, [pc, #20]	; (8004130 <TIM6_IRQHandler+0x28>)
 800411a:	691a      	ldr	r2, [r3, #16]
 800411c:	4b04      	ldr	r3, [pc, #16]	; (8004130 <TIM6_IRQHandler+0x28>)
 800411e:	2101      	movs	r1, #1
 8004120:	438a      	bics	r2, r1
 8004122:	611a      	str	r2, [r3, #16]
}
 8004124:	46c0      	nop			; (mov r8, r8)
 8004126:	46bd      	mov	sp, r7
 8004128:	bd80      	pop	{r7, pc}
 800412a:	46c0      	nop			; (mov r8, r8)
 800412c:	200002bc 	.word	0x200002bc
 8004130:	40001000 	.word	0x40001000

08004134 <adc_chsel>:
	while ((ADC1->CR & ADC_CR_ADEN) != 0) /* (4) */
	{
		/* For robust implementation, add here time-out management */
	}
}
void adc_chsel(GPIO_TypeDef *port, uint16_t pin) {
 8004134:	b580      	push	{r7, lr}
 8004136:	b082      	sub	sp, #8
 8004138:	af00      	add	r7, sp, #0
 800413a:	6078      	str	r0, [r7, #4]
 800413c:	000a      	movs	r2, r1
 800413e:	1cbb      	adds	r3, r7, #2
 8004140:	801a      	strh	r2, [r3, #0]

	if (port == GPIOA) {
 8004142:	687a      	ldr	r2, [r7, #4]
 8004144:	2390      	movs	r3, #144	; 0x90
 8004146:	05db      	lsls	r3, r3, #23
 8004148:	429a      	cmp	r2, r3
 800414a:	d133      	bne.n	80041b4 <adc_chsel+0x80>
		switch (pin) {
 800414c:	1cbb      	adds	r3, r7, #2
 800414e:	881b      	ldrh	r3, [r3, #0]
 8004150:	2b07      	cmp	r3, #7
 8004152:	d900      	bls.n	8004156 <adc_chsel+0x22>
 8004154:	e086      	b.n	8004264 <adc_chsel+0x130>
 8004156:	009a      	lsls	r2, r3, #2
 8004158:	4b47      	ldr	r3, [pc, #284]	; (8004278 <adc_chsel+0x144>)
 800415a:	18d3      	adds	r3, r2, r3
 800415c:	681b      	ldr	r3, [r3, #0]
 800415e:	469f      	mov	pc, r3
		case 0:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL0;
 8004160:	4b46      	ldr	r3, [pc, #280]	; (800427c <adc_chsel+0x148>)
 8004162:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004164:	4b45      	ldr	r3, [pc, #276]	; (800427c <adc_chsel+0x148>)
 8004166:	2101      	movs	r1, #1
 8004168:	430a      	orrs	r2, r1
 800416a:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 800416c:	e07f      	b.n	800426e <adc_chsel+0x13a>
		case 1:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL1;
 800416e:	4b43      	ldr	r3, [pc, #268]	; (800427c <adc_chsel+0x148>)
 8004170:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004172:	4b42      	ldr	r3, [pc, #264]	; (800427c <adc_chsel+0x148>)
 8004174:	2102      	movs	r1, #2
 8004176:	430a      	orrs	r2, r1
 8004178:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 800417a:	e078      	b.n	800426e <adc_chsel+0x13a>
		case 4:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL4;
 800417c:	4b3f      	ldr	r3, [pc, #252]	; (800427c <adc_chsel+0x148>)
 800417e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004180:	4b3e      	ldr	r3, [pc, #248]	; (800427c <adc_chsel+0x148>)
 8004182:	2110      	movs	r1, #16
 8004184:	430a      	orrs	r2, r1
 8004186:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004188:	e071      	b.n	800426e <adc_chsel+0x13a>
		case 5:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL5;
 800418a:	4b3c      	ldr	r3, [pc, #240]	; (800427c <adc_chsel+0x148>)
 800418c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800418e:	4b3b      	ldr	r3, [pc, #236]	; (800427c <adc_chsel+0x148>)
 8004190:	2120      	movs	r1, #32
 8004192:	430a      	orrs	r2, r1
 8004194:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004196:	e06a      	b.n	800426e <adc_chsel+0x13a>
		case 6:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL6;
 8004198:	4b38      	ldr	r3, [pc, #224]	; (800427c <adc_chsel+0x148>)
 800419a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800419c:	4b37      	ldr	r3, [pc, #220]	; (800427c <adc_chsel+0x148>)
 800419e:	2140      	movs	r1, #64	; 0x40
 80041a0:	430a      	orrs	r2, r1
 80041a2:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041a4:	e063      	b.n	800426e <adc_chsel+0x13a>
		case 7:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL7;
 80041a6:	4b35      	ldr	r3, [pc, #212]	; (800427c <adc_chsel+0x148>)
 80041a8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041aa:	4b34      	ldr	r3, [pc, #208]	; (800427c <adc_chsel+0x148>)
 80041ac:	2180      	movs	r1, #128	; 0x80
 80041ae:	430a      	orrs	r2, r1
 80041b0:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041b2:	e05c      	b.n	800426e <adc_chsel+0x13a>
		default:
			break;
		}
	} else if (port == GPIOB) {
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	4a32      	ldr	r2, [pc, #200]	; (8004280 <adc_chsel+0x14c>)
 80041b8:	4293      	cmp	r3, r2
 80041ba:	d116      	bne.n	80041ea <adc_chsel+0xb6>
		switch (pin) {
 80041bc:	1cbb      	adds	r3, r7, #2
 80041be:	881b      	ldrh	r3, [r3, #0]
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	d002      	beq.n	80041ca <adc_chsel+0x96>
 80041c4:	2b01      	cmp	r3, #1
 80041c6:	d008      	beq.n	80041da <adc_chsel+0xa6>
			break;
		case 1:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL9;
			break;
		default:
			break;
 80041c8:	e051      	b.n	800426e <adc_chsel+0x13a>
			ADC1->CHSELR |= ADC_CHSELR_CHSEL8;
 80041ca:	4b2c      	ldr	r3, [pc, #176]	; (800427c <adc_chsel+0x148>)
 80041cc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041ce:	4b2b      	ldr	r3, [pc, #172]	; (800427c <adc_chsel+0x148>)
 80041d0:	2180      	movs	r1, #128	; 0x80
 80041d2:	0049      	lsls	r1, r1, #1
 80041d4:	430a      	orrs	r2, r1
 80041d6:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041d8:	e049      	b.n	800426e <adc_chsel+0x13a>
			ADC1->CHSELR |= ADC_CHSELR_CHSEL9;
 80041da:	4b28      	ldr	r3, [pc, #160]	; (800427c <adc_chsel+0x148>)
 80041dc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041de:	4b27      	ldr	r3, [pc, #156]	; (800427c <adc_chsel+0x148>)
 80041e0:	2180      	movs	r1, #128	; 0x80
 80041e2:	0089      	lsls	r1, r1, #2
 80041e4:	430a      	orrs	r2, r1
 80041e6:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 80041e8:	e041      	b.n	800426e <adc_chsel+0x13a>
		}
	} else if (port == GPIOC) {
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	4a25      	ldr	r2, [pc, #148]	; (8004284 <adc_chsel+0x150>)
 80041ee:	4293      	cmp	r3, r2
 80041f0:	d13a      	bne.n	8004268 <adc_chsel+0x134>
		switch (pin) {
 80041f2:	1cbb      	adds	r3, r7, #2
 80041f4:	881b      	ldrh	r3, [r3, #0]
 80041f6:	2b05      	cmp	r3, #5
 80041f8:	d838      	bhi.n	800426c <adc_chsel+0x138>
 80041fa:	009a      	lsls	r2, r3, #2
 80041fc:	4b22      	ldr	r3, [pc, #136]	; (8004288 <adc_chsel+0x154>)
 80041fe:	18d3      	adds	r3, r2, r3
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	469f      	mov	pc, r3
		case 0:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL10;
 8004204:	4b1d      	ldr	r3, [pc, #116]	; (800427c <adc_chsel+0x148>)
 8004206:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004208:	4b1c      	ldr	r3, [pc, #112]	; (800427c <adc_chsel+0x148>)
 800420a:	2180      	movs	r1, #128	; 0x80
 800420c:	00c9      	lsls	r1, r1, #3
 800420e:	430a      	orrs	r2, r1
 8004210:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004212:	e02c      	b.n	800426e <adc_chsel+0x13a>
		case 1:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL11;
 8004214:	4b19      	ldr	r3, [pc, #100]	; (800427c <adc_chsel+0x148>)
 8004216:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004218:	4b18      	ldr	r3, [pc, #96]	; (800427c <adc_chsel+0x148>)
 800421a:	2180      	movs	r1, #128	; 0x80
 800421c:	0109      	lsls	r1, r1, #4
 800421e:	430a      	orrs	r2, r1
 8004220:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004222:	e024      	b.n	800426e <adc_chsel+0x13a>
		case 2:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL12;
 8004224:	4b15      	ldr	r3, [pc, #84]	; (800427c <adc_chsel+0x148>)
 8004226:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004228:	4b14      	ldr	r3, [pc, #80]	; (800427c <adc_chsel+0x148>)
 800422a:	2180      	movs	r1, #128	; 0x80
 800422c:	0149      	lsls	r1, r1, #5
 800422e:	430a      	orrs	r2, r1
 8004230:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004232:	e01c      	b.n	800426e <adc_chsel+0x13a>
		case 3:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL13;
 8004234:	4b11      	ldr	r3, [pc, #68]	; (800427c <adc_chsel+0x148>)
 8004236:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004238:	4b10      	ldr	r3, [pc, #64]	; (800427c <adc_chsel+0x148>)
 800423a:	2180      	movs	r1, #128	; 0x80
 800423c:	0189      	lsls	r1, r1, #6
 800423e:	430a      	orrs	r2, r1
 8004240:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004242:	e014      	b.n	800426e <adc_chsel+0x13a>
		case 4:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL14;
 8004244:	4b0d      	ldr	r3, [pc, #52]	; (800427c <adc_chsel+0x148>)
 8004246:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004248:	4b0c      	ldr	r3, [pc, #48]	; (800427c <adc_chsel+0x148>)
 800424a:	2180      	movs	r1, #128	; 0x80
 800424c:	01c9      	lsls	r1, r1, #7
 800424e:	430a      	orrs	r2, r1
 8004250:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004252:	e00c      	b.n	800426e <adc_chsel+0x13a>
		case 5:
			ADC1->CHSELR |= ADC_CHSELR_CHSEL15;
 8004254:	4b09      	ldr	r3, [pc, #36]	; (800427c <adc_chsel+0x148>)
 8004256:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004258:	4b08      	ldr	r3, [pc, #32]	; (800427c <adc_chsel+0x148>)
 800425a:	2180      	movs	r1, #128	; 0x80
 800425c:	0209      	lsls	r1, r1, #8
 800425e:	430a      	orrs	r2, r1
 8004260:	629a      	str	r2, [r3, #40]	; 0x28
			break;
 8004262:	e004      	b.n	800426e <adc_chsel+0x13a>
			break;
 8004264:	46c0      	nop			; (mov r8, r8)
 8004266:	e002      	b.n	800426e <adc_chsel+0x13a>
		default:
			break;
		}
	}
 8004268:	46c0      	nop			; (mov r8, r8)
 800426a:	e000      	b.n	800426e <adc_chsel+0x13a>
			break;
 800426c:	46c0      	nop			; (mov r8, r8)
}
 800426e:	46c0      	nop			; (mov r8, r8)
 8004270:	46bd      	mov	sp, r7
 8004272:	b002      	add	sp, #8
 8004274:	bd80      	pop	{r7, pc}
 8004276:	46c0      	nop			; (mov r8, r8)
 8004278:	0800794c 	.word	0x0800794c
 800427c:	40012400 	.word	0x40012400
 8004280:	48000400 	.word	0x48000400
 8004284:	48000800 	.word	0x48000800
 8004288:	0800796c 	.word	0x0800796c

0800428c <USART_INIT>:

//*******************************| USART FUNCTIONS |*****************************//

void USART_INIT(USART_TypeDef *usart, GPIO_TypeDef *tx_port,
		GPIO_TypeDef *rx_port, uint32_t tx_pinNumber, uint32_t rx_pinNumber,
		uint32_t bd_rate) {
 800428c:	b590      	push	{r4, r7, lr}
 800428e:	b087      	sub	sp, #28
 8004290:	af02      	add	r7, sp, #8
 8004292:	60f8      	str	r0, [r7, #12]
 8004294:	60b9      	str	r1, [r7, #8]
 8004296:	607a      	str	r2, [r7, #4]
 8004298:	603b      	str	r3, [r7, #0]

	USART_CLK_EN(usart);
 800429a:	68fb      	ldr	r3, [r7, #12]
 800429c:	0018      	movs	r0, r3
 800429e:	f000 f819 	bl	80042d4 <USART_CLK_EN>

	USART_PIN_CONFIG(usart, tx_port, rx_port, tx_pinNumber, rx_pinNumber);
 80042a2:	683c      	ldr	r4, [r7, #0]
 80042a4:	687a      	ldr	r2, [r7, #4]
 80042a6:	68b9      	ldr	r1, [r7, #8]
 80042a8:	68f8      	ldr	r0, [r7, #12]
 80042aa:	6a3b      	ldr	r3, [r7, #32]
 80042ac:	9300      	str	r3, [sp, #0]
 80042ae:	0023      	movs	r3, r4
 80042b0:	f000 f852 	bl	8004358 <USART_PIN_CONFIG>

	USART_BDR_SEL(usart, bd_rate);
 80042b4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80042b6:	68fb      	ldr	r3, [r7, #12]
 80042b8:	0011      	movs	r1, r2
 80042ba:	0018      	movs	r0, r3
 80042bc:	f000 f960 	bl	8004580 <USART_BDR_SEL>

	usart->CR1 |= USART_CR1_RE | USART_CR1_TE | USART_CR1_UE;
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	220d      	movs	r2, #13
 80042c6:	431a      	orrs	r2, r3
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	601a      	str	r2, [r3, #0]

}
 80042cc:	46c0      	nop			; (mov r8, r8)
 80042ce:	46bd      	mov	sp, r7
 80042d0:	b005      	add	sp, #20
 80042d2:	bd90      	pop	{r4, r7, pc}

080042d4 <USART_CLK_EN>:
	if (IDLE_IT) {
		usart->CR1 |= USART_CR1_IDLEIE;
	}
}
// Initialize UART pins, Baudrate
void USART_CLK_EN(USART_TypeDef *usart) {
 80042d4:	b580      	push	{r7, lr}
 80042d6:	b082      	sub	sp, #8
 80042d8:	af00      	add	r7, sp, #0
 80042da:	6078      	str	r0, [r7, #4]
	if (usart == USART1) {
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	4a19      	ldr	r2, [pc, #100]	; (8004344 <USART_CLK_EN+0x70>)
 80042e0:	4293      	cmp	r3, r2
 80042e2:	d107      	bne.n	80042f4 <USART_CLK_EN+0x20>
		USART1_CLK_EN;
 80042e4:	4b18      	ldr	r3, [pc, #96]	; (8004348 <USART_CLK_EN+0x74>)
 80042e6:	69da      	ldr	r2, [r3, #28]
 80042e8:	4b17      	ldr	r3, [pc, #92]	; (8004348 <USART_CLK_EN+0x74>)
 80042ea:	2180      	movs	r1, #128	; 0x80
 80042ec:	01c9      	lsls	r1, r1, #7
 80042ee:	430a      	orrs	r2, r1
 80042f0:	61da      	str	r2, [r3, #28]
	} else if (usart == USART3) {
		USART3_CLK_EN;
	} else if (usart == USART4) {
		USART4_CLK_EN;
	}
}
 80042f2:	e022      	b.n	800433a <USART_CLK_EN+0x66>
	} else if (usart == USART2) {
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	4a15      	ldr	r2, [pc, #84]	; (800434c <USART_CLK_EN+0x78>)
 80042f8:	4293      	cmp	r3, r2
 80042fa:	d107      	bne.n	800430c <USART_CLK_EN+0x38>
		USART2_CLK_EN;
 80042fc:	4b12      	ldr	r3, [pc, #72]	; (8004348 <USART_CLK_EN+0x74>)
 80042fe:	69da      	ldr	r2, [r3, #28]
 8004300:	4b11      	ldr	r3, [pc, #68]	; (8004348 <USART_CLK_EN+0x74>)
 8004302:	2180      	movs	r1, #128	; 0x80
 8004304:	0289      	lsls	r1, r1, #10
 8004306:	430a      	orrs	r2, r1
 8004308:	61da      	str	r2, [r3, #28]
}
 800430a:	e016      	b.n	800433a <USART_CLK_EN+0x66>
	} else if (usart == USART3) {
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	4a10      	ldr	r2, [pc, #64]	; (8004350 <USART_CLK_EN+0x7c>)
 8004310:	4293      	cmp	r3, r2
 8004312:	d107      	bne.n	8004324 <USART_CLK_EN+0x50>
		USART3_CLK_EN;
 8004314:	4b0c      	ldr	r3, [pc, #48]	; (8004348 <USART_CLK_EN+0x74>)
 8004316:	69da      	ldr	r2, [r3, #28]
 8004318:	4b0b      	ldr	r3, [pc, #44]	; (8004348 <USART_CLK_EN+0x74>)
 800431a:	2180      	movs	r1, #128	; 0x80
 800431c:	02c9      	lsls	r1, r1, #11
 800431e:	430a      	orrs	r2, r1
 8004320:	61da      	str	r2, [r3, #28]
}
 8004322:	e00a      	b.n	800433a <USART_CLK_EN+0x66>
	} else if (usart == USART4) {
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	4a0b      	ldr	r2, [pc, #44]	; (8004354 <USART_CLK_EN+0x80>)
 8004328:	4293      	cmp	r3, r2
 800432a:	d106      	bne.n	800433a <USART_CLK_EN+0x66>
		USART4_CLK_EN;
 800432c:	4b06      	ldr	r3, [pc, #24]	; (8004348 <USART_CLK_EN+0x74>)
 800432e:	69da      	ldr	r2, [r3, #28]
 8004330:	4b05      	ldr	r3, [pc, #20]	; (8004348 <USART_CLK_EN+0x74>)
 8004332:	2180      	movs	r1, #128	; 0x80
 8004334:	0309      	lsls	r1, r1, #12
 8004336:	430a      	orrs	r2, r1
 8004338:	61da      	str	r2, [r3, #28]
}
 800433a:	46c0      	nop			; (mov r8, r8)
 800433c:	46bd      	mov	sp, r7
 800433e:	b002      	add	sp, #8
 8004340:	bd80      	pop	{r7, pc}
 8004342:	46c0      	nop			; (mov r8, r8)
 8004344:	40013800 	.word	0x40013800
 8004348:	40021000 	.word	0x40021000
 800434c:	40004400 	.word	0x40004400
 8004350:	40004800 	.word	0x40004800
 8004354:	40004c00 	.word	0x40004c00

08004358 <USART_PIN_CONFIG>:

void USART_PIN_CONFIG(USART_TypeDef *usart, GPIO_TypeDef *tx_port,
		GPIO_TypeDef *rx_port, uint32_t tx_pinNumber, uint32_t rx_pinNumber) {
 8004358:	b580      	push	{r7, lr}
 800435a:	b086      	sub	sp, #24
 800435c:	af02      	add	r7, sp, #8
 800435e:	60f8      	str	r0, [r7, #12]
 8004360:	60b9      	str	r1, [r7, #8]
 8004362:	607a      	str	r2, [r7, #4]
 8004364:	603b      	str	r3, [r7, #0]

	gpio_config(tx_port, tx_pinNumber, ALT_MODE, HIGH_SPEED, DI_PUPD, PHPL);
 8004366:	6839      	ldr	r1, [r7, #0]
 8004368:	68b8      	ldr	r0, [r7, #8]
 800436a:	2300      	movs	r3, #0
 800436c:	9301      	str	r3, [sp, #4]
 800436e:	2300      	movs	r3, #0
 8004370:	9300      	str	r3, [sp, #0]
 8004372:	2302      	movs	r3, #2
 8004374:	2202      	movs	r2, #2
 8004376:	f7ff fd9b 	bl	8003eb0 <gpio_config>
	gpio_config(rx_port, rx_pinNumber, ALT_MODE, HIGH_SPEED, DI_PUPD, PHPL);
 800437a:	69b9      	ldr	r1, [r7, #24]
 800437c:	6878      	ldr	r0, [r7, #4]
 800437e:	2300      	movs	r3, #0
 8004380:	9301      	str	r3, [sp, #4]
 8004382:	2300      	movs	r3, #0
 8004384:	9300      	str	r3, [sp, #0]
 8004386:	2302      	movs	r3, #2
 8004388:	2202      	movs	r2, #2
 800438a:	f7ff fd91 	bl	8003eb0 <gpio_config>

	if (usart == USART1) {
 800438e:	68fb      	ldr	r3, [r7, #12]
 8004390:	4a75      	ldr	r2, [pc, #468]	; (8004568 <USART_PIN_CONFIG+0x210>)
 8004392:	4293      	cmp	r3, r2
 8004394:	d13a      	bne.n	800440c <USART_PIN_CONFIG+0xb4>
		// TX
		if (tx_port == PORTA && tx_pinNumber == 9) {
 8004396:	68ba      	ldr	r2, [r7, #8]
 8004398:	2390      	movs	r3, #144	; 0x90
 800439a:	05db      	lsls	r3, r3, #23
 800439c:	429a      	cmp	r2, r3
 800439e:	d109      	bne.n	80043b4 <USART_PIN_CONFIG+0x5c>
 80043a0:	683b      	ldr	r3, [r7, #0]
 80043a2:	2b09      	cmp	r3, #9
 80043a4:	d106      	bne.n	80043b4 <USART_PIN_CONFIG+0x5c>
			gpio_altfn(tx_port, tx_pinNumber, USART1_TX_PA9);
 80043a6:	6839      	ldr	r1, [r7, #0]
 80043a8:	68bb      	ldr	r3, [r7, #8]
 80043aa:	2201      	movs	r2, #1
 80043ac:	0018      	movs	r0, r3
 80043ae:	f7ff fe48 	bl	8004042 <gpio_altfn>
 80043b2:	e00c      	b.n	80043ce <USART_PIN_CONFIG+0x76>
		} else if (tx_port == PORTB && tx_pinNumber == 6) {
 80043b4:	68bb      	ldr	r3, [r7, #8]
 80043b6:	4a6d      	ldr	r2, [pc, #436]	; (800456c <USART_PIN_CONFIG+0x214>)
 80043b8:	4293      	cmp	r3, r2
 80043ba:	d108      	bne.n	80043ce <USART_PIN_CONFIG+0x76>
 80043bc:	683b      	ldr	r3, [r7, #0]
 80043be:	2b06      	cmp	r3, #6
 80043c0:	d105      	bne.n	80043ce <USART_PIN_CONFIG+0x76>
			gpio_altfn(tx_port, tx_pinNumber, USART1_TX_PB6);
 80043c2:	6839      	ldr	r1, [r7, #0]
 80043c4:	68bb      	ldr	r3, [r7, #8]
 80043c6:	2200      	movs	r2, #0
 80043c8:	0018      	movs	r0, r3
 80043ca:	f7ff fe3a 	bl	8004042 <gpio_altfn>
		}

		// RX
		if (rx_port == PORTA && rx_pinNumber == 10) {
 80043ce:	687a      	ldr	r2, [r7, #4]
 80043d0:	2390      	movs	r3, #144	; 0x90
 80043d2:	05db      	lsls	r3, r3, #23
 80043d4:	429a      	cmp	r2, r3
 80043d6:	d109      	bne.n	80043ec <USART_PIN_CONFIG+0x94>
 80043d8:	69bb      	ldr	r3, [r7, #24]
 80043da:	2b0a      	cmp	r3, #10
 80043dc:	d106      	bne.n	80043ec <USART_PIN_CONFIG+0x94>
			gpio_altfn(rx_port, rx_pinNumber, USART1_RX_PA10);
 80043de:	69b9      	ldr	r1, [r7, #24]
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	2201      	movs	r2, #1
 80043e4:	0018      	movs	r0, r3
 80043e6:	f7ff fe2c 	bl	8004042 <gpio_altfn>
 80043ea:	e0b8      	b.n	800455e <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTB && rx_pinNumber == 7) {
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	4a5f      	ldr	r2, [pc, #380]	; (800456c <USART_PIN_CONFIG+0x214>)
 80043f0:	4293      	cmp	r3, r2
 80043f2:	d000      	beq.n	80043f6 <USART_PIN_CONFIG+0x9e>
 80043f4:	e0b3      	b.n	800455e <USART_PIN_CONFIG+0x206>
 80043f6:	69bb      	ldr	r3, [r7, #24]
 80043f8:	2b07      	cmp	r3, #7
 80043fa:	d000      	beq.n	80043fe <USART_PIN_CONFIG+0xa6>
 80043fc:	e0af      	b.n	800455e <USART_PIN_CONFIG+0x206>
			gpio_altfn(rx_port, rx_pinNumber, USART1_RX_PB7);
 80043fe:	69b9      	ldr	r1, [r7, #24]
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	2200      	movs	r2, #0
 8004404:	0018      	movs	r0, r3
 8004406:	f7ff fe1c 	bl	8004042 <gpio_altfn>
		}
	} else if (usart == USART4) {
		gpio_altfn(tx_port, tx_pinNumber, USART4_TX_PA0);
		gpio_altfn(rx_port, rx_pinNumber, USART4_RX_PA1);
	}
}
 800440a:	e0a8      	b.n	800455e <USART_PIN_CONFIG+0x206>
	} else if (usart == USART2) {
 800440c:	68fb      	ldr	r3, [r7, #12]
 800440e:	4a58      	ldr	r2, [pc, #352]	; (8004570 <USART_PIN_CONFIG+0x218>)
 8004410:	4293      	cmp	r3, r2
 8004412:	d13c      	bne.n	800448e <USART_PIN_CONFIG+0x136>
		if (tx_port == PORTA && tx_pinNumber == 2) {
 8004414:	68ba      	ldr	r2, [r7, #8]
 8004416:	2390      	movs	r3, #144	; 0x90
 8004418:	05db      	lsls	r3, r3, #23
 800441a:	429a      	cmp	r2, r3
 800441c:	d109      	bne.n	8004432 <USART_PIN_CONFIG+0xda>
 800441e:	683b      	ldr	r3, [r7, #0]
 8004420:	2b02      	cmp	r3, #2
 8004422:	d106      	bne.n	8004432 <USART_PIN_CONFIG+0xda>
			gpio_altfn(tx_port, tx_pinNumber, USART2_TX_PA2);
 8004424:	6839      	ldr	r1, [r7, #0]
 8004426:	68bb      	ldr	r3, [r7, #8]
 8004428:	2201      	movs	r2, #1
 800442a:	0018      	movs	r0, r3
 800442c:	f7ff fe09 	bl	8004042 <gpio_altfn>
 8004430:	e00d      	b.n	800444e <USART_PIN_CONFIG+0xf6>
		} else if (tx_port == PORTA && tx_pinNumber == 14) {
 8004432:	68ba      	ldr	r2, [r7, #8]
 8004434:	2390      	movs	r3, #144	; 0x90
 8004436:	05db      	lsls	r3, r3, #23
 8004438:	429a      	cmp	r2, r3
 800443a:	d108      	bne.n	800444e <USART_PIN_CONFIG+0xf6>
 800443c:	683b      	ldr	r3, [r7, #0]
 800443e:	2b0e      	cmp	r3, #14
 8004440:	d105      	bne.n	800444e <USART_PIN_CONFIG+0xf6>
			gpio_altfn(tx_port, tx_pinNumber, USART2_TX_PA14);
 8004442:	6839      	ldr	r1, [r7, #0]
 8004444:	68bb      	ldr	r3, [r7, #8]
 8004446:	2201      	movs	r2, #1
 8004448:	0018      	movs	r0, r3
 800444a:	f7ff fdfa 	bl	8004042 <gpio_altfn>
		if (rx_port == PORTA && rx_pinNumber == 3) {
 800444e:	687a      	ldr	r2, [r7, #4]
 8004450:	2390      	movs	r3, #144	; 0x90
 8004452:	05db      	lsls	r3, r3, #23
 8004454:	429a      	cmp	r2, r3
 8004456:	d109      	bne.n	800446c <USART_PIN_CONFIG+0x114>
 8004458:	69bb      	ldr	r3, [r7, #24]
 800445a:	2b03      	cmp	r3, #3
 800445c:	d106      	bne.n	800446c <USART_PIN_CONFIG+0x114>
			gpio_altfn(rx_port, rx_pinNumber, USART2_RX_PA3);
 800445e:	69b9      	ldr	r1, [r7, #24]
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	2201      	movs	r2, #1
 8004464:	0018      	movs	r0, r3
 8004466:	f7ff fdec 	bl	8004042 <gpio_altfn>
 800446a:	e078      	b.n	800455e <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTA && rx_pinNumber == 15) {
 800446c:	687a      	ldr	r2, [r7, #4]
 800446e:	2390      	movs	r3, #144	; 0x90
 8004470:	05db      	lsls	r3, r3, #23
 8004472:	429a      	cmp	r2, r3
 8004474:	d000      	beq.n	8004478 <USART_PIN_CONFIG+0x120>
 8004476:	e072      	b.n	800455e <USART_PIN_CONFIG+0x206>
 8004478:	69bb      	ldr	r3, [r7, #24]
 800447a:	2b0f      	cmp	r3, #15
 800447c:	d000      	beq.n	8004480 <USART_PIN_CONFIG+0x128>
 800447e:	e06e      	b.n	800455e <USART_PIN_CONFIG+0x206>
			gpio_altfn(rx_port, rx_pinNumber, USART2_RX_PA15);
 8004480:	69b9      	ldr	r1, [r7, #24]
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	2201      	movs	r2, #1
 8004486:	0018      	movs	r0, r3
 8004488:	f7ff fddb 	bl	8004042 <gpio_altfn>
}
 800448c:	e067      	b.n	800455e <USART_PIN_CONFIG+0x206>
	} else if (usart == USART3) {
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	4a38      	ldr	r2, [pc, #224]	; (8004574 <USART_PIN_CONFIG+0x21c>)
 8004492:	4293      	cmp	r3, r2
 8004494:	d152      	bne.n	800453c <USART_PIN_CONFIG+0x1e4>
		if (tx_port == PORTC && tx_pinNumber == 4) {
 8004496:	68bb      	ldr	r3, [r7, #8]
 8004498:	4a37      	ldr	r2, [pc, #220]	; (8004578 <USART_PIN_CONFIG+0x220>)
 800449a:	4293      	cmp	r3, r2
 800449c:	d109      	bne.n	80044b2 <USART_PIN_CONFIG+0x15a>
 800449e:	683b      	ldr	r3, [r7, #0]
 80044a0:	2b04      	cmp	r3, #4
 80044a2:	d106      	bne.n	80044b2 <USART_PIN_CONFIG+0x15a>
			gpio_altfn(tx_port, tx_pinNumber, USART3_TX_PC4);
 80044a4:	6839      	ldr	r1, [r7, #0]
 80044a6:	68bb      	ldr	r3, [r7, #8]
 80044a8:	2201      	movs	r2, #1
 80044aa:	0018      	movs	r0, r3
 80044ac:	f7ff fdc9 	bl	8004042 <gpio_altfn>
 80044b0:	e01a      	b.n	80044e8 <USART_PIN_CONFIG+0x190>
		} else if (tx_port == PORTB && tx_pinNumber == 10) {
 80044b2:	68bb      	ldr	r3, [r7, #8]
 80044b4:	4a2d      	ldr	r2, [pc, #180]	; (800456c <USART_PIN_CONFIG+0x214>)
 80044b6:	4293      	cmp	r3, r2
 80044b8:	d109      	bne.n	80044ce <USART_PIN_CONFIG+0x176>
 80044ba:	683b      	ldr	r3, [r7, #0]
 80044bc:	2b0a      	cmp	r3, #10
 80044be:	d106      	bne.n	80044ce <USART_PIN_CONFIG+0x176>
			gpio_altfn(tx_port, tx_pinNumber, USART3_TX_PB10);
 80044c0:	6839      	ldr	r1, [r7, #0]
 80044c2:	68bb      	ldr	r3, [r7, #8]
 80044c4:	2204      	movs	r2, #4
 80044c6:	0018      	movs	r0, r3
 80044c8:	f7ff fdbb 	bl	8004042 <gpio_altfn>
 80044cc:	e00c      	b.n	80044e8 <USART_PIN_CONFIG+0x190>
		} else if (tx_port == PORTC && tx_pinNumber == 10) {
 80044ce:	68bb      	ldr	r3, [r7, #8]
 80044d0:	4a29      	ldr	r2, [pc, #164]	; (8004578 <USART_PIN_CONFIG+0x220>)
 80044d2:	4293      	cmp	r3, r2
 80044d4:	d108      	bne.n	80044e8 <USART_PIN_CONFIG+0x190>
 80044d6:	683b      	ldr	r3, [r7, #0]
 80044d8:	2b0a      	cmp	r3, #10
 80044da:	d105      	bne.n	80044e8 <USART_PIN_CONFIG+0x190>
			gpio_altfn(tx_port, tx_pinNumber, USART3_TX_PC10);
 80044dc:	6839      	ldr	r1, [r7, #0]
 80044de:	68bb      	ldr	r3, [r7, #8]
 80044e0:	2201      	movs	r2, #1
 80044e2:	0018      	movs	r0, r3
 80044e4:	f7ff fdad 	bl	8004042 <gpio_altfn>
		if (rx_port == PORTC && rx_pinNumber == 5) {
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	4a23      	ldr	r2, [pc, #140]	; (8004578 <USART_PIN_CONFIG+0x220>)
 80044ec:	4293      	cmp	r3, r2
 80044ee:	d109      	bne.n	8004504 <USART_PIN_CONFIG+0x1ac>
 80044f0:	69bb      	ldr	r3, [r7, #24]
 80044f2:	2b05      	cmp	r3, #5
 80044f4:	d106      	bne.n	8004504 <USART_PIN_CONFIG+0x1ac>
			gpio_altfn(rx_port, rx_pinNumber, USART3_RX_PC5);
 80044f6:	69b9      	ldr	r1, [r7, #24]
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	2201      	movs	r2, #1
 80044fc:	0018      	movs	r0, r3
 80044fe:	f7ff fda0 	bl	8004042 <gpio_altfn>
 8004502:	e02c      	b.n	800455e <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTC && rx_pinNumber == 11) {
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	4a1c      	ldr	r2, [pc, #112]	; (8004578 <USART_PIN_CONFIG+0x220>)
 8004508:	4293      	cmp	r3, r2
 800450a:	d109      	bne.n	8004520 <USART_PIN_CONFIG+0x1c8>
 800450c:	69bb      	ldr	r3, [r7, #24]
 800450e:	2b0b      	cmp	r3, #11
 8004510:	d106      	bne.n	8004520 <USART_PIN_CONFIG+0x1c8>
			gpio_altfn(rx_port, rx_pinNumber, USART3_RX_PC11);
 8004512:	69b9      	ldr	r1, [r7, #24]
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	2201      	movs	r2, #1
 8004518:	0018      	movs	r0, r3
 800451a:	f7ff fd92 	bl	8004042 <gpio_altfn>
 800451e:	e01e      	b.n	800455e <USART_PIN_CONFIG+0x206>
		} else if (rx_port == PORTB && rx_pinNumber == 11) {
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	4a12      	ldr	r2, [pc, #72]	; (800456c <USART_PIN_CONFIG+0x214>)
 8004524:	4293      	cmp	r3, r2
 8004526:	d11a      	bne.n	800455e <USART_PIN_CONFIG+0x206>
 8004528:	69bb      	ldr	r3, [r7, #24]
 800452a:	2b0b      	cmp	r3, #11
 800452c:	d117      	bne.n	800455e <USART_PIN_CONFIG+0x206>
			gpio_altfn(rx_port, rx_pinNumber, USART3_RX_PB11);
 800452e:	69b9      	ldr	r1, [r7, #24]
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	2204      	movs	r2, #4
 8004534:	0018      	movs	r0, r3
 8004536:	f7ff fd84 	bl	8004042 <gpio_altfn>
}
 800453a:	e010      	b.n	800455e <USART_PIN_CONFIG+0x206>
	} else if (usart == USART4) {
 800453c:	68fb      	ldr	r3, [r7, #12]
 800453e:	4a0f      	ldr	r2, [pc, #60]	; (800457c <USART_PIN_CONFIG+0x224>)
 8004540:	4293      	cmp	r3, r2
 8004542:	d10c      	bne.n	800455e <USART_PIN_CONFIG+0x206>
		gpio_altfn(tx_port, tx_pinNumber, USART4_TX_PA0);
 8004544:	6839      	ldr	r1, [r7, #0]
 8004546:	68bb      	ldr	r3, [r7, #8]
 8004548:	2204      	movs	r2, #4
 800454a:	0018      	movs	r0, r3
 800454c:	f7ff fd79 	bl	8004042 <gpio_altfn>
		gpio_altfn(rx_port, rx_pinNumber, USART4_RX_PA1);
 8004550:	69b9      	ldr	r1, [r7, #24]
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	2204      	movs	r2, #4
 8004556:	0018      	movs	r0, r3
 8004558:	f7ff fd73 	bl	8004042 <gpio_altfn>
}
 800455c:	e7ff      	b.n	800455e <USART_PIN_CONFIG+0x206>
 800455e:	46c0      	nop			; (mov r8, r8)
 8004560:	46bd      	mov	sp, r7
 8004562:	b004      	add	sp, #16
 8004564:	bd80      	pop	{r7, pc}
 8004566:	46c0      	nop			; (mov r8, r8)
 8004568:	40013800 	.word	0x40013800
 800456c:	48000400 	.word	0x48000400
 8004570:	40004400 	.word	0x40004400
 8004574:	40004800 	.word	0x40004800
 8004578:	48000800 	.word	0x48000800
 800457c:	40004c00 	.word	0x40004c00

08004580 <USART_BDR_SEL>:

void USART_BDR_SEL(USART_TypeDef *usart, uint32_t bd_rate) {
 8004580:	b580      	push	{r7, lr}
 8004582:	b084      	sub	sp, #16
 8004584:	af00      	add	r7, sp, #0
 8004586:	6078      	str	r0, [r7, #4]
 8004588:	6039      	str	r1, [r7, #0]
//			USART_BDR_48_230400;
//		} else if (bd_rate == 460800) {
//			USART_BDR_48_460800;
//		}
//	}
	uint32_t baud = (uint32_t) (SystemCoreClock / bd_rate);
 800458a:	4b09      	ldr	r3, [pc, #36]	; (80045b0 <USART_BDR_SEL+0x30>)
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	6839      	ldr	r1, [r7, #0]
 8004590:	0018      	movs	r0, r3
 8004592:	f7fb fdd5 	bl	8000140 <__udivsi3>
 8004596:	0003      	movs	r3, r0
 8004598:	60fb      	str	r3, [r7, #12]
	usart->BRR |= baud;
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	68da      	ldr	r2, [r3, #12]
 800459e:	68fb      	ldr	r3, [r7, #12]
 80045a0:	431a      	orrs	r2, r3
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	60da      	str	r2, [r3, #12]
}
 80045a6:	46c0      	nop			; (mov r8, r8)
 80045a8:	46bd      	mov	sp, r7
 80045aa:	b004      	add	sp, #16
 80045ac:	bd80      	pop	{r7, pc}
 80045ae:	46c0      	nop			; (mov r8, r8)
 80045b0:	20000000 	.word	0x20000000

080045b4 <USART_WRITE>:

/* Write a character to USART1 */
void USART_WRITE(USART_TypeDef *usart, uint8_t *ch, uint32_t len) {
 80045b4:	b580      	push	{r7, lr}
 80045b6:	b086      	sub	sp, #24
 80045b8:	af00      	add	r7, sp, #0
 80045ba:	60f8      	str	r0, [r7, #12]
 80045bc:	60b9      	str	r1, [r7, #8]
 80045be:	607a      	str	r2, [r7, #4]
	for (uint8_t i = 0; i < len; i++) {
 80045c0:	2317      	movs	r3, #23
 80045c2:	18fb      	adds	r3, r7, r3
 80045c4:	2200      	movs	r2, #0
 80045c6:	701a      	strb	r2, [r3, #0]
 80045c8:	e01c      	b.n	8004604 <USART_WRITE+0x50>
		if (len == 1) {
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	2b01      	cmp	r3, #1
 80045ce:	d104      	bne.n	80045da <USART_WRITE+0x26>
			usart->TDR = ch;
 80045d0:	68bb      	ldr	r3, [r7, #8]
 80045d2:	b29a      	uxth	r2, r3
 80045d4:	68fb      	ldr	r3, [r7, #12]
 80045d6:	851a      	strh	r2, [r3, #40]	; 0x28
 80045d8:	e008      	b.n	80045ec <USART_WRITE+0x38>
		} else {
			usart->TDR = ch[i];
 80045da:	2317      	movs	r3, #23
 80045dc:	18fb      	adds	r3, r7, r3
 80045de:	781b      	ldrb	r3, [r3, #0]
 80045e0:	68ba      	ldr	r2, [r7, #8]
 80045e2:	18d3      	adds	r3, r2, r3
 80045e4:	781b      	ldrb	r3, [r3, #0]
 80045e6:	b29a      	uxth	r2, r3
 80045e8:	68fb      	ldr	r3, [r7, #12]
 80045ea:	851a      	strh	r2, [r3, #40]	; 0x28
		}
		while (!(usart->ISR & USART_ISR_TXE))
 80045ec:	46c0      	nop			; (mov r8, r8)
 80045ee:	68fb      	ldr	r3, [r7, #12]
 80045f0:	69db      	ldr	r3, [r3, #28]
 80045f2:	2280      	movs	r2, #128	; 0x80
 80045f4:	4013      	ands	r3, r2
 80045f6:	d0fa      	beq.n	80045ee <USART_WRITE+0x3a>
	for (uint8_t i = 0; i < len; i++) {
 80045f8:	2117      	movs	r1, #23
 80045fa:	187b      	adds	r3, r7, r1
 80045fc:	781a      	ldrb	r2, [r3, #0]
 80045fe:	187b      	adds	r3, r7, r1
 8004600:	3201      	adds	r2, #1
 8004602:	701a      	strb	r2, [r3, #0]
 8004604:	2317      	movs	r3, #23
 8004606:	18fb      	adds	r3, r7, r3
 8004608:	781b      	ldrb	r3, [r3, #0]
 800460a:	687a      	ldr	r2, [r7, #4]
 800460c:	429a      	cmp	r2, r3
 800460e:	d8dc      	bhi.n	80045ca <USART_WRITE+0x16>
			;
	}
}
 8004610:	46c0      	nop			; (mov r8, r8)
 8004612:	46c0      	nop			; (mov r8, r8)
 8004614:	46bd      	mov	sp, r7
 8004616:	b006      	add	sp, #24
 8004618:	bd80      	pop	{r7, pc}
	...

0800461c <RCC_CONFIG_48MHZ>:
}

//*******************************************************************************//

//*****************************| RCC CLOCK FUNCTION |****************************//
void RCC_CONFIG_48MHZ() {
 800461c:	b590      	push	{r4, r7, lr}
 800461e:	b091      	sub	sp, #68	; 0x44
 8004620:	af00      	add	r7, sp, #0
//	}
//
//	SystemCoreClockUpdate();
//	SysTick_Config(SystemCoreClock/1000);

	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8004622:	2410      	movs	r4, #16
 8004624:	193b      	adds	r3, r7, r4
 8004626:	0018      	movs	r0, r3
 8004628:	2330      	movs	r3, #48	; 0x30
 800462a:	001a      	movs	r2, r3
 800462c:	2100      	movs	r1, #0
 800462e:	f000 f873 	bl	8004718 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8004632:	003b      	movs	r3, r7
 8004634:	0018      	movs	r0, r3
 8004636:	2310      	movs	r3, #16
 8004638:	001a      	movs	r2, r3
 800463a:	2100      	movs	r1, #0
 800463c:	f000 f86c 	bl	8004718 <memset>

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8004640:	0021      	movs	r1, r4
 8004642:	187b      	adds	r3, r7, r1
 8004644:	2202      	movs	r2, #2
 8004646:	601a      	str	r2, [r3, #0]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8004648:	187b      	adds	r3, r7, r1
 800464a:	2201      	movs	r2, #1
 800464c:	60da      	str	r2, [r3, #12]
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800464e:	187b      	adds	r3, r7, r1
 8004650:	2210      	movs	r2, #16
 8004652:	611a      	str	r2, [r3, #16]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8004654:	187b      	adds	r3, r7, r1
 8004656:	2202      	movs	r2, #2
 8004658:	621a      	str	r2, [r3, #32]
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800465a:	187b      	adds	r3, r7, r1
 800465c:	2280      	movs	r2, #128	; 0x80
 800465e:	0212      	lsls	r2, r2, #8
 8004660:	625a      	str	r2, [r3, #36]	; 0x24
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 8004662:	187b      	adds	r3, r7, r1
 8004664:	2280      	movs	r2, #128	; 0x80
 8004666:	0352      	lsls	r2, r2, #13
 8004668:	629a      	str	r2, [r3, #40]	; 0x28
	RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 800466a:	187b      	adds	r3, r7, r1
 800466c:	2200      	movs	r2, #0
 800466e:	62da      	str	r2, [r3, #44]	; 0x2c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8004670:	187b      	adds	r3, r7, r1
 8004672:	0018      	movs	r0, r3
 8004674:	f7fe ff82 	bl	800357c <HAL_RCC_OscConfig>
 8004678:	1e03      	subs	r3, r0, #0
 800467a:	d003      	beq.n	8004684 <RCC_CONFIG_48MHZ+0x68>
		print("Error1 in clock\n\r");
 800467c:	4b0f      	ldr	r3, [pc, #60]	; (80046bc <RCC_CONFIG_48MHZ+0xa0>)
 800467e:	0018      	movs	r0, r3
 8004680:	f7ff fd02 	bl	8004088 <print>
	}
	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 8004684:	003b      	movs	r3, r7
 8004686:	2207      	movs	r2, #7
 8004688:	601a      	str	r2, [r3, #0]
			| RCC_CLOCKTYPE_PCLK1;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800468a:	003b      	movs	r3, r7
 800468c:	2202      	movs	r2, #2
 800468e:	605a      	str	r2, [r3, #4]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8004690:	003b      	movs	r3, r7
 8004692:	2200      	movs	r2, #0
 8004694:	609a      	str	r2, [r3, #8]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8004696:	003b      	movs	r3, r7
 8004698:	2200      	movs	r2, #0
 800469a:	60da      	str	r2, [r3, #12]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 800469c:	003b      	movs	r3, r7
 800469e:	2101      	movs	r1, #1
 80046a0:	0018      	movs	r0, r3
 80046a2:	f7ff fa89 	bl	8003bb8 <HAL_RCC_ClockConfig>
 80046a6:	1e03      	subs	r3, r0, #0
 80046a8:	d003      	beq.n	80046b2 <RCC_CONFIG_48MHZ+0x96>
		print("Error2 in clock\n\r");
 80046aa:	4b05      	ldr	r3, [pc, #20]	; (80046c0 <RCC_CONFIG_48MHZ+0xa4>)
 80046ac:	0018      	movs	r0, r3
 80046ae:	f7ff fceb 	bl	8004088 <print>
	}
}
 80046b2:	46c0      	nop			; (mov r8, r8)
 80046b4:	46bd      	mov	sp, r7
 80046b6:	b011      	add	sp, #68	; 0x44
 80046b8:	bd90      	pop	{r4, r7, pc}
 80046ba:	46c0      	nop			; (mov r8, r8)
 80046bc:	08007814 	.word	0x08007814
 80046c0:	08007828 	.word	0x08007828

080046c4 <__errno>:
 80046c4:	4b01      	ldr	r3, [pc, #4]	; (80046cc <__errno+0x8>)
 80046c6:	6818      	ldr	r0, [r3, #0]
 80046c8:	4770      	bx	lr
 80046ca:	46c0      	nop			; (mov r8, r8)
 80046cc:	2000004c 	.word	0x2000004c

080046d0 <__libc_init_array>:
 80046d0:	b570      	push	{r4, r5, r6, lr}
 80046d2:	2600      	movs	r6, #0
 80046d4:	4d0c      	ldr	r5, [pc, #48]	; (8004708 <__libc_init_array+0x38>)
 80046d6:	4c0d      	ldr	r4, [pc, #52]	; (800470c <__libc_init_array+0x3c>)
 80046d8:	1b64      	subs	r4, r4, r5
 80046da:	10a4      	asrs	r4, r4, #2
 80046dc:	42a6      	cmp	r6, r4
 80046de:	d109      	bne.n	80046f4 <__libc_init_array+0x24>
 80046e0:	2600      	movs	r6, #0
 80046e2:	f002 fff3 	bl	80076cc <_init>
 80046e6:	4d0a      	ldr	r5, [pc, #40]	; (8004710 <__libc_init_array+0x40>)
 80046e8:	4c0a      	ldr	r4, [pc, #40]	; (8004714 <__libc_init_array+0x44>)
 80046ea:	1b64      	subs	r4, r4, r5
 80046ec:	10a4      	asrs	r4, r4, #2
 80046ee:	42a6      	cmp	r6, r4
 80046f0:	d105      	bne.n	80046fe <__libc_init_array+0x2e>
 80046f2:	bd70      	pop	{r4, r5, r6, pc}
 80046f4:	00b3      	lsls	r3, r6, #2
 80046f6:	58eb      	ldr	r3, [r5, r3]
 80046f8:	4798      	blx	r3
 80046fa:	3601      	adds	r6, #1
 80046fc:	e7ee      	b.n	80046dc <__libc_init_array+0xc>
 80046fe:	00b3      	lsls	r3, r6, #2
 8004700:	58eb      	ldr	r3, [r5, r3]
 8004702:	4798      	blx	r3
 8004704:	3601      	adds	r6, #1
 8004706:	e7f2      	b.n	80046ee <__libc_init_array+0x1e>
 8004708:	08007d64 	.word	0x08007d64
 800470c:	08007d64 	.word	0x08007d64
 8004710:	08007d64 	.word	0x08007d64
 8004714:	08007d68 	.word	0x08007d68

08004718 <memset>:
 8004718:	0003      	movs	r3, r0
 800471a:	1882      	adds	r2, r0, r2
 800471c:	4293      	cmp	r3, r2
 800471e:	d100      	bne.n	8004722 <memset+0xa>
 8004720:	4770      	bx	lr
 8004722:	7019      	strb	r1, [r3, #0]
 8004724:	3301      	adds	r3, #1
 8004726:	e7f9      	b.n	800471c <memset+0x4>

08004728 <__cvt>:
 8004728:	b5f0      	push	{r4, r5, r6, r7, lr}
 800472a:	001e      	movs	r6, r3
 800472c:	2300      	movs	r3, #0
 800472e:	0014      	movs	r4, r2
 8004730:	b08b      	sub	sp, #44	; 0x2c
 8004732:	429e      	cmp	r6, r3
 8004734:	da04      	bge.n	8004740 <__cvt+0x18>
 8004736:	2180      	movs	r1, #128	; 0x80
 8004738:	0609      	lsls	r1, r1, #24
 800473a:	1873      	adds	r3, r6, r1
 800473c:	001e      	movs	r6, r3
 800473e:	232d      	movs	r3, #45	; 0x2d
 8004740:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004742:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004744:	7013      	strb	r3, [r2, #0]
 8004746:	2320      	movs	r3, #32
 8004748:	2203      	movs	r2, #3
 800474a:	439f      	bics	r7, r3
 800474c:	2f46      	cmp	r7, #70	; 0x46
 800474e:	d007      	beq.n	8004760 <__cvt+0x38>
 8004750:	003b      	movs	r3, r7
 8004752:	3b45      	subs	r3, #69	; 0x45
 8004754:	4259      	negs	r1, r3
 8004756:	414b      	adcs	r3, r1
 8004758:	9910      	ldr	r1, [sp, #64]	; 0x40
 800475a:	3a01      	subs	r2, #1
 800475c:	18cb      	adds	r3, r1, r3
 800475e:	9310      	str	r3, [sp, #64]	; 0x40
 8004760:	ab09      	add	r3, sp, #36	; 0x24
 8004762:	9304      	str	r3, [sp, #16]
 8004764:	ab08      	add	r3, sp, #32
 8004766:	9303      	str	r3, [sp, #12]
 8004768:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800476a:	9200      	str	r2, [sp, #0]
 800476c:	9302      	str	r3, [sp, #8]
 800476e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004770:	0022      	movs	r2, r4
 8004772:	9301      	str	r3, [sp, #4]
 8004774:	0033      	movs	r3, r6
 8004776:	f000 fd29 	bl	80051cc <_dtoa_r>
 800477a:	0005      	movs	r5, r0
 800477c:	2f47      	cmp	r7, #71	; 0x47
 800477e:	d102      	bne.n	8004786 <__cvt+0x5e>
 8004780:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004782:	07db      	lsls	r3, r3, #31
 8004784:	d528      	bpl.n	80047d8 <__cvt+0xb0>
 8004786:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004788:	18eb      	adds	r3, r5, r3
 800478a:	9307      	str	r3, [sp, #28]
 800478c:	2f46      	cmp	r7, #70	; 0x46
 800478e:	d114      	bne.n	80047ba <__cvt+0x92>
 8004790:	782b      	ldrb	r3, [r5, #0]
 8004792:	2b30      	cmp	r3, #48	; 0x30
 8004794:	d10c      	bne.n	80047b0 <__cvt+0x88>
 8004796:	2200      	movs	r2, #0
 8004798:	2300      	movs	r3, #0
 800479a:	0020      	movs	r0, r4
 800479c:	0031      	movs	r1, r6
 800479e:	f7fb fe55 	bl	800044c <__aeabi_dcmpeq>
 80047a2:	2800      	cmp	r0, #0
 80047a4:	d104      	bne.n	80047b0 <__cvt+0x88>
 80047a6:	2301      	movs	r3, #1
 80047a8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80047aa:	1a9b      	subs	r3, r3, r2
 80047ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80047ae:	6013      	str	r3, [r2, #0]
 80047b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80047b2:	9a07      	ldr	r2, [sp, #28]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	18d3      	adds	r3, r2, r3
 80047b8:	9307      	str	r3, [sp, #28]
 80047ba:	2200      	movs	r2, #0
 80047bc:	2300      	movs	r3, #0
 80047be:	0020      	movs	r0, r4
 80047c0:	0031      	movs	r1, r6
 80047c2:	f7fb fe43 	bl	800044c <__aeabi_dcmpeq>
 80047c6:	2800      	cmp	r0, #0
 80047c8:	d001      	beq.n	80047ce <__cvt+0xa6>
 80047ca:	9b07      	ldr	r3, [sp, #28]
 80047cc:	9309      	str	r3, [sp, #36]	; 0x24
 80047ce:	2230      	movs	r2, #48	; 0x30
 80047d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80047d2:	9907      	ldr	r1, [sp, #28]
 80047d4:	428b      	cmp	r3, r1
 80047d6:	d306      	bcc.n	80047e6 <__cvt+0xbe>
 80047d8:	0028      	movs	r0, r5
 80047da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80047dc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80047de:	1b5b      	subs	r3, r3, r5
 80047e0:	6013      	str	r3, [r2, #0]
 80047e2:	b00b      	add	sp, #44	; 0x2c
 80047e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80047e6:	1c59      	adds	r1, r3, #1
 80047e8:	9109      	str	r1, [sp, #36]	; 0x24
 80047ea:	701a      	strb	r2, [r3, #0]
 80047ec:	e7f0      	b.n	80047d0 <__cvt+0xa8>

080047ee <__exponent>:
 80047ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 80047f0:	1c83      	adds	r3, r0, #2
 80047f2:	b087      	sub	sp, #28
 80047f4:	9303      	str	r3, [sp, #12]
 80047f6:	0005      	movs	r5, r0
 80047f8:	000c      	movs	r4, r1
 80047fa:	232b      	movs	r3, #43	; 0x2b
 80047fc:	7002      	strb	r2, [r0, #0]
 80047fe:	2900      	cmp	r1, #0
 8004800:	da01      	bge.n	8004806 <__exponent+0x18>
 8004802:	424c      	negs	r4, r1
 8004804:	3302      	adds	r3, #2
 8004806:	706b      	strb	r3, [r5, #1]
 8004808:	2c09      	cmp	r4, #9
 800480a:	dd31      	ble.n	8004870 <__exponent+0x82>
 800480c:	270a      	movs	r7, #10
 800480e:	ab04      	add	r3, sp, #16
 8004810:	1dde      	adds	r6, r3, #7
 8004812:	0020      	movs	r0, r4
 8004814:	0039      	movs	r1, r7
 8004816:	9601      	str	r6, [sp, #4]
 8004818:	f7fb fe02 	bl	8000420 <__aeabi_idivmod>
 800481c:	3e01      	subs	r6, #1
 800481e:	3130      	adds	r1, #48	; 0x30
 8004820:	0020      	movs	r0, r4
 8004822:	7031      	strb	r1, [r6, #0]
 8004824:	0039      	movs	r1, r7
 8004826:	9402      	str	r4, [sp, #8]
 8004828:	f7fb fd14 	bl	8000254 <__divsi3>
 800482c:	9b02      	ldr	r3, [sp, #8]
 800482e:	0004      	movs	r4, r0
 8004830:	2b63      	cmp	r3, #99	; 0x63
 8004832:	dcee      	bgt.n	8004812 <__exponent+0x24>
 8004834:	9b01      	ldr	r3, [sp, #4]
 8004836:	3430      	adds	r4, #48	; 0x30
 8004838:	1e9a      	subs	r2, r3, #2
 800483a:	0013      	movs	r3, r2
 800483c:	9903      	ldr	r1, [sp, #12]
 800483e:	7014      	strb	r4, [r2, #0]
 8004840:	a804      	add	r0, sp, #16
 8004842:	3007      	adds	r0, #7
 8004844:	4298      	cmp	r0, r3
 8004846:	d80e      	bhi.n	8004866 <__exponent+0x78>
 8004848:	ab04      	add	r3, sp, #16
 800484a:	3307      	adds	r3, #7
 800484c:	2000      	movs	r0, #0
 800484e:	429a      	cmp	r2, r3
 8004850:	d804      	bhi.n	800485c <__exponent+0x6e>
 8004852:	ab04      	add	r3, sp, #16
 8004854:	3009      	adds	r0, #9
 8004856:	18c0      	adds	r0, r0, r3
 8004858:	9b01      	ldr	r3, [sp, #4]
 800485a:	1ac0      	subs	r0, r0, r3
 800485c:	9b03      	ldr	r3, [sp, #12]
 800485e:	1818      	adds	r0, r3, r0
 8004860:	1b40      	subs	r0, r0, r5
 8004862:	b007      	add	sp, #28
 8004864:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004866:	7818      	ldrb	r0, [r3, #0]
 8004868:	3301      	adds	r3, #1
 800486a:	7008      	strb	r0, [r1, #0]
 800486c:	3101      	adds	r1, #1
 800486e:	e7e7      	b.n	8004840 <__exponent+0x52>
 8004870:	2330      	movs	r3, #48	; 0x30
 8004872:	18e4      	adds	r4, r4, r3
 8004874:	70ab      	strb	r3, [r5, #2]
 8004876:	1d28      	adds	r0, r5, #4
 8004878:	70ec      	strb	r4, [r5, #3]
 800487a:	e7f1      	b.n	8004860 <__exponent+0x72>

0800487c <_printf_float>:
 800487c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800487e:	b095      	sub	sp, #84	; 0x54
 8004880:	000c      	movs	r4, r1
 8004882:	9209      	str	r2, [sp, #36]	; 0x24
 8004884:	001e      	movs	r6, r3
 8004886:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8004888:	0007      	movs	r7, r0
 800488a:	f001 fab9 	bl	8005e00 <_localeconv_r>
 800488e:	6803      	ldr	r3, [r0, #0]
 8004890:	0018      	movs	r0, r3
 8004892:	930c      	str	r3, [sp, #48]	; 0x30
 8004894:	f7fb fc38 	bl	8000108 <strlen>
 8004898:	2300      	movs	r3, #0
 800489a:	9312      	str	r3, [sp, #72]	; 0x48
 800489c:	7e23      	ldrb	r3, [r4, #24]
 800489e:	2207      	movs	r2, #7
 80048a0:	930a      	str	r3, [sp, #40]	; 0x28
 80048a2:	6823      	ldr	r3, [r4, #0]
 80048a4:	900e      	str	r0, [sp, #56]	; 0x38
 80048a6:	930d      	str	r3, [sp, #52]	; 0x34
 80048a8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80048aa:	682b      	ldr	r3, [r5, #0]
 80048ac:	05c9      	lsls	r1, r1, #23
 80048ae:	d547      	bpl.n	8004940 <_printf_float+0xc4>
 80048b0:	189b      	adds	r3, r3, r2
 80048b2:	4393      	bics	r3, r2
 80048b4:	001a      	movs	r2, r3
 80048b6:	3208      	adds	r2, #8
 80048b8:	602a      	str	r2, [r5, #0]
 80048ba:	681a      	ldr	r2, [r3, #0]
 80048bc:	685b      	ldr	r3, [r3, #4]
 80048be:	64a2      	str	r2, [r4, #72]	; 0x48
 80048c0:	64e3      	str	r3, [r4, #76]	; 0x4c
 80048c2:	2201      	movs	r2, #1
 80048c4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80048c6:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80048c8:	930b      	str	r3, [sp, #44]	; 0x2c
 80048ca:	006b      	lsls	r3, r5, #1
 80048cc:	085b      	lsrs	r3, r3, #1
 80048ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80048d0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80048d2:	4ba7      	ldr	r3, [pc, #668]	; (8004b70 <_printf_float+0x2f4>)
 80048d4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80048d6:	4252      	negs	r2, r2
 80048d8:	f7fd fda2 	bl	8002420 <__aeabi_dcmpun>
 80048dc:	2800      	cmp	r0, #0
 80048de:	d131      	bne.n	8004944 <_printf_float+0xc8>
 80048e0:	2201      	movs	r2, #1
 80048e2:	4ba3      	ldr	r3, [pc, #652]	; (8004b70 <_printf_float+0x2f4>)
 80048e4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80048e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80048e8:	4252      	negs	r2, r2
 80048ea:	f7fb fdbf 	bl	800046c <__aeabi_dcmple>
 80048ee:	2800      	cmp	r0, #0
 80048f0:	d128      	bne.n	8004944 <_printf_float+0xc8>
 80048f2:	2200      	movs	r2, #0
 80048f4:	2300      	movs	r3, #0
 80048f6:	0029      	movs	r1, r5
 80048f8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80048fa:	f7fb fdad 	bl	8000458 <__aeabi_dcmplt>
 80048fe:	2800      	cmp	r0, #0
 8004900:	d003      	beq.n	800490a <_printf_float+0x8e>
 8004902:	0023      	movs	r3, r4
 8004904:	222d      	movs	r2, #45	; 0x2d
 8004906:	3343      	adds	r3, #67	; 0x43
 8004908:	701a      	strb	r2, [r3, #0]
 800490a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800490c:	4d99      	ldr	r5, [pc, #612]	; (8004b74 <_printf_float+0x2f8>)
 800490e:	2b47      	cmp	r3, #71	; 0x47
 8004910:	d900      	bls.n	8004914 <_printf_float+0x98>
 8004912:	4d99      	ldr	r5, [pc, #612]	; (8004b78 <_printf_float+0x2fc>)
 8004914:	2303      	movs	r3, #3
 8004916:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004918:	6123      	str	r3, [r4, #16]
 800491a:	3301      	adds	r3, #1
 800491c:	439a      	bics	r2, r3
 800491e:	2300      	movs	r3, #0
 8004920:	6022      	str	r2, [r4, #0]
 8004922:	930b      	str	r3, [sp, #44]	; 0x2c
 8004924:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004926:	0021      	movs	r1, r4
 8004928:	0038      	movs	r0, r7
 800492a:	9600      	str	r6, [sp, #0]
 800492c:	aa13      	add	r2, sp, #76	; 0x4c
 800492e:	f000 f9e7 	bl	8004d00 <_printf_common>
 8004932:	1c43      	adds	r3, r0, #1
 8004934:	d000      	beq.n	8004938 <_printf_float+0xbc>
 8004936:	e0a2      	b.n	8004a7e <_printf_float+0x202>
 8004938:	2001      	movs	r0, #1
 800493a:	4240      	negs	r0, r0
 800493c:	b015      	add	sp, #84	; 0x54
 800493e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004940:	3307      	adds	r3, #7
 8004942:	e7b6      	b.n	80048b2 <_printf_float+0x36>
 8004944:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004946:	002b      	movs	r3, r5
 8004948:	0010      	movs	r0, r2
 800494a:	0029      	movs	r1, r5
 800494c:	f7fd fd68 	bl	8002420 <__aeabi_dcmpun>
 8004950:	2800      	cmp	r0, #0
 8004952:	d00b      	beq.n	800496c <_printf_float+0xf0>
 8004954:	2d00      	cmp	r5, #0
 8004956:	da03      	bge.n	8004960 <_printf_float+0xe4>
 8004958:	0023      	movs	r3, r4
 800495a:	222d      	movs	r2, #45	; 0x2d
 800495c:	3343      	adds	r3, #67	; 0x43
 800495e:	701a      	strb	r2, [r3, #0]
 8004960:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004962:	4d86      	ldr	r5, [pc, #536]	; (8004b7c <_printf_float+0x300>)
 8004964:	2b47      	cmp	r3, #71	; 0x47
 8004966:	d9d5      	bls.n	8004914 <_printf_float+0x98>
 8004968:	4d85      	ldr	r5, [pc, #532]	; (8004b80 <_printf_float+0x304>)
 800496a:	e7d3      	b.n	8004914 <_printf_float+0x98>
 800496c:	2220      	movs	r2, #32
 800496e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004970:	6863      	ldr	r3, [r4, #4]
 8004972:	4391      	bics	r1, r2
 8004974:	910f      	str	r1, [sp, #60]	; 0x3c
 8004976:	1c5a      	adds	r2, r3, #1
 8004978:	d149      	bne.n	8004a0e <_printf_float+0x192>
 800497a:	3307      	adds	r3, #7
 800497c:	6063      	str	r3, [r4, #4]
 800497e:	2380      	movs	r3, #128	; 0x80
 8004980:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004982:	00db      	lsls	r3, r3, #3
 8004984:	4313      	orrs	r3, r2
 8004986:	2200      	movs	r2, #0
 8004988:	9206      	str	r2, [sp, #24]
 800498a:	aa12      	add	r2, sp, #72	; 0x48
 800498c:	9205      	str	r2, [sp, #20]
 800498e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004990:	a908      	add	r1, sp, #32
 8004992:	9204      	str	r2, [sp, #16]
 8004994:	aa11      	add	r2, sp, #68	; 0x44
 8004996:	9203      	str	r2, [sp, #12]
 8004998:	2223      	movs	r2, #35	; 0x23
 800499a:	6023      	str	r3, [r4, #0]
 800499c:	9301      	str	r3, [sp, #4]
 800499e:	6863      	ldr	r3, [r4, #4]
 80049a0:	1852      	adds	r2, r2, r1
 80049a2:	9202      	str	r2, [sp, #8]
 80049a4:	9300      	str	r3, [sp, #0]
 80049a6:	0038      	movs	r0, r7
 80049a8:	002b      	movs	r3, r5
 80049aa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80049ac:	f7ff febc 	bl	8004728 <__cvt>
 80049b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80049b2:	0005      	movs	r5, r0
 80049b4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80049b6:	2b47      	cmp	r3, #71	; 0x47
 80049b8:	d108      	bne.n	80049cc <_printf_float+0x150>
 80049ba:	1ccb      	adds	r3, r1, #3
 80049bc:	db02      	blt.n	80049c4 <_printf_float+0x148>
 80049be:	6863      	ldr	r3, [r4, #4]
 80049c0:	4299      	cmp	r1, r3
 80049c2:	dd48      	ble.n	8004a56 <_printf_float+0x1da>
 80049c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80049c6:	3b02      	subs	r3, #2
 80049c8:	b2db      	uxtb	r3, r3
 80049ca:	930a      	str	r3, [sp, #40]	; 0x28
 80049cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80049ce:	2b65      	cmp	r3, #101	; 0x65
 80049d0:	d824      	bhi.n	8004a1c <_printf_float+0x1a0>
 80049d2:	0020      	movs	r0, r4
 80049d4:	001a      	movs	r2, r3
 80049d6:	3901      	subs	r1, #1
 80049d8:	3050      	adds	r0, #80	; 0x50
 80049da:	9111      	str	r1, [sp, #68]	; 0x44
 80049dc:	f7ff ff07 	bl	80047ee <__exponent>
 80049e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80049e2:	900b      	str	r0, [sp, #44]	; 0x2c
 80049e4:	1813      	adds	r3, r2, r0
 80049e6:	6123      	str	r3, [r4, #16]
 80049e8:	2a01      	cmp	r2, #1
 80049ea:	dc02      	bgt.n	80049f2 <_printf_float+0x176>
 80049ec:	6822      	ldr	r2, [r4, #0]
 80049ee:	07d2      	lsls	r2, r2, #31
 80049f0:	d501      	bpl.n	80049f6 <_printf_float+0x17a>
 80049f2:	3301      	adds	r3, #1
 80049f4:	6123      	str	r3, [r4, #16]
 80049f6:	2323      	movs	r3, #35	; 0x23
 80049f8:	aa08      	add	r2, sp, #32
 80049fa:	189b      	adds	r3, r3, r2
 80049fc:	781b      	ldrb	r3, [r3, #0]
 80049fe:	2b00      	cmp	r3, #0
 8004a00:	d100      	bne.n	8004a04 <_printf_float+0x188>
 8004a02:	e78f      	b.n	8004924 <_printf_float+0xa8>
 8004a04:	0023      	movs	r3, r4
 8004a06:	222d      	movs	r2, #45	; 0x2d
 8004a08:	3343      	adds	r3, #67	; 0x43
 8004a0a:	701a      	strb	r2, [r3, #0]
 8004a0c:	e78a      	b.n	8004924 <_printf_float+0xa8>
 8004a0e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004a10:	2a47      	cmp	r2, #71	; 0x47
 8004a12:	d1b4      	bne.n	800497e <_printf_float+0x102>
 8004a14:	2b00      	cmp	r3, #0
 8004a16:	d1b2      	bne.n	800497e <_printf_float+0x102>
 8004a18:	3301      	adds	r3, #1
 8004a1a:	e7af      	b.n	800497c <_printf_float+0x100>
 8004a1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a1e:	2b66      	cmp	r3, #102	; 0x66
 8004a20:	d11b      	bne.n	8004a5a <_printf_float+0x1de>
 8004a22:	6863      	ldr	r3, [r4, #4]
 8004a24:	2900      	cmp	r1, #0
 8004a26:	dd0d      	ble.n	8004a44 <_printf_float+0x1c8>
 8004a28:	6121      	str	r1, [r4, #16]
 8004a2a:	2b00      	cmp	r3, #0
 8004a2c:	d102      	bne.n	8004a34 <_printf_float+0x1b8>
 8004a2e:	6822      	ldr	r2, [r4, #0]
 8004a30:	07d2      	lsls	r2, r2, #31
 8004a32:	d502      	bpl.n	8004a3a <_printf_float+0x1be>
 8004a34:	3301      	adds	r3, #1
 8004a36:	1859      	adds	r1, r3, r1
 8004a38:	6121      	str	r1, [r4, #16]
 8004a3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004a3c:	65a3      	str	r3, [r4, #88]	; 0x58
 8004a3e:	2300      	movs	r3, #0
 8004a40:	930b      	str	r3, [sp, #44]	; 0x2c
 8004a42:	e7d8      	b.n	80049f6 <_printf_float+0x17a>
 8004a44:	2b00      	cmp	r3, #0
 8004a46:	d103      	bne.n	8004a50 <_printf_float+0x1d4>
 8004a48:	2201      	movs	r2, #1
 8004a4a:	6821      	ldr	r1, [r4, #0]
 8004a4c:	4211      	tst	r1, r2
 8004a4e:	d000      	beq.n	8004a52 <_printf_float+0x1d6>
 8004a50:	1c9a      	adds	r2, r3, #2
 8004a52:	6122      	str	r2, [r4, #16]
 8004a54:	e7f1      	b.n	8004a3a <_printf_float+0x1be>
 8004a56:	2367      	movs	r3, #103	; 0x67
 8004a58:	930a      	str	r3, [sp, #40]	; 0x28
 8004a5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004a5c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004a5e:	4293      	cmp	r3, r2
 8004a60:	db06      	blt.n	8004a70 <_printf_float+0x1f4>
 8004a62:	6822      	ldr	r2, [r4, #0]
 8004a64:	6123      	str	r3, [r4, #16]
 8004a66:	07d2      	lsls	r2, r2, #31
 8004a68:	d5e7      	bpl.n	8004a3a <_printf_float+0x1be>
 8004a6a:	3301      	adds	r3, #1
 8004a6c:	6123      	str	r3, [r4, #16]
 8004a6e:	e7e4      	b.n	8004a3a <_printf_float+0x1be>
 8004a70:	2101      	movs	r1, #1
 8004a72:	2b00      	cmp	r3, #0
 8004a74:	dc01      	bgt.n	8004a7a <_printf_float+0x1fe>
 8004a76:	1849      	adds	r1, r1, r1
 8004a78:	1ac9      	subs	r1, r1, r3
 8004a7a:	1852      	adds	r2, r2, r1
 8004a7c:	e7e9      	b.n	8004a52 <_printf_float+0x1d6>
 8004a7e:	6822      	ldr	r2, [r4, #0]
 8004a80:	0553      	lsls	r3, r2, #21
 8004a82:	d407      	bmi.n	8004a94 <_printf_float+0x218>
 8004a84:	6923      	ldr	r3, [r4, #16]
 8004a86:	002a      	movs	r2, r5
 8004a88:	0038      	movs	r0, r7
 8004a8a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004a8c:	47b0      	blx	r6
 8004a8e:	1c43      	adds	r3, r0, #1
 8004a90:	d128      	bne.n	8004ae4 <_printf_float+0x268>
 8004a92:	e751      	b.n	8004938 <_printf_float+0xbc>
 8004a94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a96:	2b65      	cmp	r3, #101	; 0x65
 8004a98:	d800      	bhi.n	8004a9c <_printf_float+0x220>
 8004a9a:	e0e1      	b.n	8004c60 <_printf_float+0x3e4>
 8004a9c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004a9e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8004aa0:	2200      	movs	r2, #0
 8004aa2:	2300      	movs	r3, #0
 8004aa4:	f7fb fcd2 	bl	800044c <__aeabi_dcmpeq>
 8004aa8:	2800      	cmp	r0, #0
 8004aaa:	d031      	beq.n	8004b10 <_printf_float+0x294>
 8004aac:	2301      	movs	r3, #1
 8004aae:	0038      	movs	r0, r7
 8004ab0:	4a34      	ldr	r2, [pc, #208]	; (8004b84 <_printf_float+0x308>)
 8004ab2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004ab4:	47b0      	blx	r6
 8004ab6:	1c43      	adds	r3, r0, #1
 8004ab8:	d100      	bne.n	8004abc <_printf_float+0x240>
 8004aba:	e73d      	b.n	8004938 <_printf_float+0xbc>
 8004abc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004abe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004ac0:	4293      	cmp	r3, r2
 8004ac2:	db02      	blt.n	8004aca <_printf_float+0x24e>
 8004ac4:	6823      	ldr	r3, [r4, #0]
 8004ac6:	07db      	lsls	r3, r3, #31
 8004ac8:	d50c      	bpl.n	8004ae4 <_printf_float+0x268>
 8004aca:	0038      	movs	r0, r7
 8004acc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004ace:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004ad0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004ad2:	47b0      	blx	r6
 8004ad4:	2500      	movs	r5, #0
 8004ad6:	1c43      	adds	r3, r0, #1
 8004ad8:	d100      	bne.n	8004adc <_printf_float+0x260>
 8004ada:	e72d      	b.n	8004938 <_printf_float+0xbc>
 8004adc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004ade:	3b01      	subs	r3, #1
 8004ae0:	42ab      	cmp	r3, r5
 8004ae2:	dc0a      	bgt.n	8004afa <_printf_float+0x27e>
 8004ae4:	6823      	ldr	r3, [r4, #0]
 8004ae6:	079b      	lsls	r3, r3, #30
 8004ae8:	d500      	bpl.n	8004aec <_printf_float+0x270>
 8004aea:	e106      	b.n	8004cfa <_printf_float+0x47e>
 8004aec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004aee:	68e0      	ldr	r0, [r4, #12]
 8004af0:	4298      	cmp	r0, r3
 8004af2:	db00      	blt.n	8004af6 <_printf_float+0x27a>
 8004af4:	e722      	b.n	800493c <_printf_float+0xc0>
 8004af6:	0018      	movs	r0, r3
 8004af8:	e720      	b.n	800493c <_printf_float+0xc0>
 8004afa:	0022      	movs	r2, r4
 8004afc:	2301      	movs	r3, #1
 8004afe:	0038      	movs	r0, r7
 8004b00:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b02:	321a      	adds	r2, #26
 8004b04:	47b0      	blx	r6
 8004b06:	1c43      	adds	r3, r0, #1
 8004b08:	d100      	bne.n	8004b0c <_printf_float+0x290>
 8004b0a:	e715      	b.n	8004938 <_printf_float+0xbc>
 8004b0c:	3501      	adds	r5, #1
 8004b0e:	e7e5      	b.n	8004adc <_printf_float+0x260>
 8004b10:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004b12:	2b00      	cmp	r3, #0
 8004b14:	dc38      	bgt.n	8004b88 <_printf_float+0x30c>
 8004b16:	2301      	movs	r3, #1
 8004b18:	0038      	movs	r0, r7
 8004b1a:	4a1a      	ldr	r2, [pc, #104]	; (8004b84 <_printf_float+0x308>)
 8004b1c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b1e:	47b0      	blx	r6
 8004b20:	1c43      	adds	r3, r0, #1
 8004b22:	d100      	bne.n	8004b26 <_printf_float+0x2aa>
 8004b24:	e708      	b.n	8004938 <_printf_float+0xbc>
 8004b26:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004b28:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004b2a:	4313      	orrs	r3, r2
 8004b2c:	d102      	bne.n	8004b34 <_printf_float+0x2b8>
 8004b2e:	6823      	ldr	r3, [r4, #0]
 8004b30:	07db      	lsls	r3, r3, #31
 8004b32:	d5d7      	bpl.n	8004ae4 <_printf_float+0x268>
 8004b34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004b36:	0038      	movs	r0, r7
 8004b38:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004b3a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b3c:	47b0      	blx	r6
 8004b3e:	1c43      	adds	r3, r0, #1
 8004b40:	d100      	bne.n	8004b44 <_printf_float+0x2c8>
 8004b42:	e6f9      	b.n	8004938 <_printf_float+0xbc>
 8004b44:	2300      	movs	r3, #0
 8004b46:	930a      	str	r3, [sp, #40]	; 0x28
 8004b48:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004b4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004b4c:	425b      	negs	r3, r3
 8004b4e:	4293      	cmp	r3, r2
 8004b50:	dc01      	bgt.n	8004b56 <_printf_float+0x2da>
 8004b52:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004b54:	e797      	b.n	8004a86 <_printf_float+0x20a>
 8004b56:	0022      	movs	r2, r4
 8004b58:	2301      	movs	r3, #1
 8004b5a:	0038      	movs	r0, r7
 8004b5c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004b5e:	321a      	adds	r2, #26
 8004b60:	47b0      	blx	r6
 8004b62:	1c43      	adds	r3, r0, #1
 8004b64:	d100      	bne.n	8004b68 <_printf_float+0x2ec>
 8004b66:	e6e7      	b.n	8004938 <_printf_float+0xbc>
 8004b68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b6a:	3301      	adds	r3, #1
 8004b6c:	e7eb      	b.n	8004b46 <_printf_float+0x2ca>
 8004b6e:	46c0      	nop			; (mov r8, r8)
 8004b70:	7fefffff 	.word	0x7fefffff
 8004b74:	08007988 	.word	0x08007988
 8004b78:	0800798c 	.word	0x0800798c
 8004b7c:	08007990 	.word	0x08007990
 8004b80:	08007994 	.word	0x08007994
 8004b84:	08007998 	.word	0x08007998
 8004b88:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004b8a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004b8c:	920a      	str	r2, [sp, #40]	; 0x28
 8004b8e:	429a      	cmp	r2, r3
 8004b90:	dd00      	ble.n	8004b94 <_printf_float+0x318>
 8004b92:	930a      	str	r3, [sp, #40]	; 0x28
 8004b94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	dc3c      	bgt.n	8004c14 <_printf_float+0x398>
 8004b9a:	2300      	movs	r3, #0
 8004b9c:	930d      	str	r3, [sp, #52]	; 0x34
 8004b9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004ba0:	43db      	mvns	r3, r3
 8004ba2:	17db      	asrs	r3, r3, #31
 8004ba4:	930f      	str	r3, [sp, #60]	; 0x3c
 8004ba6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004ba8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004baa:	930b      	str	r3, [sp, #44]	; 0x2c
 8004bac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004bae:	4013      	ands	r3, r2
 8004bb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004bb2:	1ad3      	subs	r3, r2, r3
 8004bb4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004bb6:	4293      	cmp	r3, r2
 8004bb8:	dc34      	bgt.n	8004c24 <_printf_float+0x3a8>
 8004bba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004bbc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004bbe:	4293      	cmp	r3, r2
 8004bc0:	db3d      	blt.n	8004c3e <_printf_float+0x3c2>
 8004bc2:	6823      	ldr	r3, [r4, #0]
 8004bc4:	07db      	lsls	r3, r3, #31
 8004bc6:	d43a      	bmi.n	8004c3e <_printf_float+0x3c2>
 8004bc8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004bca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004bcc:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004bce:	1ad3      	subs	r3, r2, r3
 8004bd0:	1a52      	subs	r2, r2, r1
 8004bd2:	920a      	str	r2, [sp, #40]	; 0x28
 8004bd4:	429a      	cmp	r2, r3
 8004bd6:	dd00      	ble.n	8004bda <_printf_float+0x35e>
 8004bd8:	930a      	str	r3, [sp, #40]	; 0x28
 8004bda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004bdc:	2b00      	cmp	r3, #0
 8004bde:	dc36      	bgt.n	8004c4e <_printf_float+0x3d2>
 8004be0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004be2:	2500      	movs	r5, #0
 8004be4:	43db      	mvns	r3, r3
 8004be6:	17db      	asrs	r3, r3, #31
 8004be8:	930b      	str	r3, [sp, #44]	; 0x2c
 8004bea:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004bec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004bee:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004bf0:	1a9b      	subs	r3, r3, r2
 8004bf2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004bf4:	400a      	ands	r2, r1
 8004bf6:	1a9b      	subs	r3, r3, r2
 8004bf8:	42ab      	cmp	r3, r5
 8004bfa:	dc00      	bgt.n	8004bfe <_printf_float+0x382>
 8004bfc:	e772      	b.n	8004ae4 <_printf_float+0x268>
 8004bfe:	0022      	movs	r2, r4
 8004c00:	2301      	movs	r3, #1
 8004c02:	0038      	movs	r0, r7
 8004c04:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c06:	321a      	adds	r2, #26
 8004c08:	47b0      	blx	r6
 8004c0a:	1c43      	adds	r3, r0, #1
 8004c0c:	d100      	bne.n	8004c10 <_printf_float+0x394>
 8004c0e:	e693      	b.n	8004938 <_printf_float+0xbc>
 8004c10:	3501      	adds	r5, #1
 8004c12:	e7ea      	b.n	8004bea <_printf_float+0x36e>
 8004c14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004c16:	002a      	movs	r2, r5
 8004c18:	0038      	movs	r0, r7
 8004c1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c1c:	47b0      	blx	r6
 8004c1e:	1c43      	adds	r3, r0, #1
 8004c20:	d1bb      	bne.n	8004b9a <_printf_float+0x31e>
 8004c22:	e689      	b.n	8004938 <_printf_float+0xbc>
 8004c24:	0022      	movs	r2, r4
 8004c26:	2301      	movs	r3, #1
 8004c28:	0038      	movs	r0, r7
 8004c2a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c2c:	321a      	adds	r2, #26
 8004c2e:	47b0      	blx	r6
 8004c30:	1c43      	adds	r3, r0, #1
 8004c32:	d100      	bne.n	8004c36 <_printf_float+0x3ba>
 8004c34:	e680      	b.n	8004938 <_printf_float+0xbc>
 8004c36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004c38:	3301      	adds	r3, #1
 8004c3a:	930d      	str	r3, [sp, #52]	; 0x34
 8004c3c:	e7b3      	b.n	8004ba6 <_printf_float+0x32a>
 8004c3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004c40:	0038      	movs	r0, r7
 8004c42:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004c44:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c46:	47b0      	blx	r6
 8004c48:	1c43      	adds	r3, r0, #1
 8004c4a:	d1bd      	bne.n	8004bc8 <_printf_float+0x34c>
 8004c4c:	e674      	b.n	8004938 <_printf_float+0xbc>
 8004c4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c50:	0038      	movs	r0, r7
 8004c52:	18ea      	adds	r2, r5, r3
 8004c54:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004c58:	47b0      	blx	r6
 8004c5a:	1c43      	adds	r3, r0, #1
 8004c5c:	d1c0      	bne.n	8004be0 <_printf_float+0x364>
 8004c5e:	e66b      	b.n	8004938 <_printf_float+0xbc>
 8004c60:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004c62:	2b01      	cmp	r3, #1
 8004c64:	dc02      	bgt.n	8004c6c <_printf_float+0x3f0>
 8004c66:	2301      	movs	r3, #1
 8004c68:	421a      	tst	r2, r3
 8004c6a:	d034      	beq.n	8004cd6 <_printf_float+0x45a>
 8004c6c:	2301      	movs	r3, #1
 8004c6e:	002a      	movs	r2, r5
 8004c70:	0038      	movs	r0, r7
 8004c72:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c74:	47b0      	blx	r6
 8004c76:	1c43      	adds	r3, r0, #1
 8004c78:	d100      	bne.n	8004c7c <_printf_float+0x400>
 8004c7a:	e65d      	b.n	8004938 <_printf_float+0xbc>
 8004c7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004c7e:	0038      	movs	r0, r7
 8004c80:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004c82:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c84:	47b0      	blx	r6
 8004c86:	1c43      	adds	r3, r0, #1
 8004c88:	d100      	bne.n	8004c8c <_printf_float+0x410>
 8004c8a:	e655      	b.n	8004938 <_printf_float+0xbc>
 8004c8c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004c8e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8004c90:	2200      	movs	r2, #0
 8004c92:	2300      	movs	r3, #0
 8004c94:	f7fb fbda 	bl	800044c <__aeabi_dcmpeq>
 8004c98:	2800      	cmp	r0, #0
 8004c9a:	d11a      	bne.n	8004cd2 <_printf_float+0x456>
 8004c9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004c9e:	1c6a      	adds	r2, r5, #1
 8004ca0:	3b01      	subs	r3, #1
 8004ca2:	0038      	movs	r0, r7
 8004ca4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004ca6:	47b0      	blx	r6
 8004ca8:	1c43      	adds	r3, r0, #1
 8004caa:	d10e      	bne.n	8004cca <_printf_float+0x44e>
 8004cac:	e644      	b.n	8004938 <_printf_float+0xbc>
 8004cae:	0022      	movs	r2, r4
 8004cb0:	2301      	movs	r3, #1
 8004cb2:	0038      	movs	r0, r7
 8004cb4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004cb6:	321a      	adds	r2, #26
 8004cb8:	47b0      	blx	r6
 8004cba:	1c43      	adds	r3, r0, #1
 8004cbc:	d100      	bne.n	8004cc0 <_printf_float+0x444>
 8004cbe:	e63b      	b.n	8004938 <_printf_float+0xbc>
 8004cc0:	3501      	adds	r5, #1
 8004cc2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004cc4:	3b01      	subs	r3, #1
 8004cc6:	42ab      	cmp	r3, r5
 8004cc8:	dcf1      	bgt.n	8004cae <_printf_float+0x432>
 8004cca:	0022      	movs	r2, r4
 8004ccc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004cce:	3250      	adds	r2, #80	; 0x50
 8004cd0:	e6da      	b.n	8004a88 <_printf_float+0x20c>
 8004cd2:	2500      	movs	r5, #0
 8004cd4:	e7f5      	b.n	8004cc2 <_printf_float+0x446>
 8004cd6:	002a      	movs	r2, r5
 8004cd8:	e7e3      	b.n	8004ca2 <_printf_float+0x426>
 8004cda:	0022      	movs	r2, r4
 8004cdc:	2301      	movs	r3, #1
 8004cde:	0038      	movs	r0, r7
 8004ce0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004ce2:	3219      	adds	r2, #25
 8004ce4:	47b0      	blx	r6
 8004ce6:	1c43      	adds	r3, r0, #1
 8004ce8:	d100      	bne.n	8004cec <_printf_float+0x470>
 8004cea:	e625      	b.n	8004938 <_printf_float+0xbc>
 8004cec:	3501      	adds	r5, #1
 8004cee:	68e3      	ldr	r3, [r4, #12]
 8004cf0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004cf2:	1a9b      	subs	r3, r3, r2
 8004cf4:	42ab      	cmp	r3, r5
 8004cf6:	dcf0      	bgt.n	8004cda <_printf_float+0x45e>
 8004cf8:	e6f8      	b.n	8004aec <_printf_float+0x270>
 8004cfa:	2500      	movs	r5, #0
 8004cfc:	e7f7      	b.n	8004cee <_printf_float+0x472>
 8004cfe:	46c0      	nop			; (mov r8, r8)

08004d00 <_printf_common>:
 8004d00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004d02:	0015      	movs	r5, r2
 8004d04:	9301      	str	r3, [sp, #4]
 8004d06:	688a      	ldr	r2, [r1, #8]
 8004d08:	690b      	ldr	r3, [r1, #16]
 8004d0a:	000c      	movs	r4, r1
 8004d0c:	9000      	str	r0, [sp, #0]
 8004d0e:	4293      	cmp	r3, r2
 8004d10:	da00      	bge.n	8004d14 <_printf_common+0x14>
 8004d12:	0013      	movs	r3, r2
 8004d14:	0022      	movs	r2, r4
 8004d16:	602b      	str	r3, [r5, #0]
 8004d18:	3243      	adds	r2, #67	; 0x43
 8004d1a:	7812      	ldrb	r2, [r2, #0]
 8004d1c:	2a00      	cmp	r2, #0
 8004d1e:	d001      	beq.n	8004d24 <_printf_common+0x24>
 8004d20:	3301      	adds	r3, #1
 8004d22:	602b      	str	r3, [r5, #0]
 8004d24:	6823      	ldr	r3, [r4, #0]
 8004d26:	069b      	lsls	r3, r3, #26
 8004d28:	d502      	bpl.n	8004d30 <_printf_common+0x30>
 8004d2a:	682b      	ldr	r3, [r5, #0]
 8004d2c:	3302      	adds	r3, #2
 8004d2e:	602b      	str	r3, [r5, #0]
 8004d30:	6822      	ldr	r2, [r4, #0]
 8004d32:	2306      	movs	r3, #6
 8004d34:	0017      	movs	r7, r2
 8004d36:	401f      	ands	r7, r3
 8004d38:	421a      	tst	r2, r3
 8004d3a:	d027      	beq.n	8004d8c <_printf_common+0x8c>
 8004d3c:	0023      	movs	r3, r4
 8004d3e:	3343      	adds	r3, #67	; 0x43
 8004d40:	781b      	ldrb	r3, [r3, #0]
 8004d42:	1e5a      	subs	r2, r3, #1
 8004d44:	4193      	sbcs	r3, r2
 8004d46:	6822      	ldr	r2, [r4, #0]
 8004d48:	0692      	lsls	r2, r2, #26
 8004d4a:	d430      	bmi.n	8004dae <_printf_common+0xae>
 8004d4c:	0022      	movs	r2, r4
 8004d4e:	9901      	ldr	r1, [sp, #4]
 8004d50:	9800      	ldr	r0, [sp, #0]
 8004d52:	9e08      	ldr	r6, [sp, #32]
 8004d54:	3243      	adds	r2, #67	; 0x43
 8004d56:	47b0      	blx	r6
 8004d58:	1c43      	adds	r3, r0, #1
 8004d5a:	d025      	beq.n	8004da8 <_printf_common+0xa8>
 8004d5c:	2306      	movs	r3, #6
 8004d5e:	6820      	ldr	r0, [r4, #0]
 8004d60:	682a      	ldr	r2, [r5, #0]
 8004d62:	68e1      	ldr	r1, [r4, #12]
 8004d64:	2500      	movs	r5, #0
 8004d66:	4003      	ands	r3, r0
 8004d68:	2b04      	cmp	r3, #4
 8004d6a:	d103      	bne.n	8004d74 <_printf_common+0x74>
 8004d6c:	1a8d      	subs	r5, r1, r2
 8004d6e:	43eb      	mvns	r3, r5
 8004d70:	17db      	asrs	r3, r3, #31
 8004d72:	401d      	ands	r5, r3
 8004d74:	68a3      	ldr	r3, [r4, #8]
 8004d76:	6922      	ldr	r2, [r4, #16]
 8004d78:	4293      	cmp	r3, r2
 8004d7a:	dd01      	ble.n	8004d80 <_printf_common+0x80>
 8004d7c:	1a9b      	subs	r3, r3, r2
 8004d7e:	18ed      	adds	r5, r5, r3
 8004d80:	2700      	movs	r7, #0
 8004d82:	42bd      	cmp	r5, r7
 8004d84:	d120      	bne.n	8004dc8 <_printf_common+0xc8>
 8004d86:	2000      	movs	r0, #0
 8004d88:	e010      	b.n	8004dac <_printf_common+0xac>
 8004d8a:	3701      	adds	r7, #1
 8004d8c:	68e3      	ldr	r3, [r4, #12]
 8004d8e:	682a      	ldr	r2, [r5, #0]
 8004d90:	1a9b      	subs	r3, r3, r2
 8004d92:	42bb      	cmp	r3, r7
 8004d94:	ddd2      	ble.n	8004d3c <_printf_common+0x3c>
 8004d96:	0022      	movs	r2, r4
 8004d98:	2301      	movs	r3, #1
 8004d9a:	9901      	ldr	r1, [sp, #4]
 8004d9c:	9800      	ldr	r0, [sp, #0]
 8004d9e:	9e08      	ldr	r6, [sp, #32]
 8004da0:	3219      	adds	r2, #25
 8004da2:	47b0      	blx	r6
 8004da4:	1c43      	adds	r3, r0, #1
 8004da6:	d1f0      	bne.n	8004d8a <_printf_common+0x8a>
 8004da8:	2001      	movs	r0, #1
 8004daa:	4240      	negs	r0, r0
 8004dac:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004dae:	2030      	movs	r0, #48	; 0x30
 8004db0:	18e1      	adds	r1, r4, r3
 8004db2:	3143      	adds	r1, #67	; 0x43
 8004db4:	7008      	strb	r0, [r1, #0]
 8004db6:	0021      	movs	r1, r4
 8004db8:	1c5a      	adds	r2, r3, #1
 8004dba:	3145      	adds	r1, #69	; 0x45
 8004dbc:	7809      	ldrb	r1, [r1, #0]
 8004dbe:	18a2      	adds	r2, r4, r2
 8004dc0:	3243      	adds	r2, #67	; 0x43
 8004dc2:	3302      	adds	r3, #2
 8004dc4:	7011      	strb	r1, [r2, #0]
 8004dc6:	e7c1      	b.n	8004d4c <_printf_common+0x4c>
 8004dc8:	0022      	movs	r2, r4
 8004dca:	2301      	movs	r3, #1
 8004dcc:	9901      	ldr	r1, [sp, #4]
 8004dce:	9800      	ldr	r0, [sp, #0]
 8004dd0:	9e08      	ldr	r6, [sp, #32]
 8004dd2:	321a      	adds	r2, #26
 8004dd4:	47b0      	blx	r6
 8004dd6:	1c43      	adds	r3, r0, #1
 8004dd8:	d0e6      	beq.n	8004da8 <_printf_common+0xa8>
 8004dda:	3701      	adds	r7, #1
 8004ddc:	e7d1      	b.n	8004d82 <_printf_common+0x82>
	...

08004de0 <_printf_i>:
 8004de0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004de2:	b08b      	sub	sp, #44	; 0x2c
 8004de4:	9206      	str	r2, [sp, #24]
 8004de6:	000a      	movs	r2, r1
 8004de8:	3243      	adds	r2, #67	; 0x43
 8004dea:	9307      	str	r3, [sp, #28]
 8004dec:	9005      	str	r0, [sp, #20]
 8004dee:	9204      	str	r2, [sp, #16]
 8004df0:	7e0a      	ldrb	r2, [r1, #24]
 8004df2:	000c      	movs	r4, r1
 8004df4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004df6:	2a78      	cmp	r2, #120	; 0x78
 8004df8:	d807      	bhi.n	8004e0a <_printf_i+0x2a>
 8004dfa:	2a62      	cmp	r2, #98	; 0x62
 8004dfc:	d809      	bhi.n	8004e12 <_printf_i+0x32>
 8004dfe:	2a00      	cmp	r2, #0
 8004e00:	d100      	bne.n	8004e04 <_printf_i+0x24>
 8004e02:	e0c1      	b.n	8004f88 <_printf_i+0x1a8>
 8004e04:	2a58      	cmp	r2, #88	; 0x58
 8004e06:	d100      	bne.n	8004e0a <_printf_i+0x2a>
 8004e08:	e08c      	b.n	8004f24 <_printf_i+0x144>
 8004e0a:	0026      	movs	r6, r4
 8004e0c:	3642      	adds	r6, #66	; 0x42
 8004e0e:	7032      	strb	r2, [r6, #0]
 8004e10:	e022      	b.n	8004e58 <_printf_i+0x78>
 8004e12:	0010      	movs	r0, r2
 8004e14:	3863      	subs	r0, #99	; 0x63
 8004e16:	2815      	cmp	r0, #21
 8004e18:	d8f7      	bhi.n	8004e0a <_printf_i+0x2a>
 8004e1a:	f7fb f987 	bl	800012c <__gnu_thumb1_case_shi>
 8004e1e:	0016      	.short	0x0016
 8004e20:	fff6001f 	.word	0xfff6001f
 8004e24:	fff6fff6 	.word	0xfff6fff6
 8004e28:	001ffff6 	.word	0x001ffff6
 8004e2c:	fff6fff6 	.word	0xfff6fff6
 8004e30:	fff6fff6 	.word	0xfff6fff6
 8004e34:	003600a8 	.word	0x003600a8
 8004e38:	fff6009a 	.word	0xfff6009a
 8004e3c:	00b9fff6 	.word	0x00b9fff6
 8004e40:	0036fff6 	.word	0x0036fff6
 8004e44:	fff6fff6 	.word	0xfff6fff6
 8004e48:	009e      	.short	0x009e
 8004e4a:	0026      	movs	r6, r4
 8004e4c:	681a      	ldr	r2, [r3, #0]
 8004e4e:	3642      	adds	r6, #66	; 0x42
 8004e50:	1d11      	adds	r1, r2, #4
 8004e52:	6019      	str	r1, [r3, #0]
 8004e54:	6813      	ldr	r3, [r2, #0]
 8004e56:	7033      	strb	r3, [r6, #0]
 8004e58:	2301      	movs	r3, #1
 8004e5a:	e0a7      	b.n	8004fac <_printf_i+0x1cc>
 8004e5c:	6808      	ldr	r0, [r1, #0]
 8004e5e:	6819      	ldr	r1, [r3, #0]
 8004e60:	1d0a      	adds	r2, r1, #4
 8004e62:	0605      	lsls	r5, r0, #24
 8004e64:	d50b      	bpl.n	8004e7e <_printf_i+0x9e>
 8004e66:	680d      	ldr	r5, [r1, #0]
 8004e68:	601a      	str	r2, [r3, #0]
 8004e6a:	2d00      	cmp	r5, #0
 8004e6c:	da03      	bge.n	8004e76 <_printf_i+0x96>
 8004e6e:	232d      	movs	r3, #45	; 0x2d
 8004e70:	9a04      	ldr	r2, [sp, #16]
 8004e72:	426d      	negs	r5, r5
 8004e74:	7013      	strb	r3, [r2, #0]
 8004e76:	4b61      	ldr	r3, [pc, #388]	; (8004ffc <_printf_i+0x21c>)
 8004e78:	270a      	movs	r7, #10
 8004e7a:	9303      	str	r3, [sp, #12]
 8004e7c:	e01b      	b.n	8004eb6 <_printf_i+0xd6>
 8004e7e:	680d      	ldr	r5, [r1, #0]
 8004e80:	601a      	str	r2, [r3, #0]
 8004e82:	0641      	lsls	r1, r0, #25
 8004e84:	d5f1      	bpl.n	8004e6a <_printf_i+0x8a>
 8004e86:	b22d      	sxth	r5, r5
 8004e88:	e7ef      	b.n	8004e6a <_printf_i+0x8a>
 8004e8a:	680d      	ldr	r5, [r1, #0]
 8004e8c:	6819      	ldr	r1, [r3, #0]
 8004e8e:	1d08      	adds	r0, r1, #4
 8004e90:	6018      	str	r0, [r3, #0]
 8004e92:	062e      	lsls	r6, r5, #24
 8004e94:	d501      	bpl.n	8004e9a <_printf_i+0xba>
 8004e96:	680d      	ldr	r5, [r1, #0]
 8004e98:	e003      	b.n	8004ea2 <_printf_i+0xc2>
 8004e9a:	066d      	lsls	r5, r5, #25
 8004e9c:	d5fb      	bpl.n	8004e96 <_printf_i+0xb6>
 8004e9e:	680d      	ldr	r5, [r1, #0]
 8004ea0:	b2ad      	uxth	r5, r5
 8004ea2:	4b56      	ldr	r3, [pc, #344]	; (8004ffc <_printf_i+0x21c>)
 8004ea4:	2708      	movs	r7, #8
 8004ea6:	9303      	str	r3, [sp, #12]
 8004ea8:	2a6f      	cmp	r2, #111	; 0x6f
 8004eaa:	d000      	beq.n	8004eae <_printf_i+0xce>
 8004eac:	3702      	adds	r7, #2
 8004eae:	0023      	movs	r3, r4
 8004eb0:	2200      	movs	r2, #0
 8004eb2:	3343      	adds	r3, #67	; 0x43
 8004eb4:	701a      	strb	r2, [r3, #0]
 8004eb6:	6863      	ldr	r3, [r4, #4]
 8004eb8:	60a3      	str	r3, [r4, #8]
 8004eba:	2b00      	cmp	r3, #0
 8004ebc:	db03      	blt.n	8004ec6 <_printf_i+0xe6>
 8004ebe:	2204      	movs	r2, #4
 8004ec0:	6821      	ldr	r1, [r4, #0]
 8004ec2:	4391      	bics	r1, r2
 8004ec4:	6021      	str	r1, [r4, #0]
 8004ec6:	2d00      	cmp	r5, #0
 8004ec8:	d102      	bne.n	8004ed0 <_printf_i+0xf0>
 8004eca:	9e04      	ldr	r6, [sp, #16]
 8004ecc:	2b00      	cmp	r3, #0
 8004ece:	d00c      	beq.n	8004eea <_printf_i+0x10a>
 8004ed0:	9e04      	ldr	r6, [sp, #16]
 8004ed2:	0028      	movs	r0, r5
 8004ed4:	0039      	movs	r1, r7
 8004ed6:	f7fb f9b9 	bl	800024c <__aeabi_uidivmod>
 8004eda:	9b03      	ldr	r3, [sp, #12]
 8004edc:	3e01      	subs	r6, #1
 8004ede:	5c5b      	ldrb	r3, [r3, r1]
 8004ee0:	7033      	strb	r3, [r6, #0]
 8004ee2:	002b      	movs	r3, r5
 8004ee4:	0005      	movs	r5, r0
 8004ee6:	429f      	cmp	r7, r3
 8004ee8:	d9f3      	bls.n	8004ed2 <_printf_i+0xf2>
 8004eea:	2f08      	cmp	r7, #8
 8004eec:	d109      	bne.n	8004f02 <_printf_i+0x122>
 8004eee:	6823      	ldr	r3, [r4, #0]
 8004ef0:	07db      	lsls	r3, r3, #31
 8004ef2:	d506      	bpl.n	8004f02 <_printf_i+0x122>
 8004ef4:	6863      	ldr	r3, [r4, #4]
 8004ef6:	6922      	ldr	r2, [r4, #16]
 8004ef8:	4293      	cmp	r3, r2
 8004efa:	dc02      	bgt.n	8004f02 <_printf_i+0x122>
 8004efc:	2330      	movs	r3, #48	; 0x30
 8004efe:	3e01      	subs	r6, #1
 8004f00:	7033      	strb	r3, [r6, #0]
 8004f02:	9b04      	ldr	r3, [sp, #16]
 8004f04:	1b9b      	subs	r3, r3, r6
 8004f06:	6123      	str	r3, [r4, #16]
 8004f08:	9b07      	ldr	r3, [sp, #28]
 8004f0a:	0021      	movs	r1, r4
 8004f0c:	9300      	str	r3, [sp, #0]
 8004f0e:	9805      	ldr	r0, [sp, #20]
 8004f10:	9b06      	ldr	r3, [sp, #24]
 8004f12:	aa09      	add	r2, sp, #36	; 0x24
 8004f14:	f7ff fef4 	bl	8004d00 <_printf_common>
 8004f18:	1c43      	adds	r3, r0, #1
 8004f1a:	d14c      	bne.n	8004fb6 <_printf_i+0x1d6>
 8004f1c:	2001      	movs	r0, #1
 8004f1e:	4240      	negs	r0, r0
 8004f20:	b00b      	add	sp, #44	; 0x2c
 8004f22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004f24:	3145      	adds	r1, #69	; 0x45
 8004f26:	700a      	strb	r2, [r1, #0]
 8004f28:	4a34      	ldr	r2, [pc, #208]	; (8004ffc <_printf_i+0x21c>)
 8004f2a:	9203      	str	r2, [sp, #12]
 8004f2c:	681a      	ldr	r2, [r3, #0]
 8004f2e:	6821      	ldr	r1, [r4, #0]
 8004f30:	ca20      	ldmia	r2!, {r5}
 8004f32:	601a      	str	r2, [r3, #0]
 8004f34:	0608      	lsls	r0, r1, #24
 8004f36:	d516      	bpl.n	8004f66 <_printf_i+0x186>
 8004f38:	07cb      	lsls	r3, r1, #31
 8004f3a:	d502      	bpl.n	8004f42 <_printf_i+0x162>
 8004f3c:	2320      	movs	r3, #32
 8004f3e:	4319      	orrs	r1, r3
 8004f40:	6021      	str	r1, [r4, #0]
 8004f42:	2710      	movs	r7, #16
 8004f44:	2d00      	cmp	r5, #0
 8004f46:	d1b2      	bne.n	8004eae <_printf_i+0xce>
 8004f48:	2320      	movs	r3, #32
 8004f4a:	6822      	ldr	r2, [r4, #0]
 8004f4c:	439a      	bics	r2, r3
 8004f4e:	6022      	str	r2, [r4, #0]
 8004f50:	e7ad      	b.n	8004eae <_printf_i+0xce>
 8004f52:	2220      	movs	r2, #32
 8004f54:	6809      	ldr	r1, [r1, #0]
 8004f56:	430a      	orrs	r2, r1
 8004f58:	6022      	str	r2, [r4, #0]
 8004f5a:	0022      	movs	r2, r4
 8004f5c:	2178      	movs	r1, #120	; 0x78
 8004f5e:	3245      	adds	r2, #69	; 0x45
 8004f60:	7011      	strb	r1, [r2, #0]
 8004f62:	4a27      	ldr	r2, [pc, #156]	; (8005000 <_printf_i+0x220>)
 8004f64:	e7e1      	b.n	8004f2a <_printf_i+0x14a>
 8004f66:	0648      	lsls	r0, r1, #25
 8004f68:	d5e6      	bpl.n	8004f38 <_printf_i+0x158>
 8004f6a:	b2ad      	uxth	r5, r5
 8004f6c:	e7e4      	b.n	8004f38 <_printf_i+0x158>
 8004f6e:	681a      	ldr	r2, [r3, #0]
 8004f70:	680d      	ldr	r5, [r1, #0]
 8004f72:	1d10      	adds	r0, r2, #4
 8004f74:	6949      	ldr	r1, [r1, #20]
 8004f76:	6018      	str	r0, [r3, #0]
 8004f78:	6813      	ldr	r3, [r2, #0]
 8004f7a:	062e      	lsls	r6, r5, #24
 8004f7c:	d501      	bpl.n	8004f82 <_printf_i+0x1a2>
 8004f7e:	6019      	str	r1, [r3, #0]
 8004f80:	e002      	b.n	8004f88 <_printf_i+0x1a8>
 8004f82:	066d      	lsls	r5, r5, #25
 8004f84:	d5fb      	bpl.n	8004f7e <_printf_i+0x19e>
 8004f86:	8019      	strh	r1, [r3, #0]
 8004f88:	2300      	movs	r3, #0
 8004f8a:	9e04      	ldr	r6, [sp, #16]
 8004f8c:	6123      	str	r3, [r4, #16]
 8004f8e:	e7bb      	b.n	8004f08 <_printf_i+0x128>
 8004f90:	681a      	ldr	r2, [r3, #0]
 8004f92:	1d11      	adds	r1, r2, #4
 8004f94:	6019      	str	r1, [r3, #0]
 8004f96:	6816      	ldr	r6, [r2, #0]
 8004f98:	2100      	movs	r1, #0
 8004f9a:	0030      	movs	r0, r6
 8004f9c:	6862      	ldr	r2, [r4, #4]
 8004f9e:	f000 ff3d 	bl	8005e1c <memchr>
 8004fa2:	2800      	cmp	r0, #0
 8004fa4:	d001      	beq.n	8004faa <_printf_i+0x1ca>
 8004fa6:	1b80      	subs	r0, r0, r6
 8004fa8:	6060      	str	r0, [r4, #4]
 8004faa:	6863      	ldr	r3, [r4, #4]
 8004fac:	6123      	str	r3, [r4, #16]
 8004fae:	2300      	movs	r3, #0
 8004fb0:	9a04      	ldr	r2, [sp, #16]
 8004fb2:	7013      	strb	r3, [r2, #0]
 8004fb4:	e7a8      	b.n	8004f08 <_printf_i+0x128>
 8004fb6:	6923      	ldr	r3, [r4, #16]
 8004fb8:	0032      	movs	r2, r6
 8004fba:	9906      	ldr	r1, [sp, #24]
 8004fbc:	9805      	ldr	r0, [sp, #20]
 8004fbe:	9d07      	ldr	r5, [sp, #28]
 8004fc0:	47a8      	blx	r5
 8004fc2:	1c43      	adds	r3, r0, #1
 8004fc4:	d0aa      	beq.n	8004f1c <_printf_i+0x13c>
 8004fc6:	6823      	ldr	r3, [r4, #0]
 8004fc8:	079b      	lsls	r3, r3, #30
 8004fca:	d415      	bmi.n	8004ff8 <_printf_i+0x218>
 8004fcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004fce:	68e0      	ldr	r0, [r4, #12]
 8004fd0:	4298      	cmp	r0, r3
 8004fd2:	daa5      	bge.n	8004f20 <_printf_i+0x140>
 8004fd4:	0018      	movs	r0, r3
 8004fd6:	e7a3      	b.n	8004f20 <_printf_i+0x140>
 8004fd8:	0022      	movs	r2, r4
 8004fda:	2301      	movs	r3, #1
 8004fdc:	9906      	ldr	r1, [sp, #24]
 8004fde:	9805      	ldr	r0, [sp, #20]
 8004fe0:	9e07      	ldr	r6, [sp, #28]
 8004fe2:	3219      	adds	r2, #25
 8004fe4:	47b0      	blx	r6
 8004fe6:	1c43      	adds	r3, r0, #1
 8004fe8:	d098      	beq.n	8004f1c <_printf_i+0x13c>
 8004fea:	3501      	adds	r5, #1
 8004fec:	68e3      	ldr	r3, [r4, #12]
 8004fee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004ff0:	1a9b      	subs	r3, r3, r2
 8004ff2:	42ab      	cmp	r3, r5
 8004ff4:	dcf0      	bgt.n	8004fd8 <_printf_i+0x1f8>
 8004ff6:	e7e9      	b.n	8004fcc <_printf_i+0x1ec>
 8004ff8:	2500      	movs	r5, #0
 8004ffa:	e7f7      	b.n	8004fec <_printf_i+0x20c>
 8004ffc:	0800799a 	.word	0x0800799a
 8005000:	080079ab 	.word	0x080079ab

08005004 <siprintf>:
 8005004:	b40e      	push	{r1, r2, r3}
 8005006:	b500      	push	{lr}
 8005008:	490b      	ldr	r1, [pc, #44]	; (8005038 <siprintf+0x34>)
 800500a:	b09c      	sub	sp, #112	; 0x70
 800500c:	ab1d      	add	r3, sp, #116	; 0x74
 800500e:	9002      	str	r0, [sp, #8]
 8005010:	9006      	str	r0, [sp, #24]
 8005012:	9107      	str	r1, [sp, #28]
 8005014:	9104      	str	r1, [sp, #16]
 8005016:	4809      	ldr	r0, [pc, #36]	; (800503c <siprintf+0x38>)
 8005018:	4909      	ldr	r1, [pc, #36]	; (8005040 <siprintf+0x3c>)
 800501a:	cb04      	ldmia	r3!, {r2}
 800501c:	9105      	str	r1, [sp, #20]
 800501e:	6800      	ldr	r0, [r0, #0]
 8005020:	a902      	add	r1, sp, #8
 8005022:	9301      	str	r3, [sp, #4]
 8005024:	f001 fc1a 	bl	800685c <_svfiprintf_r>
 8005028:	2300      	movs	r3, #0
 800502a:	9a02      	ldr	r2, [sp, #8]
 800502c:	7013      	strb	r3, [r2, #0]
 800502e:	b01c      	add	sp, #112	; 0x70
 8005030:	bc08      	pop	{r3}
 8005032:	b003      	add	sp, #12
 8005034:	4718      	bx	r3
 8005036:	46c0      	nop			; (mov r8, r8)
 8005038:	7fffffff 	.word	0x7fffffff
 800503c:	2000004c 	.word	0x2000004c
 8005040:	ffff0208 	.word	0xffff0208

08005044 <_vsniprintf_r>:
 8005044:	b530      	push	{r4, r5, lr}
 8005046:	0014      	movs	r4, r2
 8005048:	0005      	movs	r5, r0
 800504a:	001a      	movs	r2, r3
 800504c:	b09b      	sub	sp, #108	; 0x6c
 800504e:	2c00      	cmp	r4, #0
 8005050:	da05      	bge.n	800505e <_vsniprintf_r+0x1a>
 8005052:	238b      	movs	r3, #139	; 0x8b
 8005054:	6003      	str	r3, [r0, #0]
 8005056:	2001      	movs	r0, #1
 8005058:	4240      	negs	r0, r0
 800505a:	b01b      	add	sp, #108	; 0x6c
 800505c:	bd30      	pop	{r4, r5, pc}
 800505e:	2382      	movs	r3, #130	; 0x82
 8005060:	4668      	mov	r0, sp
 8005062:	009b      	lsls	r3, r3, #2
 8005064:	8183      	strh	r3, [r0, #12]
 8005066:	2300      	movs	r3, #0
 8005068:	9100      	str	r1, [sp, #0]
 800506a:	9104      	str	r1, [sp, #16]
 800506c:	429c      	cmp	r4, r3
 800506e:	d000      	beq.n	8005072 <_vsniprintf_r+0x2e>
 8005070:	1e63      	subs	r3, r4, #1
 8005072:	9302      	str	r3, [sp, #8]
 8005074:	9305      	str	r3, [sp, #20]
 8005076:	2301      	movs	r3, #1
 8005078:	4669      	mov	r1, sp
 800507a:	425b      	negs	r3, r3
 800507c:	81cb      	strh	r3, [r1, #14]
 800507e:	0028      	movs	r0, r5
 8005080:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8005082:	f001 fbeb 	bl	800685c <_svfiprintf_r>
 8005086:	1c43      	adds	r3, r0, #1
 8005088:	da01      	bge.n	800508e <_vsniprintf_r+0x4a>
 800508a:	238b      	movs	r3, #139	; 0x8b
 800508c:	602b      	str	r3, [r5, #0]
 800508e:	2c00      	cmp	r4, #0
 8005090:	d0e3      	beq.n	800505a <_vsniprintf_r+0x16>
 8005092:	2300      	movs	r3, #0
 8005094:	9a00      	ldr	r2, [sp, #0]
 8005096:	7013      	strb	r3, [r2, #0]
 8005098:	e7df      	b.n	800505a <_vsniprintf_r+0x16>
	...

0800509c <vsniprintf>:
 800509c:	b507      	push	{r0, r1, r2, lr}
 800509e:	9300      	str	r3, [sp, #0]
 80050a0:	0013      	movs	r3, r2
 80050a2:	000a      	movs	r2, r1
 80050a4:	0001      	movs	r1, r0
 80050a6:	4802      	ldr	r0, [pc, #8]	; (80050b0 <vsniprintf+0x14>)
 80050a8:	6800      	ldr	r0, [r0, #0]
 80050aa:	f7ff ffcb 	bl	8005044 <_vsniprintf_r>
 80050ae:	bd0e      	pop	{r1, r2, r3, pc}
 80050b0:	2000004c 	.word	0x2000004c

080050b4 <quorem>:
 80050b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80050b6:	0006      	movs	r6, r0
 80050b8:	690b      	ldr	r3, [r1, #16]
 80050ba:	6932      	ldr	r2, [r6, #16]
 80050bc:	b087      	sub	sp, #28
 80050be:	2000      	movs	r0, #0
 80050c0:	9103      	str	r1, [sp, #12]
 80050c2:	429a      	cmp	r2, r3
 80050c4:	db65      	blt.n	8005192 <quorem+0xde>
 80050c6:	3b01      	subs	r3, #1
 80050c8:	009c      	lsls	r4, r3, #2
 80050ca:	9300      	str	r3, [sp, #0]
 80050cc:	000b      	movs	r3, r1
 80050ce:	3314      	adds	r3, #20
 80050d0:	9305      	str	r3, [sp, #20]
 80050d2:	191b      	adds	r3, r3, r4
 80050d4:	9304      	str	r3, [sp, #16]
 80050d6:	0033      	movs	r3, r6
 80050d8:	3314      	adds	r3, #20
 80050da:	9302      	str	r3, [sp, #8]
 80050dc:	191c      	adds	r4, r3, r4
 80050de:	9b04      	ldr	r3, [sp, #16]
 80050e0:	6827      	ldr	r7, [r4, #0]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	0038      	movs	r0, r7
 80050e6:	1c5d      	adds	r5, r3, #1
 80050e8:	0029      	movs	r1, r5
 80050ea:	9301      	str	r3, [sp, #4]
 80050ec:	f7fb f828 	bl	8000140 <__udivsi3>
 80050f0:	9001      	str	r0, [sp, #4]
 80050f2:	42af      	cmp	r7, r5
 80050f4:	d324      	bcc.n	8005140 <quorem+0x8c>
 80050f6:	2500      	movs	r5, #0
 80050f8:	46ac      	mov	ip, r5
 80050fa:	9802      	ldr	r0, [sp, #8]
 80050fc:	9f05      	ldr	r7, [sp, #20]
 80050fe:	cf08      	ldmia	r7!, {r3}
 8005100:	9a01      	ldr	r2, [sp, #4]
 8005102:	b299      	uxth	r1, r3
 8005104:	4351      	muls	r1, r2
 8005106:	0c1b      	lsrs	r3, r3, #16
 8005108:	4353      	muls	r3, r2
 800510a:	1949      	adds	r1, r1, r5
 800510c:	0c0a      	lsrs	r2, r1, #16
 800510e:	189b      	adds	r3, r3, r2
 8005110:	6802      	ldr	r2, [r0, #0]
 8005112:	b289      	uxth	r1, r1
 8005114:	b292      	uxth	r2, r2
 8005116:	4462      	add	r2, ip
 8005118:	1a52      	subs	r2, r2, r1
 800511a:	6801      	ldr	r1, [r0, #0]
 800511c:	0c1d      	lsrs	r5, r3, #16
 800511e:	0c09      	lsrs	r1, r1, #16
 8005120:	b29b      	uxth	r3, r3
 8005122:	1acb      	subs	r3, r1, r3
 8005124:	1411      	asrs	r1, r2, #16
 8005126:	185b      	adds	r3, r3, r1
 8005128:	1419      	asrs	r1, r3, #16
 800512a:	b292      	uxth	r2, r2
 800512c:	041b      	lsls	r3, r3, #16
 800512e:	431a      	orrs	r2, r3
 8005130:	9b04      	ldr	r3, [sp, #16]
 8005132:	468c      	mov	ip, r1
 8005134:	c004      	stmia	r0!, {r2}
 8005136:	42bb      	cmp	r3, r7
 8005138:	d2e1      	bcs.n	80050fe <quorem+0x4a>
 800513a:	6823      	ldr	r3, [r4, #0]
 800513c:	2b00      	cmp	r3, #0
 800513e:	d030      	beq.n	80051a2 <quorem+0xee>
 8005140:	0030      	movs	r0, r6
 8005142:	9903      	ldr	r1, [sp, #12]
 8005144:	f001 f902 	bl	800634c <__mcmp>
 8005148:	2800      	cmp	r0, #0
 800514a:	db21      	blt.n	8005190 <quorem+0xdc>
 800514c:	0030      	movs	r0, r6
 800514e:	2400      	movs	r4, #0
 8005150:	9b01      	ldr	r3, [sp, #4]
 8005152:	9903      	ldr	r1, [sp, #12]
 8005154:	3301      	adds	r3, #1
 8005156:	9301      	str	r3, [sp, #4]
 8005158:	3014      	adds	r0, #20
 800515a:	3114      	adds	r1, #20
 800515c:	6803      	ldr	r3, [r0, #0]
 800515e:	c920      	ldmia	r1!, {r5}
 8005160:	b29a      	uxth	r2, r3
 8005162:	1914      	adds	r4, r2, r4
 8005164:	b2aa      	uxth	r2, r5
 8005166:	1aa2      	subs	r2, r4, r2
 8005168:	0c1b      	lsrs	r3, r3, #16
 800516a:	0c2d      	lsrs	r5, r5, #16
 800516c:	1414      	asrs	r4, r2, #16
 800516e:	1b5b      	subs	r3, r3, r5
 8005170:	191b      	adds	r3, r3, r4
 8005172:	141c      	asrs	r4, r3, #16
 8005174:	b292      	uxth	r2, r2
 8005176:	041b      	lsls	r3, r3, #16
 8005178:	4313      	orrs	r3, r2
 800517a:	c008      	stmia	r0!, {r3}
 800517c:	9b04      	ldr	r3, [sp, #16]
 800517e:	428b      	cmp	r3, r1
 8005180:	d2ec      	bcs.n	800515c <quorem+0xa8>
 8005182:	9b00      	ldr	r3, [sp, #0]
 8005184:	9a02      	ldr	r2, [sp, #8]
 8005186:	009b      	lsls	r3, r3, #2
 8005188:	18d3      	adds	r3, r2, r3
 800518a:	681a      	ldr	r2, [r3, #0]
 800518c:	2a00      	cmp	r2, #0
 800518e:	d015      	beq.n	80051bc <quorem+0x108>
 8005190:	9801      	ldr	r0, [sp, #4]
 8005192:	b007      	add	sp, #28
 8005194:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005196:	6823      	ldr	r3, [r4, #0]
 8005198:	2b00      	cmp	r3, #0
 800519a:	d106      	bne.n	80051aa <quorem+0xf6>
 800519c:	9b00      	ldr	r3, [sp, #0]
 800519e:	3b01      	subs	r3, #1
 80051a0:	9300      	str	r3, [sp, #0]
 80051a2:	9b02      	ldr	r3, [sp, #8]
 80051a4:	3c04      	subs	r4, #4
 80051a6:	42a3      	cmp	r3, r4
 80051a8:	d3f5      	bcc.n	8005196 <quorem+0xe2>
 80051aa:	9b00      	ldr	r3, [sp, #0]
 80051ac:	6133      	str	r3, [r6, #16]
 80051ae:	e7c7      	b.n	8005140 <quorem+0x8c>
 80051b0:	681a      	ldr	r2, [r3, #0]
 80051b2:	2a00      	cmp	r2, #0
 80051b4:	d106      	bne.n	80051c4 <quorem+0x110>
 80051b6:	9a00      	ldr	r2, [sp, #0]
 80051b8:	3a01      	subs	r2, #1
 80051ba:	9200      	str	r2, [sp, #0]
 80051bc:	9a02      	ldr	r2, [sp, #8]
 80051be:	3b04      	subs	r3, #4
 80051c0:	429a      	cmp	r2, r3
 80051c2:	d3f5      	bcc.n	80051b0 <quorem+0xfc>
 80051c4:	9b00      	ldr	r3, [sp, #0]
 80051c6:	6133      	str	r3, [r6, #16]
 80051c8:	e7e2      	b.n	8005190 <quorem+0xdc>
	...

080051cc <_dtoa_r>:
 80051cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80051ce:	b09d      	sub	sp, #116	; 0x74
 80051d0:	9202      	str	r2, [sp, #8]
 80051d2:	9303      	str	r3, [sp, #12]
 80051d4:	9b02      	ldr	r3, [sp, #8]
 80051d6:	9c03      	ldr	r4, [sp, #12]
 80051d8:	9308      	str	r3, [sp, #32]
 80051da:	9409      	str	r4, [sp, #36]	; 0x24
 80051dc:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80051de:	0007      	movs	r7, r0
 80051e0:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80051e2:	2c00      	cmp	r4, #0
 80051e4:	d10e      	bne.n	8005204 <_dtoa_r+0x38>
 80051e6:	2010      	movs	r0, #16
 80051e8:	f000 fe0e 	bl	8005e08 <malloc>
 80051ec:	1e02      	subs	r2, r0, #0
 80051ee:	6278      	str	r0, [r7, #36]	; 0x24
 80051f0:	d104      	bne.n	80051fc <_dtoa_r+0x30>
 80051f2:	21ea      	movs	r1, #234	; 0xea
 80051f4:	4bc7      	ldr	r3, [pc, #796]	; (8005514 <_dtoa_r+0x348>)
 80051f6:	48c8      	ldr	r0, [pc, #800]	; (8005518 <_dtoa_r+0x34c>)
 80051f8:	f001 fc42 	bl	8006a80 <__assert_func>
 80051fc:	6044      	str	r4, [r0, #4]
 80051fe:	6084      	str	r4, [r0, #8]
 8005200:	6004      	str	r4, [r0, #0]
 8005202:	60c4      	str	r4, [r0, #12]
 8005204:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005206:	6819      	ldr	r1, [r3, #0]
 8005208:	2900      	cmp	r1, #0
 800520a:	d00a      	beq.n	8005222 <_dtoa_r+0x56>
 800520c:	685a      	ldr	r2, [r3, #4]
 800520e:	2301      	movs	r3, #1
 8005210:	4093      	lsls	r3, r2
 8005212:	604a      	str	r2, [r1, #4]
 8005214:	608b      	str	r3, [r1, #8]
 8005216:	0038      	movs	r0, r7
 8005218:	f000 fe58 	bl	8005ecc <_Bfree>
 800521c:	2200      	movs	r2, #0
 800521e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005220:	601a      	str	r2, [r3, #0]
 8005222:	9b03      	ldr	r3, [sp, #12]
 8005224:	2b00      	cmp	r3, #0
 8005226:	da20      	bge.n	800526a <_dtoa_r+0x9e>
 8005228:	2301      	movs	r3, #1
 800522a:	602b      	str	r3, [r5, #0]
 800522c:	9b03      	ldr	r3, [sp, #12]
 800522e:	005b      	lsls	r3, r3, #1
 8005230:	085b      	lsrs	r3, r3, #1
 8005232:	9309      	str	r3, [sp, #36]	; 0x24
 8005234:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8005236:	4bb9      	ldr	r3, [pc, #740]	; (800551c <_dtoa_r+0x350>)
 8005238:	4ab8      	ldr	r2, [pc, #736]	; (800551c <_dtoa_r+0x350>)
 800523a:	402b      	ands	r3, r5
 800523c:	4293      	cmp	r3, r2
 800523e:	d117      	bne.n	8005270 <_dtoa_r+0xa4>
 8005240:	4bb7      	ldr	r3, [pc, #732]	; (8005520 <_dtoa_r+0x354>)
 8005242:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005244:	0328      	lsls	r0, r5, #12
 8005246:	6013      	str	r3, [r2, #0]
 8005248:	9b02      	ldr	r3, [sp, #8]
 800524a:	0b00      	lsrs	r0, r0, #12
 800524c:	4318      	orrs	r0, r3
 800524e:	d101      	bne.n	8005254 <_dtoa_r+0x88>
 8005250:	f000 fdbf 	bl	8005dd2 <_dtoa_r+0xc06>
 8005254:	48b3      	ldr	r0, [pc, #716]	; (8005524 <_dtoa_r+0x358>)
 8005256:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005258:	9006      	str	r0, [sp, #24]
 800525a:	2b00      	cmp	r3, #0
 800525c:	d002      	beq.n	8005264 <_dtoa_r+0x98>
 800525e:	4bb2      	ldr	r3, [pc, #712]	; (8005528 <_dtoa_r+0x35c>)
 8005260:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005262:	6013      	str	r3, [r2, #0]
 8005264:	9806      	ldr	r0, [sp, #24]
 8005266:	b01d      	add	sp, #116	; 0x74
 8005268:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800526a:	2300      	movs	r3, #0
 800526c:	602b      	str	r3, [r5, #0]
 800526e:	e7e1      	b.n	8005234 <_dtoa_r+0x68>
 8005270:	9b08      	ldr	r3, [sp, #32]
 8005272:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8005274:	9312      	str	r3, [sp, #72]	; 0x48
 8005276:	9413      	str	r4, [sp, #76]	; 0x4c
 8005278:	9812      	ldr	r0, [sp, #72]	; 0x48
 800527a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800527c:	2200      	movs	r2, #0
 800527e:	2300      	movs	r3, #0
 8005280:	f7fb f8e4 	bl	800044c <__aeabi_dcmpeq>
 8005284:	1e04      	subs	r4, r0, #0
 8005286:	d009      	beq.n	800529c <_dtoa_r+0xd0>
 8005288:	2301      	movs	r3, #1
 800528a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800528c:	6013      	str	r3, [r2, #0]
 800528e:	4ba7      	ldr	r3, [pc, #668]	; (800552c <_dtoa_r+0x360>)
 8005290:	9306      	str	r3, [sp, #24]
 8005292:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005294:	2b00      	cmp	r3, #0
 8005296:	d0e5      	beq.n	8005264 <_dtoa_r+0x98>
 8005298:	4ba5      	ldr	r3, [pc, #660]	; (8005530 <_dtoa_r+0x364>)
 800529a:	e7e1      	b.n	8005260 <_dtoa_r+0x94>
 800529c:	ab1a      	add	r3, sp, #104	; 0x68
 800529e:	9301      	str	r3, [sp, #4]
 80052a0:	ab1b      	add	r3, sp, #108	; 0x6c
 80052a2:	9300      	str	r3, [sp, #0]
 80052a4:	0038      	movs	r0, r7
 80052a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80052a8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80052aa:	f001 f903 	bl	80064b4 <__d2b>
 80052ae:	006e      	lsls	r6, r5, #1
 80052b0:	9005      	str	r0, [sp, #20]
 80052b2:	0d76      	lsrs	r6, r6, #21
 80052b4:	d100      	bne.n	80052b8 <_dtoa_r+0xec>
 80052b6:	e07c      	b.n	80053b2 <_dtoa_r+0x1e6>
 80052b8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80052ba:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80052bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80052be:	4a9d      	ldr	r2, [pc, #628]	; (8005534 <_dtoa_r+0x368>)
 80052c0:	031b      	lsls	r3, r3, #12
 80052c2:	0b1b      	lsrs	r3, r3, #12
 80052c4:	431a      	orrs	r2, r3
 80052c6:	0011      	movs	r1, r2
 80052c8:	4b9b      	ldr	r3, [pc, #620]	; (8005538 <_dtoa_r+0x36c>)
 80052ca:	9418      	str	r4, [sp, #96]	; 0x60
 80052cc:	18f6      	adds	r6, r6, r3
 80052ce:	2200      	movs	r2, #0
 80052d0:	4b9a      	ldr	r3, [pc, #616]	; (800553c <_dtoa_r+0x370>)
 80052d2:	f7fc fd13 	bl	8001cfc <__aeabi_dsub>
 80052d6:	4a9a      	ldr	r2, [pc, #616]	; (8005540 <_dtoa_r+0x374>)
 80052d8:	4b9a      	ldr	r3, [pc, #616]	; (8005544 <_dtoa_r+0x378>)
 80052da:	f7fc faa3 	bl	8001824 <__aeabi_dmul>
 80052de:	4a9a      	ldr	r2, [pc, #616]	; (8005548 <_dtoa_r+0x37c>)
 80052e0:	4b9a      	ldr	r3, [pc, #616]	; (800554c <_dtoa_r+0x380>)
 80052e2:	f7fb fb61 	bl	80009a8 <__aeabi_dadd>
 80052e6:	0004      	movs	r4, r0
 80052e8:	0030      	movs	r0, r6
 80052ea:	000d      	movs	r5, r1
 80052ec:	f7fd f8ec 	bl	80024c8 <__aeabi_i2d>
 80052f0:	4a97      	ldr	r2, [pc, #604]	; (8005550 <_dtoa_r+0x384>)
 80052f2:	4b98      	ldr	r3, [pc, #608]	; (8005554 <_dtoa_r+0x388>)
 80052f4:	f7fc fa96 	bl	8001824 <__aeabi_dmul>
 80052f8:	0002      	movs	r2, r0
 80052fa:	000b      	movs	r3, r1
 80052fc:	0020      	movs	r0, r4
 80052fe:	0029      	movs	r1, r5
 8005300:	f7fb fb52 	bl	80009a8 <__aeabi_dadd>
 8005304:	0004      	movs	r4, r0
 8005306:	000d      	movs	r5, r1
 8005308:	f7fd f8a8 	bl	800245c <__aeabi_d2iz>
 800530c:	2200      	movs	r2, #0
 800530e:	9002      	str	r0, [sp, #8]
 8005310:	2300      	movs	r3, #0
 8005312:	0020      	movs	r0, r4
 8005314:	0029      	movs	r1, r5
 8005316:	f7fb f89f 	bl	8000458 <__aeabi_dcmplt>
 800531a:	2800      	cmp	r0, #0
 800531c:	d00b      	beq.n	8005336 <_dtoa_r+0x16a>
 800531e:	9802      	ldr	r0, [sp, #8]
 8005320:	f7fd f8d2 	bl	80024c8 <__aeabi_i2d>
 8005324:	002b      	movs	r3, r5
 8005326:	0022      	movs	r2, r4
 8005328:	f7fb f890 	bl	800044c <__aeabi_dcmpeq>
 800532c:	4243      	negs	r3, r0
 800532e:	4158      	adcs	r0, r3
 8005330:	9b02      	ldr	r3, [sp, #8]
 8005332:	1a1b      	subs	r3, r3, r0
 8005334:	9302      	str	r3, [sp, #8]
 8005336:	2301      	movs	r3, #1
 8005338:	9316      	str	r3, [sp, #88]	; 0x58
 800533a:	9b02      	ldr	r3, [sp, #8]
 800533c:	2b16      	cmp	r3, #22
 800533e:	d80f      	bhi.n	8005360 <_dtoa_r+0x194>
 8005340:	9812      	ldr	r0, [sp, #72]	; 0x48
 8005342:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005344:	00da      	lsls	r2, r3, #3
 8005346:	4b84      	ldr	r3, [pc, #528]	; (8005558 <_dtoa_r+0x38c>)
 8005348:	189b      	adds	r3, r3, r2
 800534a:	681a      	ldr	r2, [r3, #0]
 800534c:	685b      	ldr	r3, [r3, #4]
 800534e:	f7fb f883 	bl	8000458 <__aeabi_dcmplt>
 8005352:	2800      	cmp	r0, #0
 8005354:	d049      	beq.n	80053ea <_dtoa_r+0x21e>
 8005356:	9b02      	ldr	r3, [sp, #8]
 8005358:	3b01      	subs	r3, #1
 800535a:	9302      	str	r3, [sp, #8]
 800535c:	2300      	movs	r3, #0
 800535e:	9316      	str	r3, [sp, #88]	; 0x58
 8005360:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005362:	1b9e      	subs	r6, r3, r6
 8005364:	2300      	movs	r3, #0
 8005366:	930a      	str	r3, [sp, #40]	; 0x28
 8005368:	0033      	movs	r3, r6
 800536a:	3b01      	subs	r3, #1
 800536c:	930d      	str	r3, [sp, #52]	; 0x34
 800536e:	d504      	bpl.n	800537a <_dtoa_r+0x1ae>
 8005370:	2301      	movs	r3, #1
 8005372:	1b9b      	subs	r3, r3, r6
 8005374:	930a      	str	r3, [sp, #40]	; 0x28
 8005376:	2300      	movs	r3, #0
 8005378:	930d      	str	r3, [sp, #52]	; 0x34
 800537a:	9b02      	ldr	r3, [sp, #8]
 800537c:	2b00      	cmp	r3, #0
 800537e:	db36      	blt.n	80053ee <_dtoa_r+0x222>
 8005380:	9a02      	ldr	r2, [sp, #8]
 8005382:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005384:	4694      	mov	ip, r2
 8005386:	4463      	add	r3, ip
 8005388:	930d      	str	r3, [sp, #52]	; 0x34
 800538a:	2300      	movs	r3, #0
 800538c:	9215      	str	r2, [sp, #84]	; 0x54
 800538e:	930e      	str	r3, [sp, #56]	; 0x38
 8005390:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005392:	2401      	movs	r4, #1
 8005394:	2b09      	cmp	r3, #9
 8005396:	d864      	bhi.n	8005462 <_dtoa_r+0x296>
 8005398:	2b05      	cmp	r3, #5
 800539a:	dd02      	ble.n	80053a2 <_dtoa_r+0x1d6>
 800539c:	2400      	movs	r4, #0
 800539e:	3b04      	subs	r3, #4
 80053a0:	9322      	str	r3, [sp, #136]	; 0x88
 80053a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80053a4:	1e98      	subs	r0, r3, #2
 80053a6:	2803      	cmp	r0, #3
 80053a8:	d864      	bhi.n	8005474 <_dtoa_r+0x2a8>
 80053aa:	f7fa feb5 	bl	8000118 <__gnu_thumb1_case_uqi>
 80053ae:	3829      	.short	0x3829
 80053b0:	5836      	.short	0x5836
 80053b2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80053b4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80053b6:	189e      	adds	r6, r3, r2
 80053b8:	4b68      	ldr	r3, [pc, #416]	; (800555c <_dtoa_r+0x390>)
 80053ba:	18f2      	adds	r2, r6, r3
 80053bc:	2a20      	cmp	r2, #32
 80053be:	dd0f      	ble.n	80053e0 <_dtoa_r+0x214>
 80053c0:	2340      	movs	r3, #64	; 0x40
 80053c2:	1a9b      	subs	r3, r3, r2
 80053c4:	409d      	lsls	r5, r3
 80053c6:	4b66      	ldr	r3, [pc, #408]	; (8005560 <_dtoa_r+0x394>)
 80053c8:	9802      	ldr	r0, [sp, #8]
 80053ca:	18f3      	adds	r3, r6, r3
 80053cc:	40d8      	lsrs	r0, r3
 80053ce:	4328      	orrs	r0, r5
 80053d0:	f7fd f8aa 	bl	8002528 <__aeabi_ui2d>
 80053d4:	2301      	movs	r3, #1
 80053d6:	4c63      	ldr	r4, [pc, #396]	; (8005564 <_dtoa_r+0x398>)
 80053d8:	3e01      	subs	r6, #1
 80053da:	1909      	adds	r1, r1, r4
 80053dc:	9318      	str	r3, [sp, #96]	; 0x60
 80053de:	e776      	b.n	80052ce <_dtoa_r+0x102>
 80053e0:	2320      	movs	r3, #32
 80053e2:	9802      	ldr	r0, [sp, #8]
 80053e4:	1a9b      	subs	r3, r3, r2
 80053e6:	4098      	lsls	r0, r3
 80053e8:	e7f2      	b.n	80053d0 <_dtoa_r+0x204>
 80053ea:	9016      	str	r0, [sp, #88]	; 0x58
 80053ec:	e7b8      	b.n	8005360 <_dtoa_r+0x194>
 80053ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80053f0:	9a02      	ldr	r2, [sp, #8]
 80053f2:	1a9b      	subs	r3, r3, r2
 80053f4:	930a      	str	r3, [sp, #40]	; 0x28
 80053f6:	4253      	negs	r3, r2
 80053f8:	930e      	str	r3, [sp, #56]	; 0x38
 80053fa:	2300      	movs	r3, #0
 80053fc:	9315      	str	r3, [sp, #84]	; 0x54
 80053fe:	e7c7      	b.n	8005390 <_dtoa_r+0x1c4>
 8005400:	2300      	movs	r3, #0
 8005402:	930f      	str	r3, [sp, #60]	; 0x3c
 8005404:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005406:	930c      	str	r3, [sp, #48]	; 0x30
 8005408:	9307      	str	r3, [sp, #28]
 800540a:	2b00      	cmp	r3, #0
 800540c:	dc13      	bgt.n	8005436 <_dtoa_r+0x26a>
 800540e:	2301      	movs	r3, #1
 8005410:	001a      	movs	r2, r3
 8005412:	930c      	str	r3, [sp, #48]	; 0x30
 8005414:	9307      	str	r3, [sp, #28]
 8005416:	9223      	str	r2, [sp, #140]	; 0x8c
 8005418:	e00d      	b.n	8005436 <_dtoa_r+0x26a>
 800541a:	2301      	movs	r3, #1
 800541c:	e7f1      	b.n	8005402 <_dtoa_r+0x236>
 800541e:	2300      	movs	r3, #0
 8005420:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8005422:	930f      	str	r3, [sp, #60]	; 0x3c
 8005424:	4694      	mov	ip, r2
 8005426:	9b02      	ldr	r3, [sp, #8]
 8005428:	4463      	add	r3, ip
 800542a:	930c      	str	r3, [sp, #48]	; 0x30
 800542c:	3301      	adds	r3, #1
 800542e:	9307      	str	r3, [sp, #28]
 8005430:	2b00      	cmp	r3, #0
 8005432:	dc00      	bgt.n	8005436 <_dtoa_r+0x26a>
 8005434:	2301      	movs	r3, #1
 8005436:	2200      	movs	r2, #0
 8005438:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800543a:	6042      	str	r2, [r0, #4]
 800543c:	3204      	adds	r2, #4
 800543e:	0015      	movs	r5, r2
 8005440:	3514      	adds	r5, #20
 8005442:	6841      	ldr	r1, [r0, #4]
 8005444:	429d      	cmp	r5, r3
 8005446:	d919      	bls.n	800547c <_dtoa_r+0x2b0>
 8005448:	0038      	movs	r0, r7
 800544a:	f000 fcfb 	bl	8005e44 <_Balloc>
 800544e:	9006      	str	r0, [sp, #24]
 8005450:	2800      	cmp	r0, #0
 8005452:	d117      	bne.n	8005484 <_dtoa_r+0x2b8>
 8005454:	21d5      	movs	r1, #213	; 0xd5
 8005456:	0002      	movs	r2, r0
 8005458:	4b43      	ldr	r3, [pc, #268]	; (8005568 <_dtoa_r+0x39c>)
 800545a:	0049      	lsls	r1, r1, #1
 800545c:	e6cb      	b.n	80051f6 <_dtoa_r+0x2a>
 800545e:	2301      	movs	r3, #1
 8005460:	e7de      	b.n	8005420 <_dtoa_r+0x254>
 8005462:	2300      	movs	r3, #0
 8005464:	940f      	str	r4, [sp, #60]	; 0x3c
 8005466:	9322      	str	r3, [sp, #136]	; 0x88
 8005468:	3b01      	subs	r3, #1
 800546a:	930c      	str	r3, [sp, #48]	; 0x30
 800546c:	9307      	str	r3, [sp, #28]
 800546e:	2200      	movs	r2, #0
 8005470:	3313      	adds	r3, #19
 8005472:	e7d0      	b.n	8005416 <_dtoa_r+0x24a>
 8005474:	2301      	movs	r3, #1
 8005476:	930f      	str	r3, [sp, #60]	; 0x3c
 8005478:	3b02      	subs	r3, #2
 800547a:	e7f6      	b.n	800546a <_dtoa_r+0x29e>
 800547c:	3101      	adds	r1, #1
 800547e:	6041      	str	r1, [r0, #4]
 8005480:	0052      	lsls	r2, r2, #1
 8005482:	e7dc      	b.n	800543e <_dtoa_r+0x272>
 8005484:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005486:	9a06      	ldr	r2, [sp, #24]
 8005488:	601a      	str	r2, [r3, #0]
 800548a:	9b07      	ldr	r3, [sp, #28]
 800548c:	2b0e      	cmp	r3, #14
 800548e:	d900      	bls.n	8005492 <_dtoa_r+0x2c6>
 8005490:	e0eb      	b.n	800566a <_dtoa_r+0x49e>
 8005492:	2c00      	cmp	r4, #0
 8005494:	d100      	bne.n	8005498 <_dtoa_r+0x2cc>
 8005496:	e0e8      	b.n	800566a <_dtoa_r+0x49e>
 8005498:	9b02      	ldr	r3, [sp, #8]
 800549a:	2b00      	cmp	r3, #0
 800549c:	dd68      	ble.n	8005570 <_dtoa_r+0x3a4>
 800549e:	001a      	movs	r2, r3
 80054a0:	210f      	movs	r1, #15
 80054a2:	4b2d      	ldr	r3, [pc, #180]	; (8005558 <_dtoa_r+0x38c>)
 80054a4:	400a      	ands	r2, r1
 80054a6:	00d2      	lsls	r2, r2, #3
 80054a8:	189b      	adds	r3, r3, r2
 80054aa:	681d      	ldr	r5, [r3, #0]
 80054ac:	685e      	ldr	r6, [r3, #4]
 80054ae:	9b02      	ldr	r3, [sp, #8]
 80054b0:	111c      	asrs	r4, r3, #4
 80054b2:	2302      	movs	r3, #2
 80054b4:	9310      	str	r3, [sp, #64]	; 0x40
 80054b6:	9b02      	ldr	r3, [sp, #8]
 80054b8:	05db      	lsls	r3, r3, #23
 80054ba:	d50b      	bpl.n	80054d4 <_dtoa_r+0x308>
 80054bc:	4b2b      	ldr	r3, [pc, #172]	; (800556c <_dtoa_r+0x3a0>)
 80054be:	400c      	ands	r4, r1
 80054c0:	6a1a      	ldr	r2, [r3, #32]
 80054c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80054c6:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80054c8:	f7fb fdaa 	bl	8001020 <__aeabi_ddiv>
 80054cc:	2303      	movs	r3, #3
 80054ce:	9008      	str	r0, [sp, #32]
 80054d0:	9109      	str	r1, [sp, #36]	; 0x24
 80054d2:	9310      	str	r3, [sp, #64]	; 0x40
 80054d4:	4b25      	ldr	r3, [pc, #148]	; (800556c <_dtoa_r+0x3a0>)
 80054d6:	9314      	str	r3, [sp, #80]	; 0x50
 80054d8:	2c00      	cmp	r4, #0
 80054da:	d108      	bne.n	80054ee <_dtoa_r+0x322>
 80054dc:	9808      	ldr	r0, [sp, #32]
 80054de:	9909      	ldr	r1, [sp, #36]	; 0x24
 80054e0:	002a      	movs	r2, r5
 80054e2:	0033      	movs	r3, r6
 80054e4:	f7fb fd9c 	bl	8001020 <__aeabi_ddiv>
 80054e8:	9008      	str	r0, [sp, #32]
 80054ea:	9109      	str	r1, [sp, #36]	; 0x24
 80054ec:	e05c      	b.n	80055a8 <_dtoa_r+0x3dc>
 80054ee:	2301      	movs	r3, #1
 80054f0:	421c      	tst	r4, r3
 80054f2:	d00b      	beq.n	800550c <_dtoa_r+0x340>
 80054f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80054f6:	0028      	movs	r0, r5
 80054f8:	3301      	adds	r3, #1
 80054fa:	9310      	str	r3, [sp, #64]	; 0x40
 80054fc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80054fe:	0031      	movs	r1, r6
 8005500:	681a      	ldr	r2, [r3, #0]
 8005502:	685b      	ldr	r3, [r3, #4]
 8005504:	f7fc f98e 	bl	8001824 <__aeabi_dmul>
 8005508:	0005      	movs	r5, r0
 800550a:	000e      	movs	r6, r1
 800550c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800550e:	1064      	asrs	r4, r4, #1
 8005510:	3308      	adds	r3, #8
 8005512:	e7e0      	b.n	80054d6 <_dtoa_r+0x30a>
 8005514:	080079c9 	.word	0x080079c9
 8005518:	080079e0 	.word	0x080079e0
 800551c:	7ff00000 	.word	0x7ff00000
 8005520:	0000270f 	.word	0x0000270f
 8005524:	080079c5 	.word	0x080079c5
 8005528:	080079c8 	.word	0x080079c8
 800552c:	08007998 	.word	0x08007998
 8005530:	08007999 	.word	0x08007999
 8005534:	3ff00000 	.word	0x3ff00000
 8005538:	fffffc01 	.word	0xfffffc01
 800553c:	3ff80000 	.word	0x3ff80000
 8005540:	636f4361 	.word	0x636f4361
 8005544:	3fd287a7 	.word	0x3fd287a7
 8005548:	8b60c8b3 	.word	0x8b60c8b3
 800554c:	3fc68a28 	.word	0x3fc68a28
 8005550:	509f79fb 	.word	0x509f79fb
 8005554:	3fd34413 	.word	0x3fd34413
 8005558:	08007ad0 	.word	0x08007ad0
 800555c:	00000432 	.word	0x00000432
 8005560:	00000412 	.word	0x00000412
 8005564:	fe100000 	.word	0xfe100000
 8005568:	08007a3b 	.word	0x08007a3b
 800556c:	08007aa8 	.word	0x08007aa8
 8005570:	2302      	movs	r3, #2
 8005572:	9310      	str	r3, [sp, #64]	; 0x40
 8005574:	9b02      	ldr	r3, [sp, #8]
 8005576:	2b00      	cmp	r3, #0
 8005578:	d016      	beq.n	80055a8 <_dtoa_r+0x3dc>
 800557a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800557c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800557e:	425c      	negs	r4, r3
 8005580:	230f      	movs	r3, #15
 8005582:	4ab6      	ldr	r2, [pc, #728]	; (800585c <_dtoa_r+0x690>)
 8005584:	4023      	ands	r3, r4
 8005586:	00db      	lsls	r3, r3, #3
 8005588:	18d3      	adds	r3, r2, r3
 800558a:	681a      	ldr	r2, [r3, #0]
 800558c:	685b      	ldr	r3, [r3, #4]
 800558e:	f7fc f949 	bl	8001824 <__aeabi_dmul>
 8005592:	2601      	movs	r6, #1
 8005594:	2300      	movs	r3, #0
 8005596:	9008      	str	r0, [sp, #32]
 8005598:	9109      	str	r1, [sp, #36]	; 0x24
 800559a:	4db1      	ldr	r5, [pc, #708]	; (8005860 <_dtoa_r+0x694>)
 800559c:	1124      	asrs	r4, r4, #4
 800559e:	2c00      	cmp	r4, #0
 80055a0:	d000      	beq.n	80055a4 <_dtoa_r+0x3d8>
 80055a2:	e094      	b.n	80056ce <_dtoa_r+0x502>
 80055a4:	2b00      	cmp	r3, #0
 80055a6:	d19f      	bne.n	80054e8 <_dtoa_r+0x31c>
 80055a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	d100      	bne.n	80055b0 <_dtoa_r+0x3e4>
 80055ae:	e09b      	b.n	80056e8 <_dtoa_r+0x51c>
 80055b0:	9c08      	ldr	r4, [sp, #32]
 80055b2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80055b4:	2200      	movs	r2, #0
 80055b6:	0020      	movs	r0, r4
 80055b8:	0029      	movs	r1, r5
 80055ba:	4baa      	ldr	r3, [pc, #680]	; (8005864 <_dtoa_r+0x698>)
 80055bc:	f7fa ff4c 	bl	8000458 <__aeabi_dcmplt>
 80055c0:	2800      	cmp	r0, #0
 80055c2:	d100      	bne.n	80055c6 <_dtoa_r+0x3fa>
 80055c4:	e090      	b.n	80056e8 <_dtoa_r+0x51c>
 80055c6:	9b07      	ldr	r3, [sp, #28]
 80055c8:	2b00      	cmp	r3, #0
 80055ca:	d100      	bne.n	80055ce <_dtoa_r+0x402>
 80055cc:	e08c      	b.n	80056e8 <_dtoa_r+0x51c>
 80055ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80055d0:	2b00      	cmp	r3, #0
 80055d2:	dd46      	ble.n	8005662 <_dtoa_r+0x496>
 80055d4:	9b02      	ldr	r3, [sp, #8]
 80055d6:	2200      	movs	r2, #0
 80055d8:	0020      	movs	r0, r4
 80055da:	0029      	movs	r1, r5
 80055dc:	1e5e      	subs	r6, r3, #1
 80055de:	4ba2      	ldr	r3, [pc, #648]	; (8005868 <_dtoa_r+0x69c>)
 80055e0:	f7fc f920 	bl	8001824 <__aeabi_dmul>
 80055e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80055e6:	9008      	str	r0, [sp, #32]
 80055e8:	9109      	str	r1, [sp, #36]	; 0x24
 80055ea:	3301      	adds	r3, #1
 80055ec:	9310      	str	r3, [sp, #64]	; 0x40
 80055ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80055f0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80055f2:	9c08      	ldr	r4, [sp, #32]
 80055f4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80055f6:	9314      	str	r3, [sp, #80]	; 0x50
 80055f8:	f7fc ff66 	bl	80024c8 <__aeabi_i2d>
 80055fc:	0022      	movs	r2, r4
 80055fe:	002b      	movs	r3, r5
 8005600:	f7fc f910 	bl	8001824 <__aeabi_dmul>
 8005604:	2200      	movs	r2, #0
 8005606:	4b99      	ldr	r3, [pc, #612]	; (800586c <_dtoa_r+0x6a0>)
 8005608:	f7fb f9ce 	bl	80009a8 <__aeabi_dadd>
 800560c:	9010      	str	r0, [sp, #64]	; 0x40
 800560e:	9111      	str	r1, [sp, #68]	; 0x44
 8005610:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005612:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005614:	9208      	str	r2, [sp, #32]
 8005616:	9309      	str	r3, [sp, #36]	; 0x24
 8005618:	4a95      	ldr	r2, [pc, #596]	; (8005870 <_dtoa_r+0x6a4>)
 800561a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800561c:	4694      	mov	ip, r2
 800561e:	4463      	add	r3, ip
 8005620:	9317      	str	r3, [sp, #92]	; 0x5c
 8005622:	9309      	str	r3, [sp, #36]	; 0x24
 8005624:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005626:	2b00      	cmp	r3, #0
 8005628:	d161      	bne.n	80056ee <_dtoa_r+0x522>
 800562a:	2200      	movs	r2, #0
 800562c:	0020      	movs	r0, r4
 800562e:	0029      	movs	r1, r5
 8005630:	4b90      	ldr	r3, [pc, #576]	; (8005874 <_dtoa_r+0x6a8>)
 8005632:	f7fc fb63 	bl	8001cfc <__aeabi_dsub>
 8005636:	9a08      	ldr	r2, [sp, #32]
 8005638:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800563a:	0004      	movs	r4, r0
 800563c:	000d      	movs	r5, r1
 800563e:	f7fa ff1f 	bl	8000480 <__aeabi_dcmpgt>
 8005642:	2800      	cmp	r0, #0
 8005644:	d000      	beq.n	8005648 <_dtoa_r+0x47c>
 8005646:	e2af      	b.n	8005ba8 <_dtoa_r+0x9dc>
 8005648:	488b      	ldr	r0, [pc, #556]	; (8005878 <_dtoa_r+0x6ac>)
 800564a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800564c:	4684      	mov	ip, r0
 800564e:	4461      	add	r1, ip
 8005650:	000b      	movs	r3, r1
 8005652:	0020      	movs	r0, r4
 8005654:	0029      	movs	r1, r5
 8005656:	9a08      	ldr	r2, [sp, #32]
 8005658:	f7fa fefe 	bl	8000458 <__aeabi_dcmplt>
 800565c:	2800      	cmp	r0, #0
 800565e:	d000      	beq.n	8005662 <_dtoa_r+0x496>
 8005660:	e29f      	b.n	8005ba2 <_dtoa_r+0x9d6>
 8005662:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005664:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8005666:	9308      	str	r3, [sp, #32]
 8005668:	9409      	str	r4, [sp, #36]	; 0x24
 800566a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800566c:	2b00      	cmp	r3, #0
 800566e:	da00      	bge.n	8005672 <_dtoa_r+0x4a6>
 8005670:	e172      	b.n	8005958 <_dtoa_r+0x78c>
 8005672:	9a02      	ldr	r2, [sp, #8]
 8005674:	2a0e      	cmp	r2, #14
 8005676:	dd00      	ble.n	800567a <_dtoa_r+0x4ae>
 8005678:	e16e      	b.n	8005958 <_dtoa_r+0x78c>
 800567a:	4b78      	ldr	r3, [pc, #480]	; (800585c <_dtoa_r+0x690>)
 800567c:	00d2      	lsls	r2, r2, #3
 800567e:	189b      	adds	r3, r3, r2
 8005680:	685c      	ldr	r4, [r3, #4]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	930a      	str	r3, [sp, #40]	; 0x28
 8005686:	940b      	str	r4, [sp, #44]	; 0x2c
 8005688:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800568a:	2b00      	cmp	r3, #0
 800568c:	db00      	blt.n	8005690 <_dtoa_r+0x4c4>
 800568e:	e0f7      	b.n	8005880 <_dtoa_r+0x6b4>
 8005690:	9b07      	ldr	r3, [sp, #28]
 8005692:	2b00      	cmp	r3, #0
 8005694:	dd00      	ble.n	8005698 <_dtoa_r+0x4cc>
 8005696:	e0f3      	b.n	8005880 <_dtoa_r+0x6b4>
 8005698:	d000      	beq.n	800569c <_dtoa_r+0x4d0>
 800569a:	e282      	b.n	8005ba2 <_dtoa_r+0x9d6>
 800569c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800569e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80056a0:	2200      	movs	r2, #0
 80056a2:	4b74      	ldr	r3, [pc, #464]	; (8005874 <_dtoa_r+0x6a8>)
 80056a4:	f7fc f8be 	bl	8001824 <__aeabi_dmul>
 80056a8:	9a08      	ldr	r2, [sp, #32]
 80056aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80056ac:	f7fa fef2 	bl	8000494 <__aeabi_dcmpge>
 80056b0:	9e07      	ldr	r6, [sp, #28]
 80056b2:	0035      	movs	r5, r6
 80056b4:	2800      	cmp	r0, #0
 80056b6:	d000      	beq.n	80056ba <_dtoa_r+0x4ee>
 80056b8:	e259      	b.n	8005b6e <_dtoa_r+0x9a2>
 80056ba:	9b06      	ldr	r3, [sp, #24]
 80056bc:	9a06      	ldr	r2, [sp, #24]
 80056be:	3301      	adds	r3, #1
 80056c0:	9308      	str	r3, [sp, #32]
 80056c2:	2331      	movs	r3, #49	; 0x31
 80056c4:	7013      	strb	r3, [r2, #0]
 80056c6:	9b02      	ldr	r3, [sp, #8]
 80056c8:	3301      	adds	r3, #1
 80056ca:	9302      	str	r3, [sp, #8]
 80056cc:	e254      	b.n	8005b78 <_dtoa_r+0x9ac>
 80056ce:	4234      	tst	r4, r6
 80056d0:	d007      	beq.n	80056e2 <_dtoa_r+0x516>
 80056d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80056d4:	3301      	adds	r3, #1
 80056d6:	9310      	str	r3, [sp, #64]	; 0x40
 80056d8:	682a      	ldr	r2, [r5, #0]
 80056da:	686b      	ldr	r3, [r5, #4]
 80056dc:	f7fc f8a2 	bl	8001824 <__aeabi_dmul>
 80056e0:	0033      	movs	r3, r6
 80056e2:	1064      	asrs	r4, r4, #1
 80056e4:	3508      	adds	r5, #8
 80056e6:	e75a      	b.n	800559e <_dtoa_r+0x3d2>
 80056e8:	9e02      	ldr	r6, [sp, #8]
 80056ea:	9b07      	ldr	r3, [sp, #28]
 80056ec:	e780      	b.n	80055f0 <_dtoa_r+0x424>
 80056ee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80056f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80056f2:	1e5a      	subs	r2, r3, #1
 80056f4:	4b59      	ldr	r3, [pc, #356]	; (800585c <_dtoa_r+0x690>)
 80056f6:	00d2      	lsls	r2, r2, #3
 80056f8:	189b      	adds	r3, r3, r2
 80056fa:	681a      	ldr	r2, [r3, #0]
 80056fc:	685b      	ldr	r3, [r3, #4]
 80056fe:	2900      	cmp	r1, #0
 8005700:	d051      	beq.n	80057a6 <_dtoa_r+0x5da>
 8005702:	2000      	movs	r0, #0
 8005704:	495d      	ldr	r1, [pc, #372]	; (800587c <_dtoa_r+0x6b0>)
 8005706:	f7fb fc8b 	bl	8001020 <__aeabi_ddiv>
 800570a:	9a08      	ldr	r2, [sp, #32]
 800570c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800570e:	f7fc faf5 	bl	8001cfc <__aeabi_dsub>
 8005712:	9a06      	ldr	r2, [sp, #24]
 8005714:	9b06      	ldr	r3, [sp, #24]
 8005716:	4694      	mov	ip, r2
 8005718:	9317      	str	r3, [sp, #92]	; 0x5c
 800571a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800571c:	9010      	str	r0, [sp, #64]	; 0x40
 800571e:	9111      	str	r1, [sp, #68]	; 0x44
 8005720:	4463      	add	r3, ip
 8005722:	9319      	str	r3, [sp, #100]	; 0x64
 8005724:	0029      	movs	r1, r5
 8005726:	0020      	movs	r0, r4
 8005728:	f7fc fe98 	bl	800245c <__aeabi_d2iz>
 800572c:	9014      	str	r0, [sp, #80]	; 0x50
 800572e:	f7fc fecb 	bl	80024c8 <__aeabi_i2d>
 8005732:	0002      	movs	r2, r0
 8005734:	000b      	movs	r3, r1
 8005736:	0020      	movs	r0, r4
 8005738:	0029      	movs	r1, r5
 800573a:	f7fc fadf 	bl	8001cfc <__aeabi_dsub>
 800573e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005740:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8005742:	3301      	adds	r3, #1
 8005744:	9308      	str	r3, [sp, #32]
 8005746:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005748:	0004      	movs	r4, r0
 800574a:	3330      	adds	r3, #48	; 0x30
 800574c:	7013      	strb	r3, [r2, #0]
 800574e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005750:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005752:	000d      	movs	r5, r1
 8005754:	f7fa fe80 	bl	8000458 <__aeabi_dcmplt>
 8005758:	2800      	cmp	r0, #0
 800575a:	d175      	bne.n	8005848 <_dtoa_r+0x67c>
 800575c:	0022      	movs	r2, r4
 800575e:	002b      	movs	r3, r5
 8005760:	2000      	movs	r0, #0
 8005762:	4940      	ldr	r1, [pc, #256]	; (8005864 <_dtoa_r+0x698>)
 8005764:	f7fc faca 	bl	8001cfc <__aeabi_dsub>
 8005768:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800576a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800576c:	f7fa fe74 	bl	8000458 <__aeabi_dcmplt>
 8005770:	2800      	cmp	r0, #0
 8005772:	d000      	beq.n	8005776 <_dtoa_r+0x5aa>
 8005774:	e0d2      	b.n	800591c <_dtoa_r+0x750>
 8005776:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005778:	9a08      	ldr	r2, [sp, #32]
 800577a:	4293      	cmp	r3, r2
 800577c:	d100      	bne.n	8005780 <_dtoa_r+0x5b4>
 800577e:	e770      	b.n	8005662 <_dtoa_r+0x496>
 8005780:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005782:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005784:	2200      	movs	r2, #0
 8005786:	4b38      	ldr	r3, [pc, #224]	; (8005868 <_dtoa_r+0x69c>)
 8005788:	f7fc f84c 	bl	8001824 <__aeabi_dmul>
 800578c:	4b36      	ldr	r3, [pc, #216]	; (8005868 <_dtoa_r+0x69c>)
 800578e:	9010      	str	r0, [sp, #64]	; 0x40
 8005790:	9111      	str	r1, [sp, #68]	; 0x44
 8005792:	2200      	movs	r2, #0
 8005794:	0020      	movs	r0, r4
 8005796:	0029      	movs	r1, r5
 8005798:	f7fc f844 	bl	8001824 <__aeabi_dmul>
 800579c:	9b08      	ldr	r3, [sp, #32]
 800579e:	0004      	movs	r4, r0
 80057a0:	000d      	movs	r5, r1
 80057a2:	9317      	str	r3, [sp, #92]	; 0x5c
 80057a4:	e7be      	b.n	8005724 <_dtoa_r+0x558>
 80057a6:	9808      	ldr	r0, [sp, #32]
 80057a8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80057aa:	f7fc f83b 	bl	8001824 <__aeabi_dmul>
 80057ae:	9a06      	ldr	r2, [sp, #24]
 80057b0:	9b06      	ldr	r3, [sp, #24]
 80057b2:	4694      	mov	ip, r2
 80057b4:	9308      	str	r3, [sp, #32]
 80057b6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80057b8:	9010      	str	r0, [sp, #64]	; 0x40
 80057ba:	9111      	str	r1, [sp, #68]	; 0x44
 80057bc:	4463      	add	r3, ip
 80057be:	9319      	str	r3, [sp, #100]	; 0x64
 80057c0:	0029      	movs	r1, r5
 80057c2:	0020      	movs	r0, r4
 80057c4:	f7fc fe4a 	bl	800245c <__aeabi_d2iz>
 80057c8:	9017      	str	r0, [sp, #92]	; 0x5c
 80057ca:	f7fc fe7d 	bl	80024c8 <__aeabi_i2d>
 80057ce:	0002      	movs	r2, r0
 80057d0:	000b      	movs	r3, r1
 80057d2:	0020      	movs	r0, r4
 80057d4:	0029      	movs	r1, r5
 80057d6:	f7fc fa91 	bl	8001cfc <__aeabi_dsub>
 80057da:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80057dc:	9a08      	ldr	r2, [sp, #32]
 80057de:	3330      	adds	r3, #48	; 0x30
 80057e0:	7013      	strb	r3, [r2, #0]
 80057e2:	0013      	movs	r3, r2
 80057e4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80057e6:	3301      	adds	r3, #1
 80057e8:	0004      	movs	r4, r0
 80057ea:	000d      	movs	r5, r1
 80057ec:	9308      	str	r3, [sp, #32]
 80057ee:	4293      	cmp	r3, r2
 80057f0:	d12c      	bne.n	800584c <_dtoa_r+0x680>
 80057f2:	9810      	ldr	r0, [sp, #64]	; 0x40
 80057f4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80057f6:	9a06      	ldr	r2, [sp, #24]
 80057f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80057fa:	4694      	mov	ip, r2
 80057fc:	4463      	add	r3, ip
 80057fe:	2200      	movs	r2, #0
 8005800:	9308      	str	r3, [sp, #32]
 8005802:	4b1e      	ldr	r3, [pc, #120]	; (800587c <_dtoa_r+0x6b0>)
 8005804:	f7fb f8d0 	bl	80009a8 <__aeabi_dadd>
 8005808:	0002      	movs	r2, r0
 800580a:	000b      	movs	r3, r1
 800580c:	0020      	movs	r0, r4
 800580e:	0029      	movs	r1, r5
 8005810:	f7fa fe36 	bl	8000480 <__aeabi_dcmpgt>
 8005814:	2800      	cmp	r0, #0
 8005816:	d000      	beq.n	800581a <_dtoa_r+0x64e>
 8005818:	e080      	b.n	800591c <_dtoa_r+0x750>
 800581a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800581c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800581e:	2000      	movs	r0, #0
 8005820:	4916      	ldr	r1, [pc, #88]	; (800587c <_dtoa_r+0x6b0>)
 8005822:	f7fc fa6b 	bl	8001cfc <__aeabi_dsub>
 8005826:	0002      	movs	r2, r0
 8005828:	000b      	movs	r3, r1
 800582a:	0020      	movs	r0, r4
 800582c:	0029      	movs	r1, r5
 800582e:	f7fa fe13 	bl	8000458 <__aeabi_dcmplt>
 8005832:	2800      	cmp	r0, #0
 8005834:	d100      	bne.n	8005838 <_dtoa_r+0x66c>
 8005836:	e714      	b.n	8005662 <_dtoa_r+0x496>
 8005838:	9b08      	ldr	r3, [sp, #32]
 800583a:	001a      	movs	r2, r3
 800583c:	3a01      	subs	r2, #1
 800583e:	9208      	str	r2, [sp, #32]
 8005840:	7812      	ldrb	r2, [r2, #0]
 8005842:	2a30      	cmp	r2, #48	; 0x30
 8005844:	d0f8      	beq.n	8005838 <_dtoa_r+0x66c>
 8005846:	9308      	str	r3, [sp, #32]
 8005848:	9602      	str	r6, [sp, #8]
 800584a:	e055      	b.n	80058f8 <_dtoa_r+0x72c>
 800584c:	2200      	movs	r2, #0
 800584e:	4b06      	ldr	r3, [pc, #24]	; (8005868 <_dtoa_r+0x69c>)
 8005850:	f7fb ffe8 	bl	8001824 <__aeabi_dmul>
 8005854:	0004      	movs	r4, r0
 8005856:	000d      	movs	r5, r1
 8005858:	e7b2      	b.n	80057c0 <_dtoa_r+0x5f4>
 800585a:	46c0      	nop			; (mov r8, r8)
 800585c:	08007ad0 	.word	0x08007ad0
 8005860:	08007aa8 	.word	0x08007aa8
 8005864:	3ff00000 	.word	0x3ff00000
 8005868:	40240000 	.word	0x40240000
 800586c:	401c0000 	.word	0x401c0000
 8005870:	fcc00000 	.word	0xfcc00000
 8005874:	40140000 	.word	0x40140000
 8005878:	7cc00000 	.word	0x7cc00000
 800587c:	3fe00000 	.word	0x3fe00000
 8005880:	9b07      	ldr	r3, [sp, #28]
 8005882:	9e06      	ldr	r6, [sp, #24]
 8005884:	3b01      	subs	r3, #1
 8005886:	199b      	adds	r3, r3, r6
 8005888:	930c      	str	r3, [sp, #48]	; 0x30
 800588a:	9c08      	ldr	r4, [sp, #32]
 800588c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800588e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005890:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005892:	0020      	movs	r0, r4
 8005894:	0029      	movs	r1, r5
 8005896:	f7fb fbc3 	bl	8001020 <__aeabi_ddiv>
 800589a:	f7fc fddf 	bl	800245c <__aeabi_d2iz>
 800589e:	9007      	str	r0, [sp, #28]
 80058a0:	f7fc fe12 	bl	80024c8 <__aeabi_i2d>
 80058a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80058a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80058a8:	f7fb ffbc 	bl	8001824 <__aeabi_dmul>
 80058ac:	0002      	movs	r2, r0
 80058ae:	000b      	movs	r3, r1
 80058b0:	0020      	movs	r0, r4
 80058b2:	0029      	movs	r1, r5
 80058b4:	f7fc fa22 	bl	8001cfc <__aeabi_dsub>
 80058b8:	0033      	movs	r3, r6
 80058ba:	9a07      	ldr	r2, [sp, #28]
 80058bc:	3601      	adds	r6, #1
 80058be:	3230      	adds	r2, #48	; 0x30
 80058c0:	701a      	strb	r2, [r3, #0]
 80058c2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80058c4:	9608      	str	r6, [sp, #32]
 80058c6:	429a      	cmp	r2, r3
 80058c8:	d139      	bne.n	800593e <_dtoa_r+0x772>
 80058ca:	0002      	movs	r2, r0
 80058cc:	000b      	movs	r3, r1
 80058ce:	f7fb f86b 	bl	80009a8 <__aeabi_dadd>
 80058d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80058d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80058d6:	0004      	movs	r4, r0
 80058d8:	000d      	movs	r5, r1
 80058da:	f7fa fdd1 	bl	8000480 <__aeabi_dcmpgt>
 80058de:	2800      	cmp	r0, #0
 80058e0:	d11b      	bne.n	800591a <_dtoa_r+0x74e>
 80058e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80058e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80058e6:	0020      	movs	r0, r4
 80058e8:	0029      	movs	r1, r5
 80058ea:	f7fa fdaf 	bl	800044c <__aeabi_dcmpeq>
 80058ee:	2800      	cmp	r0, #0
 80058f0:	d002      	beq.n	80058f8 <_dtoa_r+0x72c>
 80058f2:	9b07      	ldr	r3, [sp, #28]
 80058f4:	07db      	lsls	r3, r3, #31
 80058f6:	d410      	bmi.n	800591a <_dtoa_r+0x74e>
 80058f8:	0038      	movs	r0, r7
 80058fa:	9905      	ldr	r1, [sp, #20]
 80058fc:	f000 fae6 	bl	8005ecc <_Bfree>
 8005900:	2300      	movs	r3, #0
 8005902:	9a08      	ldr	r2, [sp, #32]
 8005904:	9802      	ldr	r0, [sp, #8]
 8005906:	7013      	strb	r3, [r2, #0]
 8005908:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800590a:	3001      	adds	r0, #1
 800590c:	6018      	str	r0, [r3, #0]
 800590e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005910:	2b00      	cmp	r3, #0
 8005912:	d100      	bne.n	8005916 <_dtoa_r+0x74a>
 8005914:	e4a6      	b.n	8005264 <_dtoa_r+0x98>
 8005916:	601a      	str	r2, [r3, #0]
 8005918:	e4a4      	b.n	8005264 <_dtoa_r+0x98>
 800591a:	9e02      	ldr	r6, [sp, #8]
 800591c:	9b08      	ldr	r3, [sp, #32]
 800591e:	9308      	str	r3, [sp, #32]
 8005920:	3b01      	subs	r3, #1
 8005922:	781a      	ldrb	r2, [r3, #0]
 8005924:	2a39      	cmp	r2, #57	; 0x39
 8005926:	d106      	bne.n	8005936 <_dtoa_r+0x76a>
 8005928:	9a06      	ldr	r2, [sp, #24]
 800592a:	429a      	cmp	r2, r3
 800592c:	d1f7      	bne.n	800591e <_dtoa_r+0x752>
 800592e:	2230      	movs	r2, #48	; 0x30
 8005930:	9906      	ldr	r1, [sp, #24]
 8005932:	3601      	adds	r6, #1
 8005934:	700a      	strb	r2, [r1, #0]
 8005936:	781a      	ldrb	r2, [r3, #0]
 8005938:	3201      	adds	r2, #1
 800593a:	701a      	strb	r2, [r3, #0]
 800593c:	e784      	b.n	8005848 <_dtoa_r+0x67c>
 800593e:	2200      	movs	r2, #0
 8005940:	4baa      	ldr	r3, [pc, #680]	; (8005bec <_dtoa_r+0xa20>)
 8005942:	f7fb ff6f 	bl	8001824 <__aeabi_dmul>
 8005946:	2200      	movs	r2, #0
 8005948:	2300      	movs	r3, #0
 800594a:	0004      	movs	r4, r0
 800594c:	000d      	movs	r5, r1
 800594e:	f7fa fd7d 	bl	800044c <__aeabi_dcmpeq>
 8005952:	2800      	cmp	r0, #0
 8005954:	d09b      	beq.n	800588e <_dtoa_r+0x6c2>
 8005956:	e7cf      	b.n	80058f8 <_dtoa_r+0x72c>
 8005958:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800595a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800595c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800595e:	2d00      	cmp	r5, #0
 8005960:	d012      	beq.n	8005988 <_dtoa_r+0x7bc>
 8005962:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005964:	2a01      	cmp	r2, #1
 8005966:	dc66      	bgt.n	8005a36 <_dtoa_r+0x86a>
 8005968:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800596a:	2a00      	cmp	r2, #0
 800596c:	d05d      	beq.n	8005a2a <_dtoa_r+0x85e>
 800596e:	4aa0      	ldr	r2, [pc, #640]	; (8005bf0 <_dtoa_r+0xa24>)
 8005970:	189b      	adds	r3, r3, r2
 8005972:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005974:	2101      	movs	r1, #1
 8005976:	18d2      	adds	r2, r2, r3
 8005978:	920a      	str	r2, [sp, #40]	; 0x28
 800597a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800597c:	0038      	movs	r0, r7
 800597e:	18d3      	adds	r3, r2, r3
 8005980:	930d      	str	r3, [sp, #52]	; 0x34
 8005982:	f000 fb53 	bl	800602c <__i2b>
 8005986:	0005      	movs	r5, r0
 8005988:	2c00      	cmp	r4, #0
 800598a:	dd0e      	ble.n	80059aa <_dtoa_r+0x7de>
 800598c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800598e:	2b00      	cmp	r3, #0
 8005990:	dd0b      	ble.n	80059aa <_dtoa_r+0x7de>
 8005992:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005994:	0023      	movs	r3, r4
 8005996:	4294      	cmp	r4, r2
 8005998:	dd00      	ble.n	800599c <_dtoa_r+0x7d0>
 800599a:	0013      	movs	r3, r2
 800599c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800599e:	1ae4      	subs	r4, r4, r3
 80059a0:	1ad2      	subs	r2, r2, r3
 80059a2:	920a      	str	r2, [sp, #40]	; 0x28
 80059a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80059a6:	1ad3      	subs	r3, r2, r3
 80059a8:	930d      	str	r3, [sp, #52]	; 0x34
 80059aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80059ac:	2b00      	cmp	r3, #0
 80059ae:	d01f      	beq.n	80059f0 <_dtoa_r+0x824>
 80059b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80059b2:	2b00      	cmp	r3, #0
 80059b4:	d054      	beq.n	8005a60 <_dtoa_r+0x894>
 80059b6:	2e00      	cmp	r6, #0
 80059b8:	dd11      	ble.n	80059de <_dtoa_r+0x812>
 80059ba:	0029      	movs	r1, r5
 80059bc:	0032      	movs	r2, r6
 80059be:	0038      	movs	r0, r7
 80059c0:	f000 fbfa 	bl	80061b8 <__pow5mult>
 80059c4:	9a05      	ldr	r2, [sp, #20]
 80059c6:	0001      	movs	r1, r0
 80059c8:	0005      	movs	r5, r0
 80059ca:	0038      	movs	r0, r7
 80059cc:	f000 fb44 	bl	8006058 <__multiply>
 80059d0:	9905      	ldr	r1, [sp, #20]
 80059d2:	9014      	str	r0, [sp, #80]	; 0x50
 80059d4:	0038      	movs	r0, r7
 80059d6:	f000 fa79 	bl	8005ecc <_Bfree>
 80059da:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80059dc:	9305      	str	r3, [sp, #20]
 80059de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80059e0:	1b9a      	subs	r2, r3, r6
 80059e2:	42b3      	cmp	r3, r6
 80059e4:	d004      	beq.n	80059f0 <_dtoa_r+0x824>
 80059e6:	0038      	movs	r0, r7
 80059e8:	9905      	ldr	r1, [sp, #20]
 80059ea:	f000 fbe5 	bl	80061b8 <__pow5mult>
 80059ee:	9005      	str	r0, [sp, #20]
 80059f0:	2101      	movs	r1, #1
 80059f2:	0038      	movs	r0, r7
 80059f4:	f000 fb1a 	bl	800602c <__i2b>
 80059f8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80059fa:	0006      	movs	r6, r0
 80059fc:	2b00      	cmp	r3, #0
 80059fe:	dd31      	ble.n	8005a64 <_dtoa_r+0x898>
 8005a00:	001a      	movs	r2, r3
 8005a02:	0001      	movs	r1, r0
 8005a04:	0038      	movs	r0, r7
 8005a06:	f000 fbd7 	bl	80061b8 <__pow5mult>
 8005a0a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005a0c:	0006      	movs	r6, r0
 8005a0e:	2b01      	cmp	r3, #1
 8005a10:	dd2d      	ble.n	8005a6e <_dtoa_r+0x8a2>
 8005a12:	2300      	movs	r3, #0
 8005a14:	930e      	str	r3, [sp, #56]	; 0x38
 8005a16:	6933      	ldr	r3, [r6, #16]
 8005a18:	3303      	adds	r3, #3
 8005a1a:	009b      	lsls	r3, r3, #2
 8005a1c:	18f3      	adds	r3, r6, r3
 8005a1e:	6858      	ldr	r0, [r3, #4]
 8005a20:	f000 fabc 	bl	8005f9c <__hi0bits>
 8005a24:	2320      	movs	r3, #32
 8005a26:	1a18      	subs	r0, r3, r0
 8005a28:	e039      	b.n	8005a9e <_dtoa_r+0x8d2>
 8005a2a:	2336      	movs	r3, #54	; 0x36
 8005a2c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8005a2e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8005a30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005a32:	1a9b      	subs	r3, r3, r2
 8005a34:	e79d      	b.n	8005972 <_dtoa_r+0x7a6>
 8005a36:	9b07      	ldr	r3, [sp, #28]
 8005a38:	1e5e      	subs	r6, r3, #1
 8005a3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005a3c:	42b3      	cmp	r3, r6
 8005a3e:	db07      	blt.n	8005a50 <_dtoa_r+0x884>
 8005a40:	1b9e      	subs	r6, r3, r6
 8005a42:	9b07      	ldr	r3, [sp, #28]
 8005a44:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005a46:	2b00      	cmp	r3, #0
 8005a48:	da93      	bge.n	8005972 <_dtoa_r+0x7a6>
 8005a4a:	1ae4      	subs	r4, r4, r3
 8005a4c:	2300      	movs	r3, #0
 8005a4e:	e790      	b.n	8005972 <_dtoa_r+0x7a6>
 8005a50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005a52:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005a54:	1af3      	subs	r3, r6, r3
 8005a56:	18d3      	adds	r3, r2, r3
 8005a58:	960e      	str	r6, [sp, #56]	; 0x38
 8005a5a:	9315      	str	r3, [sp, #84]	; 0x54
 8005a5c:	2600      	movs	r6, #0
 8005a5e:	e7f0      	b.n	8005a42 <_dtoa_r+0x876>
 8005a60:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005a62:	e7c0      	b.n	80059e6 <_dtoa_r+0x81a>
 8005a64:	2300      	movs	r3, #0
 8005a66:	930e      	str	r3, [sp, #56]	; 0x38
 8005a68:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005a6a:	2b01      	cmp	r3, #1
 8005a6c:	dc13      	bgt.n	8005a96 <_dtoa_r+0x8ca>
 8005a6e:	2300      	movs	r3, #0
 8005a70:	930e      	str	r3, [sp, #56]	; 0x38
 8005a72:	9b08      	ldr	r3, [sp, #32]
 8005a74:	2b00      	cmp	r3, #0
 8005a76:	d10e      	bne.n	8005a96 <_dtoa_r+0x8ca>
 8005a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005a7a:	031b      	lsls	r3, r3, #12
 8005a7c:	d10b      	bne.n	8005a96 <_dtoa_r+0x8ca>
 8005a7e:	4b5d      	ldr	r3, [pc, #372]	; (8005bf4 <_dtoa_r+0xa28>)
 8005a80:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005a82:	4213      	tst	r3, r2
 8005a84:	d007      	beq.n	8005a96 <_dtoa_r+0x8ca>
 8005a86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a88:	3301      	adds	r3, #1
 8005a8a:	930a      	str	r3, [sp, #40]	; 0x28
 8005a8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005a8e:	3301      	adds	r3, #1
 8005a90:	930d      	str	r3, [sp, #52]	; 0x34
 8005a92:	2301      	movs	r3, #1
 8005a94:	930e      	str	r3, [sp, #56]	; 0x38
 8005a96:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005a98:	2001      	movs	r0, #1
 8005a9a:	2b00      	cmp	r3, #0
 8005a9c:	d1bb      	bne.n	8005a16 <_dtoa_r+0x84a>
 8005a9e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005aa0:	221f      	movs	r2, #31
 8005aa2:	1818      	adds	r0, r3, r0
 8005aa4:	0003      	movs	r3, r0
 8005aa6:	4013      	ands	r3, r2
 8005aa8:	4210      	tst	r0, r2
 8005aaa:	d046      	beq.n	8005b3a <_dtoa_r+0x96e>
 8005aac:	3201      	adds	r2, #1
 8005aae:	1ad2      	subs	r2, r2, r3
 8005ab0:	2a04      	cmp	r2, #4
 8005ab2:	dd3f      	ble.n	8005b34 <_dtoa_r+0x968>
 8005ab4:	221c      	movs	r2, #28
 8005ab6:	1ad3      	subs	r3, r2, r3
 8005ab8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005aba:	18e4      	adds	r4, r4, r3
 8005abc:	18d2      	adds	r2, r2, r3
 8005abe:	920a      	str	r2, [sp, #40]	; 0x28
 8005ac0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005ac2:	18d3      	adds	r3, r2, r3
 8005ac4:	930d      	str	r3, [sp, #52]	; 0x34
 8005ac6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ac8:	2b00      	cmp	r3, #0
 8005aca:	dd05      	ble.n	8005ad8 <_dtoa_r+0x90c>
 8005acc:	001a      	movs	r2, r3
 8005ace:	0038      	movs	r0, r7
 8005ad0:	9905      	ldr	r1, [sp, #20]
 8005ad2:	f000 fbcd 	bl	8006270 <__lshift>
 8005ad6:	9005      	str	r0, [sp, #20]
 8005ad8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005ada:	2b00      	cmp	r3, #0
 8005adc:	dd05      	ble.n	8005aea <_dtoa_r+0x91e>
 8005ade:	0031      	movs	r1, r6
 8005ae0:	001a      	movs	r2, r3
 8005ae2:	0038      	movs	r0, r7
 8005ae4:	f000 fbc4 	bl	8006270 <__lshift>
 8005ae8:	0006      	movs	r6, r0
 8005aea:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005aec:	2b00      	cmp	r3, #0
 8005aee:	d026      	beq.n	8005b3e <_dtoa_r+0x972>
 8005af0:	0031      	movs	r1, r6
 8005af2:	9805      	ldr	r0, [sp, #20]
 8005af4:	f000 fc2a 	bl	800634c <__mcmp>
 8005af8:	2800      	cmp	r0, #0
 8005afa:	da20      	bge.n	8005b3e <_dtoa_r+0x972>
 8005afc:	9b02      	ldr	r3, [sp, #8]
 8005afe:	220a      	movs	r2, #10
 8005b00:	3b01      	subs	r3, #1
 8005b02:	9302      	str	r3, [sp, #8]
 8005b04:	0038      	movs	r0, r7
 8005b06:	2300      	movs	r3, #0
 8005b08:	9905      	ldr	r1, [sp, #20]
 8005b0a:	f000 fa03 	bl	8005f14 <__multadd>
 8005b0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005b10:	9005      	str	r0, [sp, #20]
 8005b12:	2b00      	cmp	r3, #0
 8005b14:	d100      	bne.n	8005b18 <_dtoa_r+0x94c>
 8005b16:	e166      	b.n	8005de6 <_dtoa_r+0xc1a>
 8005b18:	2300      	movs	r3, #0
 8005b1a:	0029      	movs	r1, r5
 8005b1c:	220a      	movs	r2, #10
 8005b1e:	0038      	movs	r0, r7
 8005b20:	f000 f9f8 	bl	8005f14 <__multadd>
 8005b24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005b26:	0005      	movs	r5, r0
 8005b28:	2b00      	cmp	r3, #0
 8005b2a:	dc47      	bgt.n	8005bbc <_dtoa_r+0x9f0>
 8005b2c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005b2e:	2b02      	cmp	r3, #2
 8005b30:	dc0d      	bgt.n	8005b4e <_dtoa_r+0x982>
 8005b32:	e043      	b.n	8005bbc <_dtoa_r+0x9f0>
 8005b34:	2a04      	cmp	r2, #4
 8005b36:	d0c6      	beq.n	8005ac6 <_dtoa_r+0x8fa>
 8005b38:	0013      	movs	r3, r2
 8005b3a:	331c      	adds	r3, #28
 8005b3c:	e7bc      	b.n	8005ab8 <_dtoa_r+0x8ec>
 8005b3e:	9b07      	ldr	r3, [sp, #28]
 8005b40:	2b00      	cmp	r3, #0
 8005b42:	dc35      	bgt.n	8005bb0 <_dtoa_r+0x9e4>
 8005b44:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005b46:	2b02      	cmp	r3, #2
 8005b48:	dd32      	ble.n	8005bb0 <_dtoa_r+0x9e4>
 8005b4a:	9b07      	ldr	r3, [sp, #28]
 8005b4c:	930c      	str	r3, [sp, #48]	; 0x30
 8005b4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005b50:	2b00      	cmp	r3, #0
 8005b52:	d10c      	bne.n	8005b6e <_dtoa_r+0x9a2>
 8005b54:	0031      	movs	r1, r6
 8005b56:	2205      	movs	r2, #5
 8005b58:	0038      	movs	r0, r7
 8005b5a:	f000 f9db 	bl	8005f14 <__multadd>
 8005b5e:	0006      	movs	r6, r0
 8005b60:	0001      	movs	r1, r0
 8005b62:	9805      	ldr	r0, [sp, #20]
 8005b64:	f000 fbf2 	bl	800634c <__mcmp>
 8005b68:	2800      	cmp	r0, #0
 8005b6a:	dd00      	ble.n	8005b6e <_dtoa_r+0x9a2>
 8005b6c:	e5a5      	b.n	80056ba <_dtoa_r+0x4ee>
 8005b6e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005b70:	43db      	mvns	r3, r3
 8005b72:	9302      	str	r3, [sp, #8]
 8005b74:	9b06      	ldr	r3, [sp, #24]
 8005b76:	9308      	str	r3, [sp, #32]
 8005b78:	2400      	movs	r4, #0
 8005b7a:	0031      	movs	r1, r6
 8005b7c:	0038      	movs	r0, r7
 8005b7e:	f000 f9a5 	bl	8005ecc <_Bfree>
 8005b82:	2d00      	cmp	r5, #0
 8005b84:	d100      	bne.n	8005b88 <_dtoa_r+0x9bc>
 8005b86:	e6b7      	b.n	80058f8 <_dtoa_r+0x72c>
 8005b88:	2c00      	cmp	r4, #0
 8005b8a:	d005      	beq.n	8005b98 <_dtoa_r+0x9cc>
 8005b8c:	42ac      	cmp	r4, r5
 8005b8e:	d003      	beq.n	8005b98 <_dtoa_r+0x9cc>
 8005b90:	0021      	movs	r1, r4
 8005b92:	0038      	movs	r0, r7
 8005b94:	f000 f99a 	bl	8005ecc <_Bfree>
 8005b98:	0029      	movs	r1, r5
 8005b9a:	0038      	movs	r0, r7
 8005b9c:	f000 f996 	bl	8005ecc <_Bfree>
 8005ba0:	e6aa      	b.n	80058f8 <_dtoa_r+0x72c>
 8005ba2:	2600      	movs	r6, #0
 8005ba4:	0035      	movs	r5, r6
 8005ba6:	e7e2      	b.n	8005b6e <_dtoa_r+0x9a2>
 8005ba8:	9602      	str	r6, [sp, #8]
 8005baa:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8005bac:	0035      	movs	r5, r6
 8005bae:	e584      	b.n	80056ba <_dtoa_r+0x4ee>
 8005bb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005bb2:	2b00      	cmp	r3, #0
 8005bb4:	d100      	bne.n	8005bb8 <_dtoa_r+0x9ec>
 8005bb6:	e0ce      	b.n	8005d56 <_dtoa_r+0xb8a>
 8005bb8:	9b07      	ldr	r3, [sp, #28]
 8005bba:	930c      	str	r3, [sp, #48]	; 0x30
 8005bbc:	2c00      	cmp	r4, #0
 8005bbe:	dd05      	ble.n	8005bcc <_dtoa_r+0xa00>
 8005bc0:	0029      	movs	r1, r5
 8005bc2:	0022      	movs	r2, r4
 8005bc4:	0038      	movs	r0, r7
 8005bc6:	f000 fb53 	bl	8006270 <__lshift>
 8005bca:	0005      	movs	r5, r0
 8005bcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005bce:	0028      	movs	r0, r5
 8005bd0:	2b00      	cmp	r3, #0
 8005bd2:	d022      	beq.n	8005c1a <_dtoa_r+0xa4e>
 8005bd4:	0038      	movs	r0, r7
 8005bd6:	6869      	ldr	r1, [r5, #4]
 8005bd8:	f000 f934 	bl	8005e44 <_Balloc>
 8005bdc:	1e04      	subs	r4, r0, #0
 8005bde:	d10f      	bne.n	8005c00 <_dtoa_r+0xa34>
 8005be0:	0002      	movs	r2, r0
 8005be2:	4b05      	ldr	r3, [pc, #20]	; (8005bf8 <_dtoa_r+0xa2c>)
 8005be4:	4905      	ldr	r1, [pc, #20]	; (8005bfc <_dtoa_r+0xa30>)
 8005be6:	f7ff fb06 	bl	80051f6 <_dtoa_r+0x2a>
 8005bea:	46c0      	nop			; (mov r8, r8)
 8005bec:	40240000 	.word	0x40240000
 8005bf0:	00000433 	.word	0x00000433
 8005bf4:	7ff00000 	.word	0x7ff00000
 8005bf8:	08007a3b 	.word	0x08007a3b
 8005bfc:	000002ea 	.word	0x000002ea
 8005c00:	0029      	movs	r1, r5
 8005c02:	692b      	ldr	r3, [r5, #16]
 8005c04:	310c      	adds	r1, #12
 8005c06:	1c9a      	adds	r2, r3, #2
 8005c08:	0092      	lsls	r2, r2, #2
 8005c0a:	300c      	adds	r0, #12
 8005c0c:	f000 f911 	bl	8005e32 <memcpy>
 8005c10:	2201      	movs	r2, #1
 8005c12:	0021      	movs	r1, r4
 8005c14:	0038      	movs	r0, r7
 8005c16:	f000 fb2b 	bl	8006270 <__lshift>
 8005c1a:	9b06      	ldr	r3, [sp, #24]
 8005c1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005c1e:	930a      	str	r3, [sp, #40]	; 0x28
 8005c20:	3b01      	subs	r3, #1
 8005c22:	189b      	adds	r3, r3, r2
 8005c24:	2201      	movs	r2, #1
 8005c26:	002c      	movs	r4, r5
 8005c28:	0005      	movs	r5, r0
 8005c2a:	9314      	str	r3, [sp, #80]	; 0x50
 8005c2c:	9b08      	ldr	r3, [sp, #32]
 8005c2e:	4013      	ands	r3, r2
 8005c30:	930f      	str	r3, [sp, #60]	; 0x3c
 8005c32:	0031      	movs	r1, r6
 8005c34:	9805      	ldr	r0, [sp, #20]
 8005c36:	f7ff fa3d 	bl	80050b4 <quorem>
 8005c3a:	0003      	movs	r3, r0
 8005c3c:	0021      	movs	r1, r4
 8005c3e:	3330      	adds	r3, #48	; 0x30
 8005c40:	900d      	str	r0, [sp, #52]	; 0x34
 8005c42:	9805      	ldr	r0, [sp, #20]
 8005c44:	9307      	str	r3, [sp, #28]
 8005c46:	f000 fb81 	bl	800634c <__mcmp>
 8005c4a:	002a      	movs	r2, r5
 8005c4c:	900e      	str	r0, [sp, #56]	; 0x38
 8005c4e:	0031      	movs	r1, r6
 8005c50:	0038      	movs	r0, r7
 8005c52:	f000 fb97 	bl	8006384 <__mdiff>
 8005c56:	68c3      	ldr	r3, [r0, #12]
 8005c58:	9008      	str	r0, [sp, #32]
 8005c5a:	9310      	str	r3, [sp, #64]	; 0x40
 8005c5c:	2301      	movs	r3, #1
 8005c5e:	930c      	str	r3, [sp, #48]	; 0x30
 8005c60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005c62:	2b00      	cmp	r3, #0
 8005c64:	d104      	bne.n	8005c70 <_dtoa_r+0xaa4>
 8005c66:	0001      	movs	r1, r0
 8005c68:	9805      	ldr	r0, [sp, #20]
 8005c6a:	f000 fb6f 	bl	800634c <__mcmp>
 8005c6e:	900c      	str	r0, [sp, #48]	; 0x30
 8005c70:	0038      	movs	r0, r7
 8005c72:	9908      	ldr	r1, [sp, #32]
 8005c74:	f000 f92a 	bl	8005ecc <_Bfree>
 8005c78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005c7a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005c7c:	3301      	adds	r3, #1
 8005c7e:	9308      	str	r3, [sp, #32]
 8005c80:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005c82:	4313      	orrs	r3, r2
 8005c84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005c86:	4313      	orrs	r3, r2
 8005c88:	d10c      	bne.n	8005ca4 <_dtoa_r+0xad8>
 8005c8a:	9b07      	ldr	r3, [sp, #28]
 8005c8c:	2b39      	cmp	r3, #57	; 0x39
 8005c8e:	d026      	beq.n	8005cde <_dtoa_r+0xb12>
 8005c90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005c92:	2b00      	cmp	r3, #0
 8005c94:	dd02      	ble.n	8005c9c <_dtoa_r+0xad0>
 8005c96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005c98:	3331      	adds	r3, #49	; 0x31
 8005c9a:	9307      	str	r3, [sp, #28]
 8005c9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005c9e:	9a07      	ldr	r2, [sp, #28]
 8005ca0:	701a      	strb	r2, [r3, #0]
 8005ca2:	e76a      	b.n	8005b7a <_dtoa_r+0x9ae>
 8005ca4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005ca6:	2b00      	cmp	r3, #0
 8005ca8:	db04      	blt.n	8005cb4 <_dtoa_r+0xae8>
 8005caa:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005cac:	4313      	orrs	r3, r2
 8005cae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005cb0:	4313      	orrs	r3, r2
 8005cb2:	d11f      	bne.n	8005cf4 <_dtoa_r+0xb28>
 8005cb4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005cb6:	2b00      	cmp	r3, #0
 8005cb8:	ddf0      	ble.n	8005c9c <_dtoa_r+0xad0>
 8005cba:	9905      	ldr	r1, [sp, #20]
 8005cbc:	2201      	movs	r2, #1
 8005cbe:	0038      	movs	r0, r7
 8005cc0:	f000 fad6 	bl	8006270 <__lshift>
 8005cc4:	0031      	movs	r1, r6
 8005cc6:	9005      	str	r0, [sp, #20]
 8005cc8:	f000 fb40 	bl	800634c <__mcmp>
 8005ccc:	2800      	cmp	r0, #0
 8005cce:	dc03      	bgt.n	8005cd8 <_dtoa_r+0xb0c>
 8005cd0:	d1e4      	bne.n	8005c9c <_dtoa_r+0xad0>
 8005cd2:	9b07      	ldr	r3, [sp, #28]
 8005cd4:	07db      	lsls	r3, r3, #31
 8005cd6:	d5e1      	bpl.n	8005c9c <_dtoa_r+0xad0>
 8005cd8:	9b07      	ldr	r3, [sp, #28]
 8005cda:	2b39      	cmp	r3, #57	; 0x39
 8005cdc:	d1db      	bne.n	8005c96 <_dtoa_r+0xaca>
 8005cde:	2339      	movs	r3, #57	; 0x39
 8005ce0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005ce2:	7013      	strb	r3, [r2, #0]
 8005ce4:	9b08      	ldr	r3, [sp, #32]
 8005ce6:	9308      	str	r3, [sp, #32]
 8005ce8:	3b01      	subs	r3, #1
 8005cea:	781a      	ldrb	r2, [r3, #0]
 8005cec:	2a39      	cmp	r2, #57	; 0x39
 8005cee:	d068      	beq.n	8005dc2 <_dtoa_r+0xbf6>
 8005cf0:	3201      	adds	r2, #1
 8005cf2:	e7d5      	b.n	8005ca0 <_dtoa_r+0xad4>
 8005cf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005cf6:	2b00      	cmp	r3, #0
 8005cf8:	dd07      	ble.n	8005d0a <_dtoa_r+0xb3e>
 8005cfa:	9b07      	ldr	r3, [sp, #28]
 8005cfc:	2b39      	cmp	r3, #57	; 0x39
 8005cfe:	d0ee      	beq.n	8005cde <_dtoa_r+0xb12>
 8005d00:	9b07      	ldr	r3, [sp, #28]
 8005d02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005d04:	3301      	adds	r3, #1
 8005d06:	7013      	strb	r3, [r2, #0]
 8005d08:	e737      	b.n	8005b7a <_dtoa_r+0x9ae>
 8005d0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005d0c:	9a07      	ldr	r2, [sp, #28]
 8005d0e:	701a      	strb	r2, [r3, #0]
 8005d10:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005d12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005d14:	4293      	cmp	r3, r2
 8005d16:	d03e      	beq.n	8005d96 <_dtoa_r+0xbca>
 8005d18:	2300      	movs	r3, #0
 8005d1a:	220a      	movs	r2, #10
 8005d1c:	9905      	ldr	r1, [sp, #20]
 8005d1e:	0038      	movs	r0, r7
 8005d20:	f000 f8f8 	bl	8005f14 <__multadd>
 8005d24:	2300      	movs	r3, #0
 8005d26:	9005      	str	r0, [sp, #20]
 8005d28:	220a      	movs	r2, #10
 8005d2a:	0021      	movs	r1, r4
 8005d2c:	0038      	movs	r0, r7
 8005d2e:	42ac      	cmp	r4, r5
 8005d30:	d106      	bne.n	8005d40 <_dtoa_r+0xb74>
 8005d32:	f000 f8ef 	bl	8005f14 <__multadd>
 8005d36:	0004      	movs	r4, r0
 8005d38:	0005      	movs	r5, r0
 8005d3a:	9b08      	ldr	r3, [sp, #32]
 8005d3c:	930a      	str	r3, [sp, #40]	; 0x28
 8005d3e:	e778      	b.n	8005c32 <_dtoa_r+0xa66>
 8005d40:	f000 f8e8 	bl	8005f14 <__multadd>
 8005d44:	0029      	movs	r1, r5
 8005d46:	0004      	movs	r4, r0
 8005d48:	2300      	movs	r3, #0
 8005d4a:	220a      	movs	r2, #10
 8005d4c:	0038      	movs	r0, r7
 8005d4e:	f000 f8e1 	bl	8005f14 <__multadd>
 8005d52:	0005      	movs	r5, r0
 8005d54:	e7f1      	b.n	8005d3a <_dtoa_r+0xb6e>
 8005d56:	9b07      	ldr	r3, [sp, #28]
 8005d58:	930c      	str	r3, [sp, #48]	; 0x30
 8005d5a:	2400      	movs	r4, #0
 8005d5c:	0031      	movs	r1, r6
 8005d5e:	9805      	ldr	r0, [sp, #20]
 8005d60:	f7ff f9a8 	bl	80050b4 <quorem>
 8005d64:	9b06      	ldr	r3, [sp, #24]
 8005d66:	3030      	adds	r0, #48	; 0x30
 8005d68:	5518      	strb	r0, [r3, r4]
 8005d6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005d6c:	3401      	adds	r4, #1
 8005d6e:	9007      	str	r0, [sp, #28]
 8005d70:	42a3      	cmp	r3, r4
 8005d72:	dd07      	ble.n	8005d84 <_dtoa_r+0xbb8>
 8005d74:	2300      	movs	r3, #0
 8005d76:	220a      	movs	r2, #10
 8005d78:	0038      	movs	r0, r7
 8005d7a:	9905      	ldr	r1, [sp, #20]
 8005d7c:	f000 f8ca 	bl	8005f14 <__multadd>
 8005d80:	9005      	str	r0, [sp, #20]
 8005d82:	e7eb      	b.n	8005d5c <_dtoa_r+0xb90>
 8005d84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005d86:	2001      	movs	r0, #1
 8005d88:	2b00      	cmp	r3, #0
 8005d8a:	dd00      	ble.n	8005d8e <_dtoa_r+0xbc2>
 8005d8c:	0018      	movs	r0, r3
 8005d8e:	2400      	movs	r4, #0
 8005d90:	9b06      	ldr	r3, [sp, #24]
 8005d92:	181b      	adds	r3, r3, r0
 8005d94:	9308      	str	r3, [sp, #32]
 8005d96:	9905      	ldr	r1, [sp, #20]
 8005d98:	2201      	movs	r2, #1
 8005d9a:	0038      	movs	r0, r7
 8005d9c:	f000 fa68 	bl	8006270 <__lshift>
 8005da0:	0031      	movs	r1, r6
 8005da2:	9005      	str	r0, [sp, #20]
 8005da4:	f000 fad2 	bl	800634c <__mcmp>
 8005da8:	2800      	cmp	r0, #0
 8005daa:	dc9b      	bgt.n	8005ce4 <_dtoa_r+0xb18>
 8005dac:	d102      	bne.n	8005db4 <_dtoa_r+0xbe8>
 8005dae:	9b07      	ldr	r3, [sp, #28]
 8005db0:	07db      	lsls	r3, r3, #31
 8005db2:	d497      	bmi.n	8005ce4 <_dtoa_r+0xb18>
 8005db4:	9b08      	ldr	r3, [sp, #32]
 8005db6:	9308      	str	r3, [sp, #32]
 8005db8:	3b01      	subs	r3, #1
 8005dba:	781a      	ldrb	r2, [r3, #0]
 8005dbc:	2a30      	cmp	r2, #48	; 0x30
 8005dbe:	d0fa      	beq.n	8005db6 <_dtoa_r+0xbea>
 8005dc0:	e6db      	b.n	8005b7a <_dtoa_r+0x9ae>
 8005dc2:	9a06      	ldr	r2, [sp, #24]
 8005dc4:	429a      	cmp	r2, r3
 8005dc6:	d18e      	bne.n	8005ce6 <_dtoa_r+0xb1a>
 8005dc8:	9b02      	ldr	r3, [sp, #8]
 8005dca:	3301      	adds	r3, #1
 8005dcc:	9302      	str	r3, [sp, #8]
 8005dce:	2331      	movs	r3, #49	; 0x31
 8005dd0:	e799      	b.n	8005d06 <_dtoa_r+0xb3a>
 8005dd2:	4b09      	ldr	r3, [pc, #36]	; (8005df8 <_dtoa_r+0xc2c>)
 8005dd4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005dd6:	9306      	str	r3, [sp, #24]
 8005dd8:	4b08      	ldr	r3, [pc, #32]	; (8005dfc <_dtoa_r+0xc30>)
 8005dda:	2a00      	cmp	r2, #0
 8005ddc:	d001      	beq.n	8005de2 <_dtoa_r+0xc16>
 8005dde:	f7ff fa3f 	bl	8005260 <_dtoa_r+0x94>
 8005de2:	f7ff fa3f 	bl	8005264 <_dtoa_r+0x98>
 8005de6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005de8:	2b00      	cmp	r3, #0
 8005dea:	dcb6      	bgt.n	8005d5a <_dtoa_r+0xb8e>
 8005dec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005dee:	2b02      	cmp	r3, #2
 8005df0:	dd00      	ble.n	8005df4 <_dtoa_r+0xc28>
 8005df2:	e6ac      	b.n	8005b4e <_dtoa_r+0x982>
 8005df4:	e7b1      	b.n	8005d5a <_dtoa_r+0xb8e>
 8005df6:	46c0      	nop			; (mov r8, r8)
 8005df8:	080079bc 	.word	0x080079bc
 8005dfc:	080079c4 	.word	0x080079c4

08005e00 <_localeconv_r>:
 8005e00:	4800      	ldr	r0, [pc, #0]	; (8005e04 <_localeconv_r+0x4>)
 8005e02:	4770      	bx	lr
 8005e04:	200001a0 	.word	0x200001a0

08005e08 <malloc>:
 8005e08:	b510      	push	{r4, lr}
 8005e0a:	4b03      	ldr	r3, [pc, #12]	; (8005e18 <malloc+0x10>)
 8005e0c:	0001      	movs	r1, r0
 8005e0e:	6818      	ldr	r0, [r3, #0]
 8005e10:	f000 fc4c 	bl	80066ac <_malloc_r>
 8005e14:	bd10      	pop	{r4, pc}
 8005e16:	46c0      	nop			; (mov r8, r8)
 8005e18:	2000004c 	.word	0x2000004c

08005e1c <memchr>:
 8005e1c:	b2c9      	uxtb	r1, r1
 8005e1e:	1882      	adds	r2, r0, r2
 8005e20:	4290      	cmp	r0, r2
 8005e22:	d101      	bne.n	8005e28 <memchr+0xc>
 8005e24:	2000      	movs	r0, #0
 8005e26:	4770      	bx	lr
 8005e28:	7803      	ldrb	r3, [r0, #0]
 8005e2a:	428b      	cmp	r3, r1
 8005e2c:	d0fb      	beq.n	8005e26 <memchr+0xa>
 8005e2e:	3001      	adds	r0, #1
 8005e30:	e7f6      	b.n	8005e20 <memchr+0x4>

08005e32 <memcpy>:
 8005e32:	2300      	movs	r3, #0
 8005e34:	b510      	push	{r4, lr}
 8005e36:	429a      	cmp	r2, r3
 8005e38:	d100      	bne.n	8005e3c <memcpy+0xa>
 8005e3a:	bd10      	pop	{r4, pc}
 8005e3c:	5ccc      	ldrb	r4, [r1, r3]
 8005e3e:	54c4      	strb	r4, [r0, r3]
 8005e40:	3301      	adds	r3, #1
 8005e42:	e7f8      	b.n	8005e36 <memcpy+0x4>

08005e44 <_Balloc>:
 8005e44:	b570      	push	{r4, r5, r6, lr}
 8005e46:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8005e48:	0006      	movs	r6, r0
 8005e4a:	000c      	movs	r4, r1
 8005e4c:	2d00      	cmp	r5, #0
 8005e4e:	d10e      	bne.n	8005e6e <_Balloc+0x2a>
 8005e50:	2010      	movs	r0, #16
 8005e52:	f7ff ffd9 	bl	8005e08 <malloc>
 8005e56:	1e02      	subs	r2, r0, #0
 8005e58:	6270      	str	r0, [r6, #36]	; 0x24
 8005e5a:	d104      	bne.n	8005e66 <_Balloc+0x22>
 8005e5c:	2166      	movs	r1, #102	; 0x66
 8005e5e:	4b19      	ldr	r3, [pc, #100]	; (8005ec4 <_Balloc+0x80>)
 8005e60:	4819      	ldr	r0, [pc, #100]	; (8005ec8 <_Balloc+0x84>)
 8005e62:	f000 fe0d 	bl	8006a80 <__assert_func>
 8005e66:	6045      	str	r5, [r0, #4]
 8005e68:	6085      	str	r5, [r0, #8]
 8005e6a:	6005      	str	r5, [r0, #0]
 8005e6c:	60c5      	str	r5, [r0, #12]
 8005e6e:	6a75      	ldr	r5, [r6, #36]	; 0x24
 8005e70:	68eb      	ldr	r3, [r5, #12]
 8005e72:	2b00      	cmp	r3, #0
 8005e74:	d013      	beq.n	8005e9e <_Balloc+0x5a>
 8005e76:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005e78:	00a2      	lsls	r2, r4, #2
 8005e7a:	68db      	ldr	r3, [r3, #12]
 8005e7c:	189b      	adds	r3, r3, r2
 8005e7e:	6818      	ldr	r0, [r3, #0]
 8005e80:	2800      	cmp	r0, #0
 8005e82:	d118      	bne.n	8005eb6 <_Balloc+0x72>
 8005e84:	2101      	movs	r1, #1
 8005e86:	000d      	movs	r5, r1
 8005e88:	40a5      	lsls	r5, r4
 8005e8a:	1d6a      	adds	r2, r5, #5
 8005e8c:	0030      	movs	r0, r6
 8005e8e:	0092      	lsls	r2, r2, #2
 8005e90:	f000 fb74 	bl	800657c <_calloc_r>
 8005e94:	2800      	cmp	r0, #0
 8005e96:	d00c      	beq.n	8005eb2 <_Balloc+0x6e>
 8005e98:	6044      	str	r4, [r0, #4]
 8005e9a:	6085      	str	r5, [r0, #8]
 8005e9c:	e00d      	b.n	8005eba <_Balloc+0x76>
 8005e9e:	2221      	movs	r2, #33	; 0x21
 8005ea0:	2104      	movs	r1, #4
 8005ea2:	0030      	movs	r0, r6
 8005ea4:	f000 fb6a 	bl	800657c <_calloc_r>
 8005ea8:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005eaa:	60e8      	str	r0, [r5, #12]
 8005eac:	68db      	ldr	r3, [r3, #12]
 8005eae:	2b00      	cmp	r3, #0
 8005eb0:	d1e1      	bne.n	8005e76 <_Balloc+0x32>
 8005eb2:	2000      	movs	r0, #0
 8005eb4:	bd70      	pop	{r4, r5, r6, pc}
 8005eb6:	6802      	ldr	r2, [r0, #0]
 8005eb8:	601a      	str	r2, [r3, #0]
 8005eba:	2300      	movs	r3, #0
 8005ebc:	6103      	str	r3, [r0, #16]
 8005ebe:	60c3      	str	r3, [r0, #12]
 8005ec0:	e7f8      	b.n	8005eb4 <_Balloc+0x70>
 8005ec2:	46c0      	nop			; (mov r8, r8)
 8005ec4:	080079c9 	.word	0x080079c9
 8005ec8:	08007a4c 	.word	0x08007a4c

08005ecc <_Bfree>:
 8005ecc:	b570      	push	{r4, r5, r6, lr}
 8005ece:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005ed0:	0005      	movs	r5, r0
 8005ed2:	000c      	movs	r4, r1
 8005ed4:	2e00      	cmp	r6, #0
 8005ed6:	d10e      	bne.n	8005ef6 <_Bfree+0x2a>
 8005ed8:	2010      	movs	r0, #16
 8005eda:	f7ff ff95 	bl	8005e08 <malloc>
 8005ede:	1e02      	subs	r2, r0, #0
 8005ee0:	6268      	str	r0, [r5, #36]	; 0x24
 8005ee2:	d104      	bne.n	8005eee <_Bfree+0x22>
 8005ee4:	218a      	movs	r1, #138	; 0x8a
 8005ee6:	4b09      	ldr	r3, [pc, #36]	; (8005f0c <_Bfree+0x40>)
 8005ee8:	4809      	ldr	r0, [pc, #36]	; (8005f10 <_Bfree+0x44>)
 8005eea:	f000 fdc9 	bl	8006a80 <__assert_func>
 8005eee:	6046      	str	r6, [r0, #4]
 8005ef0:	6086      	str	r6, [r0, #8]
 8005ef2:	6006      	str	r6, [r0, #0]
 8005ef4:	60c6      	str	r6, [r0, #12]
 8005ef6:	2c00      	cmp	r4, #0
 8005ef8:	d007      	beq.n	8005f0a <_Bfree+0x3e>
 8005efa:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005efc:	6862      	ldr	r2, [r4, #4]
 8005efe:	68db      	ldr	r3, [r3, #12]
 8005f00:	0092      	lsls	r2, r2, #2
 8005f02:	189b      	adds	r3, r3, r2
 8005f04:	681a      	ldr	r2, [r3, #0]
 8005f06:	6022      	str	r2, [r4, #0]
 8005f08:	601c      	str	r4, [r3, #0]
 8005f0a:	bd70      	pop	{r4, r5, r6, pc}
 8005f0c:	080079c9 	.word	0x080079c9
 8005f10:	08007a4c 	.word	0x08007a4c

08005f14 <__multadd>:
 8005f14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005f16:	000e      	movs	r6, r1
 8005f18:	9001      	str	r0, [sp, #4]
 8005f1a:	000c      	movs	r4, r1
 8005f1c:	001d      	movs	r5, r3
 8005f1e:	2000      	movs	r0, #0
 8005f20:	690f      	ldr	r7, [r1, #16]
 8005f22:	3614      	adds	r6, #20
 8005f24:	6833      	ldr	r3, [r6, #0]
 8005f26:	3001      	adds	r0, #1
 8005f28:	b299      	uxth	r1, r3
 8005f2a:	4351      	muls	r1, r2
 8005f2c:	0c1b      	lsrs	r3, r3, #16
 8005f2e:	4353      	muls	r3, r2
 8005f30:	1949      	adds	r1, r1, r5
 8005f32:	0c0d      	lsrs	r5, r1, #16
 8005f34:	195b      	adds	r3, r3, r5
 8005f36:	0c1d      	lsrs	r5, r3, #16
 8005f38:	b289      	uxth	r1, r1
 8005f3a:	041b      	lsls	r3, r3, #16
 8005f3c:	185b      	adds	r3, r3, r1
 8005f3e:	c608      	stmia	r6!, {r3}
 8005f40:	4287      	cmp	r7, r0
 8005f42:	dcef      	bgt.n	8005f24 <__multadd+0x10>
 8005f44:	2d00      	cmp	r5, #0
 8005f46:	d022      	beq.n	8005f8e <__multadd+0x7a>
 8005f48:	68a3      	ldr	r3, [r4, #8]
 8005f4a:	42bb      	cmp	r3, r7
 8005f4c:	dc19      	bgt.n	8005f82 <__multadd+0x6e>
 8005f4e:	6863      	ldr	r3, [r4, #4]
 8005f50:	9801      	ldr	r0, [sp, #4]
 8005f52:	1c59      	adds	r1, r3, #1
 8005f54:	f7ff ff76 	bl	8005e44 <_Balloc>
 8005f58:	1e06      	subs	r6, r0, #0
 8005f5a:	d105      	bne.n	8005f68 <__multadd+0x54>
 8005f5c:	0002      	movs	r2, r0
 8005f5e:	21b5      	movs	r1, #181	; 0xb5
 8005f60:	4b0c      	ldr	r3, [pc, #48]	; (8005f94 <__multadd+0x80>)
 8005f62:	480d      	ldr	r0, [pc, #52]	; (8005f98 <__multadd+0x84>)
 8005f64:	f000 fd8c 	bl	8006a80 <__assert_func>
 8005f68:	0021      	movs	r1, r4
 8005f6a:	6923      	ldr	r3, [r4, #16]
 8005f6c:	310c      	adds	r1, #12
 8005f6e:	1c9a      	adds	r2, r3, #2
 8005f70:	0092      	lsls	r2, r2, #2
 8005f72:	300c      	adds	r0, #12
 8005f74:	f7ff ff5d 	bl	8005e32 <memcpy>
 8005f78:	0021      	movs	r1, r4
 8005f7a:	9801      	ldr	r0, [sp, #4]
 8005f7c:	f7ff ffa6 	bl	8005ecc <_Bfree>
 8005f80:	0034      	movs	r4, r6
 8005f82:	1d3b      	adds	r3, r7, #4
 8005f84:	009b      	lsls	r3, r3, #2
 8005f86:	18e3      	adds	r3, r4, r3
 8005f88:	605d      	str	r5, [r3, #4]
 8005f8a:	1c7b      	adds	r3, r7, #1
 8005f8c:	6123      	str	r3, [r4, #16]
 8005f8e:	0020      	movs	r0, r4
 8005f90:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005f92:	46c0      	nop			; (mov r8, r8)
 8005f94:	08007a3b 	.word	0x08007a3b
 8005f98:	08007a4c 	.word	0x08007a4c

08005f9c <__hi0bits>:
 8005f9c:	0003      	movs	r3, r0
 8005f9e:	0c02      	lsrs	r2, r0, #16
 8005fa0:	2000      	movs	r0, #0
 8005fa2:	4282      	cmp	r2, r0
 8005fa4:	d101      	bne.n	8005faa <__hi0bits+0xe>
 8005fa6:	041b      	lsls	r3, r3, #16
 8005fa8:	3010      	adds	r0, #16
 8005faa:	0e1a      	lsrs	r2, r3, #24
 8005fac:	d101      	bne.n	8005fb2 <__hi0bits+0x16>
 8005fae:	3008      	adds	r0, #8
 8005fb0:	021b      	lsls	r3, r3, #8
 8005fb2:	0f1a      	lsrs	r2, r3, #28
 8005fb4:	d101      	bne.n	8005fba <__hi0bits+0x1e>
 8005fb6:	3004      	adds	r0, #4
 8005fb8:	011b      	lsls	r3, r3, #4
 8005fba:	0f9a      	lsrs	r2, r3, #30
 8005fbc:	d101      	bne.n	8005fc2 <__hi0bits+0x26>
 8005fbe:	3002      	adds	r0, #2
 8005fc0:	009b      	lsls	r3, r3, #2
 8005fc2:	2b00      	cmp	r3, #0
 8005fc4:	db03      	blt.n	8005fce <__hi0bits+0x32>
 8005fc6:	3001      	adds	r0, #1
 8005fc8:	005b      	lsls	r3, r3, #1
 8005fca:	d400      	bmi.n	8005fce <__hi0bits+0x32>
 8005fcc:	2020      	movs	r0, #32
 8005fce:	4770      	bx	lr

08005fd0 <__lo0bits>:
 8005fd0:	6803      	ldr	r3, [r0, #0]
 8005fd2:	0002      	movs	r2, r0
 8005fd4:	2107      	movs	r1, #7
 8005fd6:	0018      	movs	r0, r3
 8005fd8:	4008      	ands	r0, r1
 8005fda:	420b      	tst	r3, r1
 8005fdc:	d00d      	beq.n	8005ffa <__lo0bits+0x2a>
 8005fde:	3906      	subs	r1, #6
 8005fe0:	2000      	movs	r0, #0
 8005fe2:	420b      	tst	r3, r1
 8005fe4:	d105      	bne.n	8005ff2 <__lo0bits+0x22>
 8005fe6:	3002      	adds	r0, #2
 8005fe8:	4203      	tst	r3, r0
 8005fea:	d003      	beq.n	8005ff4 <__lo0bits+0x24>
 8005fec:	40cb      	lsrs	r3, r1
 8005fee:	0008      	movs	r0, r1
 8005ff0:	6013      	str	r3, [r2, #0]
 8005ff2:	4770      	bx	lr
 8005ff4:	089b      	lsrs	r3, r3, #2
 8005ff6:	6013      	str	r3, [r2, #0]
 8005ff8:	e7fb      	b.n	8005ff2 <__lo0bits+0x22>
 8005ffa:	b299      	uxth	r1, r3
 8005ffc:	2900      	cmp	r1, #0
 8005ffe:	d101      	bne.n	8006004 <__lo0bits+0x34>
 8006000:	2010      	movs	r0, #16
 8006002:	0c1b      	lsrs	r3, r3, #16
 8006004:	b2d9      	uxtb	r1, r3
 8006006:	2900      	cmp	r1, #0
 8006008:	d101      	bne.n	800600e <__lo0bits+0x3e>
 800600a:	3008      	adds	r0, #8
 800600c:	0a1b      	lsrs	r3, r3, #8
 800600e:	0719      	lsls	r1, r3, #28
 8006010:	d101      	bne.n	8006016 <__lo0bits+0x46>
 8006012:	3004      	adds	r0, #4
 8006014:	091b      	lsrs	r3, r3, #4
 8006016:	0799      	lsls	r1, r3, #30
 8006018:	d101      	bne.n	800601e <__lo0bits+0x4e>
 800601a:	3002      	adds	r0, #2
 800601c:	089b      	lsrs	r3, r3, #2
 800601e:	07d9      	lsls	r1, r3, #31
 8006020:	d4e9      	bmi.n	8005ff6 <__lo0bits+0x26>
 8006022:	3001      	adds	r0, #1
 8006024:	085b      	lsrs	r3, r3, #1
 8006026:	d1e6      	bne.n	8005ff6 <__lo0bits+0x26>
 8006028:	2020      	movs	r0, #32
 800602a:	e7e2      	b.n	8005ff2 <__lo0bits+0x22>

0800602c <__i2b>:
 800602c:	b510      	push	{r4, lr}
 800602e:	000c      	movs	r4, r1
 8006030:	2101      	movs	r1, #1
 8006032:	f7ff ff07 	bl	8005e44 <_Balloc>
 8006036:	2800      	cmp	r0, #0
 8006038:	d106      	bne.n	8006048 <__i2b+0x1c>
 800603a:	21a0      	movs	r1, #160	; 0xa0
 800603c:	0002      	movs	r2, r0
 800603e:	4b04      	ldr	r3, [pc, #16]	; (8006050 <__i2b+0x24>)
 8006040:	4804      	ldr	r0, [pc, #16]	; (8006054 <__i2b+0x28>)
 8006042:	0049      	lsls	r1, r1, #1
 8006044:	f000 fd1c 	bl	8006a80 <__assert_func>
 8006048:	2301      	movs	r3, #1
 800604a:	6144      	str	r4, [r0, #20]
 800604c:	6103      	str	r3, [r0, #16]
 800604e:	bd10      	pop	{r4, pc}
 8006050:	08007a3b 	.word	0x08007a3b
 8006054:	08007a4c 	.word	0x08007a4c

08006058 <__multiply>:
 8006058:	b5f0      	push	{r4, r5, r6, r7, lr}
 800605a:	690b      	ldr	r3, [r1, #16]
 800605c:	0014      	movs	r4, r2
 800605e:	6912      	ldr	r2, [r2, #16]
 8006060:	000d      	movs	r5, r1
 8006062:	b089      	sub	sp, #36	; 0x24
 8006064:	4293      	cmp	r3, r2
 8006066:	da01      	bge.n	800606c <__multiply+0x14>
 8006068:	0025      	movs	r5, r4
 800606a:	000c      	movs	r4, r1
 800606c:	692f      	ldr	r7, [r5, #16]
 800606e:	6926      	ldr	r6, [r4, #16]
 8006070:	6869      	ldr	r1, [r5, #4]
 8006072:	19bb      	adds	r3, r7, r6
 8006074:	9302      	str	r3, [sp, #8]
 8006076:	68ab      	ldr	r3, [r5, #8]
 8006078:	19ba      	adds	r2, r7, r6
 800607a:	4293      	cmp	r3, r2
 800607c:	da00      	bge.n	8006080 <__multiply+0x28>
 800607e:	3101      	adds	r1, #1
 8006080:	f7ff fee0 	bl	8005e44 <_Balloc>
 8006084:	9001      	str	r0, [sp, #4]
 8006086:	2800      	cmp	r0, #0
 8006088:	d106      	bne.n	8006098 <__multiply+0x40>
 800608a:	215e      	movs	r1, #94	; 0x5e
 800608c:	0002      	movs	r2, r0
 800608e:	4b48      	ldr	r3, [pc, #288]	; (80061b0 <__multiply+0x158>)
 8006090:	4848      	ldr	r0, [pc, #288]	; (80061b4 <__multiply+0x15c>)
 8006092:	31ff      	adds	r1, #255	; 0xff
 8006094:	f000 fcf4 	bl	8006a80 <__assert_func>
 8006098:	9b01      	ldr	r3, [sp, #4]
 800609a:	2200      	movs	r2, #0
 800609c:	3314      	adds	r3, #20
 800609e:	469c      	mov	ip, r3
 80060a0:	19bb      	adds	r3, r7, r6
 80060a2:	009b      	lsls	r3, r3, #2
 80060a4:	4463      	add	r3, ip
 80060a6:	9303      	str	r3, [sp, #12]
 80060a8:	4663      	mov	r3, ip
 80060aa:	9903      	ldr	r1, [sp, #12]
 80060ac:	428b      	cmp	r3, r1
 80060ae:	d32c      	bcc.n	800610a <__multiply+0xb2>
 80060b0:	002b      	movs	r3, r5
 80060b2:	0022      	movs	r2, r4
 80060b4:	3314      	adds	r3, #20
 80060b6:	00bf      	lsls	r7, r7, #2
 80060b8:	3214      	adds	r2, #20
 80060ba:	9306      	str	r3, [sp, #24]
 80060bc:	00b6      	lsls	r6, r6, #2
 80060be:	19db      	adds	r3, r3, r7
 80060c0:	9304      	str	r3, [sp, #16]
 80060c2:	1993      	adds	r3, r2, r6
 80060c4:	9307      	str	r3, [sp, #28]
 80060c6:	2304      	movs	r3, #4
 80060c8:	9305      	str	r3, [sp, #20]
 80060ca:	002b      	movs	r3, r5
 80060cc:	9904      	ldr	r1, [sp, #16]
 80060ce:	3315      	adds	r3, #21
 80060d0:	9200      	str	r2, [sp, #0]
 80060d2:	4299      	cmp	r1, r3
 80060d4:	d305      	bcc.n	80060e2 <__multiply+0x8a>
 80060d6:	1b4b      	subs	r3, r1, r5
 80060d8:	3b15      	subs	r3, #21
 80060da:	089b      	lsrs	r3, r3, #2
 80060dc:	3301      	adds	r3, #1
 80060de:	009b      	lsls	r3, r3, #2
 80060e0:	9305      	str	r3, [sp, #20]
 80060e2:	9b07      	ldr	r3, [sp, #28]
 80060e4:	9a00      	ldr	r2, [sp, #0]
 80060e6:	429a      	cmp	r2, r3
 80060e8:	d311      	bcc.n	800610e <__multiply+0xb6>
 80060ea:	9b02      	ldr	r3, [sp, #8]
 80060ec:	2b00      	cmp	r3, #0
 80060ee:	dd06      	ble.n	80060fe <__multiply+0xa6>
 80060f0:	9b03      	ldr	r3, [sp, #12]
 80060f2:	3b04      	subs	r3, #4
 80060f4:	9303      	str	r3, [sp, #12]
 80060f6:	681b      	ldr	r3, [r3, #0]
 80060f8:	9300      	str	r3, [sp, #0]
 80060fa:	2b00      	cmp	r3, #0
 80060fc:	d053      	beq.n	80061a6 <__multiply+0x14e>
 80060fe:	9b01      	ldr	r3, [sp, #4]
 8006100:	9a02      	ldr	r2, [sp, #8]
 8006102:	0018      	movs	r0, r3
 8006104:	611a      	str	r2, [r3, #16]
 8006106:	b009      	add	sp, #36	; 0x24
 8006108:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800610a:	c304      	stmia	r3!, {r2}
 800610c:	e7cd      	b.n	80060aa <__multiply+0x52>
 800610e:	9b00      	ldr	r3, [sp, #0]
 8006110:	681b      	ldr	r3, [r3, #0]
 8006112:	b298      	uxth	r0, r3
 8006114:	2800      	cmp	r0, #0
 8006116:	d01b      	beq.n	8006150 <__multiply+0xf8>
 8006118:	4667      	mov	r7, ip
 800611a:	2400      	movs	r4, #0
 800611c:	9e06      	ldr	r6, [sp, #24]
 800611e:	ce02      	ldmia	r6!, {r1}
 8006120:	683a      	ldr	r2, [r7, #0]
 8006122:	b28b      	uxth	r3, r1
 8006124:	4343      	muls	r3, r0
 8006126:	b292      	uxth	r2, r2
 8006128:	189b      	adds	r3, r3, r2
 800612a:	191b      	adds	r3, r3, r4
 800612c:	0c0c      	lsrs	r4, r1, #16
 800612e:	4344      	muls	r4, r0
 8006130:	683a      	ldr	r2, [r7, #0]
 8006132:	0c11      	lsrs	r1, r2, #16
 8006134:	1861      	adds	r1, r4, r1
 8006136:	0c1c      	lsrs	r4, r3, #16
 8006138:	1909      	adds	r1, r1, r4
 800613a:	0c0c      	lsrs	r4, r1, #16
 800613c:	b29b      	uxth	r3, r3
 800613e:	0409      	lsls	r1, r1, #16
 8006140:	430b      	orrs	r3, r1
 8006142:	c708      	stmia	r7!, {r3}
 8006144:	9b04      	ldr	r3, [sp, #16]
 8006146:	42b3      	cmp	r3, r6
 8006148:	d8e9      	bhi.n	800611e <__multiply+0xc6>
 800614a:	4663      	mov	r3, ip
 800614c:	9a05      	ldr	r2, [sp, #20]
 800614e:	509c      	str	r4, [r3, r2]
 8006150:	9b00      	ldr	r3, [sp, #0]
 8006152:	681b      	ldr	r3, [r3, #0]
 8006154:	0c1e      	lsrs	r6, r3, #16
 8006156:	d020      	beq.n	800619a <__multiply+0x142>
 8006158:	4663      	mov	r3, ip
 800615a:	002c      	movs	r4, r5
 800615c:	4660      	mov	r0, ip
 800615e:	2700      	movs	r7, #0
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	3414      	adds	r4, #20
 8006164:	6822      	ldr	r2, [r4, #0]
 8006166:	b29b      	uxth	r3, r3
 8006168:	b291      	uxth	r1, r2
 800616a:	4371      	muls	r1, r6
 800616c:	6802      	ldr	r2, [r0, #0]
 800616e:	0c12      	lsrs	r2, r2, #16
 8006170:	1889      	adds	r1, r1, r2
 8006172:	19cf      	adds	r7, r1, r7
 8006174:	0439      	lsls	r1, r7, #16
 8006176:	430b      	orrs	r3, r1
 8006178:	6003      	str	r3, [r0, #0]
 800617a:	cc02      	ldmia	r4!, {r1}
 800617c:	6843      	ldr	r3, [r0, #4]
 800617e:	0c09      	lsrs	r1, r1, #16
 8006180:	4371      	muls	r1, r6
 8006182:	b29b      	uxth	r3, r3
 8006184:	0c3f      	lsrs	r7, r7, #16
 8006186:	18cb      	adds	r3, r1, r3
 8006188:	9a04      	ldr	r2, [sp, #16]
 800618a:	19db      	adds	r3, r3, r7
 800618c:	0c1f      	lsrs	r7, r3, #16
 800618e:	3004      	adds	r0, #4
 8006190:	42a2      	cmp	r2, r4
 8006192:	d8e7      	bhi.n	8006164 <__multiply+0x10c>
 8006194:	4662      	mov	r2, ip
 8006196:	9905      	ldr	r1, [sp, #20]
 8006198:	5053      	str	r3, [r2, r1]
 800619a:	9b00      	ldr	r3, [sp, #0]
 800619c:	3304      	adds	r3, #4
 800619e:	9300      	str	r3, [sp, #0]
 80061a0:	2304      	movs	r3, #4
 80061a2:	449c      	add	ip, r3
 80061a4:	e79d      	b.n	80060e2 <__multiply+0x8a>
 80061a6:	9b02      	ldr	r3, [sp, #8]
 80061a8:	3b01      	subs	r3, #1
 80061aa:	9302      	str	r3, [sp, #8]
 80061ac:	e79d      	b.n	80060ea <__multiply+0x92>
 80061ae:	46c0      	nop			; (mov r8, r8)
 80061b0:	08007a3b 	.word	0x08007a3b
 80061b4:	08007a4c 	.word	0x08007a4c

080061b8 <__pow5mult>:
 80061b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80061ba:	2303      	movs	r3, #3
 80061bc:	0015      	movs	r5, r2
 80061be:	0007      	movs	r7, r0
 80061c0:	000e      	movs	r6, r1
 80061c2:	401a      	ands	r2, r3
 80061c4:	421d      	tst	r5, r3
 80061c6:	d008      	beq.n	80061da <__pow5mult+0x22>
 80061c8:	4925      	ldr	r1, [pc, #148]	; (8006260 <__pow5mult+0xa8>)
 80061ca:	3a01      	subs	r2, #1
 80061cc:	0092      	lsls	r2, r2, #2
 80061ce:	5852      	ldr	r2, [r2, r1]
 80061d0:	2300      	movs	r3, #0
 80061d2:	0031      	movs	r1, r6
 80061d4:	f7ff fe9e 	bl	8005f14 <__multadd>
 80061d8:	0006      	movs	r6, r0
 80061da:	10ad      	asrs	r5, r5, #2
 80061dc:	d03d      	beq.n	800625a <__pow5mult+0xa2>
 80061de:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 80061e0:	2c00      	cmp	r4, #0
 80061e2:	d10f      	bne.n	8006204 <__pow5mult+0x4c>
 80061e4:	2010      	movs	r0, #16
 80061e6:	f7ff fe0f 	bl	8005e08 <malloc>
 80061ea:	1e02      	subs	r2, r0, #0
 80061ec:	6278      	str	r0, [r7, #36]	; 0x24
 80061ee:	d105      	bne.n	80061fc <__pow5mult+0x44>
 80061f0:	21d7      	movs	r1, #215	; 0xd7
 80061f2:	4b1c      	ldr	r3, [pc, #112]	; (8006264 <__pow5mult+0xac>)
 80061f4:	481c      	ldr	r0, [pc, #112]	; (8006268 <__pow5mult+0xb0>)
 80061f6:	0049      	lsls	r1, r1, #1
 80061f8:	f000 fc42 	bl	8006a80 <__assert_func>
 80061fc:	6044      	str	r4, [r0, #4]
 80061fe:	6084      	str	r4, [r0, #8]
 8006200:	6004      	str	r4, [r0, #0]
 8006202:	60c4      	str	r4, [r0, #12]
 8006204:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006206:	689c      	ldr	r4, [r3, #8]
 8006208:	9301      	str	r3, [sp, #4]
 800620a:	2c00      	cmp	r4, #0
 800620c:	d108      	bne.n	8006220 <__pow5mult+0x68>
 800620e:	0038      	movs	r0, r7
 8006210:	4916      	ldr	r1, [pc, #88]	; (800626c <__pow5mult+0xb4>)
 8006212:	f7ff ff0b 	bl	800602c <__i2b>
 8006216:	9b01      	ldr	r3, [sp, #4]
 8006218:	0004      	movs	r4, r0
 800621a:	6098      	str	r0, [r3, #8]
 800621c:	2300      	movs	r3, #0
 800621e:	6003      	str	r3, [r0, #0]
 8006220:	2301      	movs	r3, #1
 8006222:	421d      	tst	r5, r3
 8006224:	d00a      	beq.n	800623c <__pow5mult+0x84>
 8006226:	0031      	movs	r1, r6
 8006228:	0022      	movs	r2, r4
 800622a:	0038      	movs	r0, r7
 800622c:	f7ff ff14 	bl	8006058 <__multiply>
 8006230:	0031      	movs	r1, r6
 8006232:	9001      	str	r0, [sp, #4]
 8006234:	0038      	movs	r0, r7
 8006236:	f7ff fe49 	bl	8005ecc <_Bfree>
 800623a:	9e01      	ldr	r6, [sp, #4]
 800623c:	106d      	asrs	r5, r5, #1
 800623e:	d00c      	beq.n	800625a <__pow5mult+0xa2>
 8006240:	6820      	ldr	r0, [r4, #0]
 8006242:	2800      	cmp	r0, #0
 8006244:	d107      	bne.n	8006256 <__pow5mult+0x9e>
 8006246:	0022      	movs	r2, r4
 8006248:	0021      	movs	r1, r4
 800624a:	0038      	movs	r0, r7
 800624c:	f7ff ff04 	bl	8006058 <__multiply>
 8006250:	2300      	movs	r3, #0
 8006252:	6020      	str	r0, [r4, #0]
 8006254:	6003      	str	r3, [r0, #0]
 8006256:	0004      	movs	r4, r0
 8006258:	e7e2      	b.n	8006220 <__pow5mult+0x68>
 800625a:	0030      	movs	r0, r6
 800625c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800625e:	46c0      	nop			; (mov r8, r8)
 8006260:	08007b98 	.word	0x08007b98
 8006264:	080079c9 	.word	0x080079c9
 8006268:	08007a4c 	.word	0x08007a4c
 800626c:	00000271 	.word	0x00000271

08006270 <__lshift>:
 8006270:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006272:	000c      	movs	r4, r1
 8006274:	0017      	movs	r7, r2
 8006276:	6923      	ldr	r3, [r4, #16]
 8006278:	1155      	asrs	r5, r2, #5
 800627a:	b087      	sub	sp, #28
 800627c:	18eb      	adds	r3, r5, r3
 800627e:	9302      	str	r3, [sp, #8]
 8006280:	3301      	adds	r3, #1
 8006282:	9301      	str	r3, [sp, #4]
 8006284:	6849      	ldr	r1, [r1, #4]
 8006286:	68a3      	ldr	r3, [r4, #8]
 8006288:	9004      	str	r0, [sp, #16]
 800628a:	9a01      	ldr	r2, [sp, #4]
 800628c:	4293      	cmp	r3, r2
 800628e:	db10      	blt.n	80062b2 <__lshift+0x42>
 8006290:	9804      	ldr	r0, [sp, #16]
 8006292:	f7ff fdd7 	bl	8005e44 <_Balloc>
 8006296:	2300      	movs	r3, #0
 8006298:	0002      	movs	r2, r0
 800629a:	0006      	movs	r6, r0
 800629c:	0019      	movs	r1, r3
 800629e:	3214      	adds	r2, #20
 80062a0:	4298      	cmp	r0, r3
 80062a2:	d10c      	bne.n	80062be <__lshift+0x4e>
 80062a4:	21da      	movs	r1, #218	; 0xda
 80062a6:	0002      	movs	r2, r0
 80062a8:	4b26      	ldr	r3, [pc, #152]	; (8006344 <__lshift+0xd4>)
 80062aa:	4827      	ldr	r0, [pc, #156]	; (8006348 <__lshift+0xd8>)
 80062ac:	31ff      	adds	r1, #255	; 0xff
 80062ae:	f000 fbe7 	bl	8006a80 <__assert_func>
 80062b2:	3101      	adds	r1, #1
 80062b4:	005b      	lsls	r3, r3, #1
 80062b6:	e7e8      	b.n	800628a <__lshift+0x1a>
 80062b8:	0098      	lsls	r0, r3, #2
 80062ba:	5011      	str	r1, [r2, r0]
 80062bc:	3301      	adds	r3, #1
 80062be:	42ab      	cmp	r3, r5
 80062c0:	dbfa      	blt.n	80062b8 <__lshift+0x48>
 80062c2:	43eb      	mvns	r3, r5
 80062c4:	17db      	asrs	r3, r3, #31
 80062c6:	401d      	ands	r5, r3
 80062c8:	211f      	movs	r1, #31
 80062ca:	0023      	movs	r3, r4
 80062cc:	0038      	movs	r0, r7
 80062ce:	00ad      	lsls	r5, r5, #2
 80062d0:	1955      	adds	r5, r2, r5
 80062d2:	6922      	ldr	r2, [r4, #16]
 80062d4:	3314      	adds	r3, #20
 80062d6:	0092      	lsls	r2, r2, #2
 80062d8:	4008      	ands	r0, r1
 80062da:	4684      	mov	ip, r0
 80062dc:	189a      	adds	r2, r3, r2
 80062de:	420f      	tst	r7, r1
 80062e0:	d02a      	beq.n	8006338 <__lshift+0xc8>
 80062e2:	3101      	adds	r1, #1
 80062e4:	1a09      	subs	r1, r1, r0
 80062e6:	9105      	str	r1, [sp, #20]
 80062e8:	2100      	movs	r1, #0
 80062ea:	9503      	str	r5, [sp, #12]
 80062ec:	4667      	mov	r7, ip
 80062ee:	6818      	ldr	r0, [r3, #0]
 80062f0:	40b8      	lsls	r0, r7
 80062f2:	4301      	orrs	r1, r0
 80062f4:	9803      	ldr	r0, [sp, #12]
 80062f6:	c002      	stmia	r0!, {r1}
 80062f8:	cb02      	ldmia	r3!, {r1}
 80062fa:	9003      	str	r0, [sp, #12]
 80062fc:	9805      	ldr	r0, [sp, #20]
 80062fe:	40c1      	lsrs	r1, r0
 8006300:	429a      	cmp	r2, r3
 8006302:	d8f3      	bhi.n	80062ec <__lshift+0x7c>
 8006304:	0020      	movs	r0, r4
 8006306:	3015      	adds	r0, #21
 8006308:	2304      	movs	r3, #4
 800630a:	4282      	cmp	r2, r0
 800630c:	d304      	bcc.n	8006318 <__lshift+0xa8>
 800630e:	1b13      	subs	r3, r2, r4
 8006310:	3b15      	subs	r3, #21
 8006312:	089b      	lsrs	r3, r3, #2
 8006314:	3301      	adds	r3, #1
 8006316:	009b      	lsls	r3, r3, #2
 8006318:	50e9      	str	r1, [r5, r3]
 800631a:	2900      	cmp	r1, #0
 800631c:	d002      	beq.n	8006324 <__lshift+0xb4>
 800631e:	9b02      	ldr	r3, [sp, #8]
 8006320:	3302      	adds	r3, #2
 8006322:	9301      	str	r3, [sp, #4]
 8006324:	9b01      	ldr	r3, [sp, #4]
 8006326:	9804      	ldr	r0, [sp, #16]
 8006328:	3b01      	subs	r3, #1
 800632a:	0021      	movs	r1, r4
 800632c:	6133      	str	r3, [r6, #16]
 800632e:	f7ff fdcd 	bl	8005ecc <_Bfree>
 8006332:	0030      	movs	r0, r6
 8006334:	b007      	add	sp, #28
 8006336:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006338:	cb02      	ldmia	r3!, {r1}
 800633a:	c502      	stmia	r5!, {r1}
 800633c:	429a      	cmp	r2, r3
 800633e:	d8fb      	bhi.n	8006338 <__lshift+0xc8>
 8006340:	e7f0      	b.n	8006324 <__lshift+0xb4>
 8006342:	46c0      	nop			; (mov r8, r8)
 8006344:	08007a3b 	.word	0x08007a3b
 8006348:	08007a4c 	.word	0x08007a4c

0800634c <__mcmp>:
 800634c:	6902      	ldr	r2, [r0, #16]
 800634e:	690b      	ldr	r3, [r1, #16]
 8006350:	b530      	push	{r4, r5, lr}
 8006352:	0004      	movs	r4, r0
 8006354:	1ad0      	subs	r0, r2, r3
 8006356:	429a      	cmp	r2, r3
 8006358:	d10d      	bne.n	8006376 <__mcmp+0x2a>
 800635a:	009b      	lsls	r3, r3, #2
 800635c:	3414      	adds	r4, #20
 800635e:	3114      	adds	r1, #20
 8006360:	18e2      	adds	r2, r4, r3
 8006362:	18c9      	adds	r1, r1, r3
 8006364:	3a04      	subs	r2, #4
 8006366:	3904      	subs	r1, #4
 8006368:	6815      	ldr	r5, [r2, #0]
 800636a:	680b      	ldr	r3, [r1, #0]
 800636c:	429d      	cmp	r5, r3
 800636e:	d003      	beq.n	8006378 <__mcmp+0x2c>
 8006370:	2001      	movs	r0, #1
 8006372:	429d      	cmp	r5, r3
 8006374:	d303      	bcc.n	800637e <__mcmp+0x32>
 8006376:	bd30      	pop	{r4, r5, pc}
 8006378:	4294      	cmp	r4, r2
 800637a:	d3f3      	bcc.n	8006364 <__mcmp+0x18>
 800637c:	e7fb      	b.n	8006376 <__mcmp+0x2a>
 800637e:	4240      	negs	r0, r0
 8006380:	e7f9      	b.n	8006376 <__mcmp+0x2a>
	...

08006384 <__mdiff>:
 8006384:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006386:	000e      	movs	r6, r1
 8006388:	0007      	movs	r7, r0
 800638a:	0011      	movs	r1, r2
 800638c:	0030      	movs	r0, r6
 800638e:	b087      	sub	sp, #28
 8006390:	0014      	movs	r4, r2
 8006392:	f7ff ffdb 	bl	800634c <__mcmp>
 8006396:	1e05      	subs	r5, r0, #0
 8006398:	d110      	bne.n	80063bc <__mdiff+0x38>
 800639a:	0001      	movs	r1, r0
 800639c:	0038      	movs	r0, r7
 800639e:	f7ff fd51 	bl	8005e44 <_Balloc>
 80063a2:	1e02      	subs	r2, r0, #0
 80063a4:	d104      	bne.n	80063b0 <__mdiff+0x2c>
 80063a6:	4b40      	ldr	r3, [pc, #256]	; (80064a8 <__mdiff+0x124>)
 80063a8:	4940      	ldr	r1, [pc, #256]	; (80064ac <__mdiff+0x128>)
 80063aa:	4841      	ldr	r0, [pc, #260]	; (80064b0 <__mdiff+0x12c>)
 80063ac:	f000 fb68 	bl	8006a80 <__assert_func>
 80063b0:	2301      	movs	r3, #1
 80063b2:	6145      	str	r5, [r0, #20]
 80063b4:	6103      	str	r3, [r0, #16]
 80063b6:	0010      	movs	r0, r2
 80063b8:	b007      	add	sp, #28
 80063ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063bc:	2301      	movs	r3, #1
 80063be:	9301      	str	r3, [sp, #4]
 80063c0:	2800      	cmp	r0, #0
 80063c2:	db04      	blt.n	80063ce <__mdiff+0x4a>
 80063c4:	0023      	movs	r3, r4
 80063c6:	0034      	movs	r4, r6
 80063c8:	001e      	movs	r6, r3
 80063ca:	2300      	movs	r3, #0
 80063cc:	9301      	str	r3, [sp, #4]
 80063ce:	0038      	movs	r0, r7
 80063d0:	6861      	ldr	r1, [r4, #4]
 80063d2:	f7ff fd37 	bl	8005e44 <_Balloc>
 80063d6:	1e02      	subs	r2, r0, #0
 80063d8:	d103      	bne.n	80063e2 <__mdiff+0x5e>
 80063da:	2190      	movs	r1, #144	; 0x90
 80063dc:	4b32      	ldr	r3, [pc, #200]	; (80064a8 <__mdiff+0x124>)
 80063de:	0089      	lsls	r1, r1, #2
 80063e0:	e7e3      	b.n	80063aa <__mdiff+0x26>
 80063e2:	9b01      	ldr	r3, [sp, #4]
 80063e4:	2700      	movs	r7, #0
 80063e6:	60c3      	str	r3, [r0, #12]
 80063e8:	6920      	ldr	r0, [r4, #16]
 80063ea:	3414      	adds	r4, #20
 80063ec:	9401      	str	r4, [sp, #4]
 80063ee:	9b01      	ldr	r3, [sp, #4]
 80063f0:	0084      	lsls	r4, r0, #2
 80063f2:	191b      	adds	r3, r3, r4
 80063f4:	0034      	movs	r4, r6
 80063f6:	9302      	str	r3, [sp, #8]
 80063f8:	6933      	ldr	r3, [r6, #16]
 80063fa:	3414      	adds	r4, #20
 80063fc:	0099      	lsls	r1, r3, #2
 80063fe:	1863      	adds	r3, r4, r1
 8006400:	9303      	str	r3, [sp, #12]
 8006402:	0013      	movs	r3, r2
 8006404:	3314      	adds	r3, #20
 8006406:	469c      	mov	ip, r3
 8006408:	9305      	str	r3, [sp, #20]
 800640a:	9b01      	ldr	r3, [sp, #4]
 800640c:	9304      	str	r3, [sp, #16]
 800640e:	9b04      	ldr	r3, [sp, #16]
 8006410:	cc02      	ldmia	r4!, {r1}
 8006412:	cb20      	ldmia	r3!, {r5}
 8006414:	9304      	str	r3, [sp, #16]
 8006416:	b2ab      	uxth	r3, r5
 8006418:	19df      	adds	r7, r3, r7
 800641a:	b28b      	uxth	r3, r1
 800641c:	1afb      	subs	r3, r7, r3
 800641e:	0c09      	lsrs	r1, r1, #16
 8006420:	0c2d      	lsrs	r5, r5, #16
 8006422:	1a6d      	subs	r5, r5, r1
 8006424:	1419      	asrs	r1, r3, #16
 8006426:	186d      	adds	r5, r5, r1
 8006428:	4661      	mov	r1, ip
 800642a:	142f      	asrs	r7, r5, #16
 800642c:	b29b      	uxth	r3, r3
 800642e:	042d      	lsls	r5, r5, #16
 8006430:	432b      	orrs	r3, r5
 8006432:	c108      	stmia	r1!, {r3}
 8006434:	9b03      	ldr	r3, [sp, #12]
 8006436:	468c      	mov	ip, r1
 8006438:	42a3      	cmp	r3, r4
 800643a:	d8e8      	bhi.n	800640e <__mdiff+0x8a>
 800643c:	0031      	movs	r1, r6
 800643e:	9c03      	ldr	r4, [sp, #12]
 8006440:	3115      	adds	r1, #21
 8006442:	2304      	movs	r3, #4
 8006444:	428c      	cmp	r4, r1
 8006446:	d304      	bcc.n	8006452 <__mdiff+0xce>
 8006448:	1ba3      	subs	r3, r4, r6
 800644a:	3b15      	subs	r3, #21
 800644c:	089b      	lsrs	r3, r3, #2
 800644e:	3301      	adds	r3, #1
 8006450:	009b      	lsls	r3, r3, #2
 8006452:	9901      	ldr	r1, [sp, #4]
 8006454:	18cc      	adds	r4, r1, r3
 8006456:	9905      	ldr	r1, [sp, #20]
 8006458:	0026      	movs	r6, r4
 800645a:	18cb      	adds	r3, r1, r3
 800645c:	469c      	mov	ip, r3
 800645e:	9902      	ldr	r1, [sp, #8]
 8006460:	428e      	cmp	r6, r1
 8006462:	d310      	bcc.n	8006486 <__mdiff+0x102>
 8006464:	9e02      	ldr	r6, [sp, #8]
 8006466:	1ee1      	subs	r1, r4, #3
 8006468:	2500      	movs	r5, #0
 800646a:	428e      	cmp	r6, r1
 800646c:	d304      	bcc.n	8006478 <__mdiff+0xf4>
 800646e:	0031      	movs	r1, r6
 8006470:	3103      	adds	r1, #3
 8006472:	1b0c      	subs	r4, r1, r4
 8006474:	08a4      	lsrs	r4, r4, #2
 8006476:	00a5      	lsls	r5, r4, #2
 8006478:	195b      	adds	r3, r3, r5
 800647a:	3b04      	subs	r3, #4
 800647c:	6819      	ldr	r1, [r3, #0]
 800647e:	2900      	cmp	r1, #0
 8006480:	d00f      	beq.n	80064a2 <__mdiff+0x11e>
 8006482:	6110      	str	r0, [r2, #16]
 8006484:	e797      	b.n	80063b6 <__mdiff+0x32>
 8006486:	ce02      	ldmia	r6!, {r1}
 8006488:	b28d      	uxth	r5, r1
 800648a:	19ed      	adds	r5, r5, r7
 800648c:	0c0f      	lsrs	r7, r1, #16
 800648e:	1429      	asrs	r1, r5, #16
 8006490:	1879      	adds	r1, r7, r1
 8006492:	140f      	asrs	r7, r1, #16
 8006494:	b2ad      	uxth	r5, r5
 8006496:	0409      	lsls	r1, r1, #16
 8006498:	430d      	orrs	r5, r1
 800649a:	4661      	mov	r1, ip
 800649c:	c120      	stmia	r1!, {r5}
 800649e:	468c      	mov	ip, r1
 80064a0:	e7dd      	b.n	800645e <__mdiff+0xda>
 80064a2:	3801      	subs	r0, #1
 80064a4:	e7e9      	b.n	800647a <__mdiff+0xf6>
 80064a6:	46c0      	nop			; (mov r8, r8)
 80064a8:	08007a3b 	.word	0x08007a3b
 80064ac:	00000232 	.word	0x00000232
 80064b0:	08007a4c 	.word	0x08007a4c

080064b4 <__d2b>:
 80064b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80064b6:	2101      	movs	r1, #1
 80064b8:	0014      	movs	r4, r2
 80064ba:	001e      	movs	r6, r3
 80064bc:	9f08      	ldr	r7, [sp, #32]
 80064be:	f7ff fcc1 	bl	8005e44 <_Balloc>
 80064c2:	1e05      	subs	r5, r0, #0
 80064c4:	d105      	bne.n	80064d2 <__d2b+0x1e>
 80064c6:	0002      	movs	r2, r0
 80064c8:	4b26      	ldr	r3, [pc, #152]	; (8006564 <__d2b+0xb0>)
 80064ca:	4927      	ldr	r1, [pc, #156]	; (8006568 <__d2b+0xb4>)
 80064cc:	4827      	ldr	r0, [pc, #156]	; (800656c <__d2b+0xb8>)
 80064ce:	f000 fad7 	bl	8006a80 <__assert_func>
 80064d2:	0333      	lsls	r3, r6, #12
 80064d4:	0076      	lsls	r6, r6, #1
 80064d6:	0b1b      	lsrs	r3, r3, #12
 80064d8:	0d76      	lsrs	r6, r6, #21
 80064da:	d124      	bne.n	8006526 <__d2b+0x72>
 80064dc:	9301      	str	r3, [sp, #4]
 80064de:	2c00      	cmp	r4, #0
 80064e0:	d027      	beq.n	8006532 <__d2b+0x7e>
 80064e2:	4668      	mov	r0, sp
 80064e4:	9400      	str	r4, [sp, #0]
 80064e6:	f7ff fd73 	bl	8005fd0 <__lo0bits>
 80064ea:	9c00      	ldr	r4, [sp, #0]
 80064ec:	2800      	cmp	r0, #0
 80064ee:	d01e      	beq.n	800652e <__d2b+0x7a>
 80064f0:	9b01      	ldr	r3, [sp, #4]
 80064f2:	2120      	movs	r1, #32
 80064f4:	001a      	movs	r2, r3
 80064f6:	1a09      	subs	r1, r1, r0
 80064f8:	408a      	lsls	r2, r1
 80064fa:	40c3      	lsrs	r3, r0
 80064fc:	4322      	orrs	r2, r4
 80064fe:	616a      	str	r2, [r5, #20]
 8006500:	9301      	str	r3, [sp, #4]
 8006502:	9c01      	ldr	r4, [sp, #4]
 8006504:	61ac      	str	r4, [r5, #24]
 8006506:	1e63      	subs	r3, r4, #1
 8006508:	419c      	sbcs	r4, r3
 800650a:	3401      	adds	r4, #1
 800650c:	612c      	str	r4, [r5, #16]
 800650e:	2e00      	cmp	r6, #0
 8006510:	d018      	beq.n	8006544 <__d2b+0x90>
 8006512:	4b17      	ldr	r3, [pc, #92]	; (8006570 <__d2b+0xbc>)
 8006514:	18f6      	adds	r6, r6, r3
 8006516:	2335      	movs	r3, #53	; 0x35
 8006518:	1836      	adds	r6, r6, r0
 800651a:	1a18      	subs	r0, r3, r0
 800651c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800651e:	603e      	str	r6, [r7, #0]
 8006520:	6018      	str	r0, [r3, #0]
 8006522:	0028      	movs	r0, r5
 8006524:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006526:	2280      	movs	r2, #128	; 0x80
 8006528:	0352      	lsls	r2, r2, #13
 800652a:	4313      	orrs	r3, r2
 800652c:	e7d6      	b.n	80064dc <__d2b+0x28>
 800652e:	616c      	str	r4, [r5, #20]
 8006530:	e7e7      	b.n	8006502 <__d2b+0x4e>
 8006532:	a801      	add	r0, sp, #4
 8006534:	f7ff fd4c 	bl	8005fd0 <__lo0bits>
 8006538:	2401      	movs	r4, #1
 800653a:	9b01      	ldr	r3, [sp, #4]
 800653c:	612c      	str	r4, [r5, #16]
 800653e:	616b      	str	r3, [r5, #20]
 8006540:	3020      	adds	r0, #32
 8006542:	e7e4      	b.n	800650e <__d2b+0x5a>
 8006544:	4b0b      	ldr	r3, [pc, #44]	; (8006574 <__d2b+0xc0>)
 8006546:	18c0      	adds	r0, r0, r3
 8006548:	4b0b      	ldr	r3, [pc, #44]	; (8006578 <__d2b+0xc4>)
 800654a:	6038      	str	r0, [r7, #0]
 800654c:	18e3      	adds	r3, r4, r3
 800654e:	009b      	lsls	r3, r3, #2
 8006550:	18eb      	adds	r3, r5, r3
 8006552:	6958      	ldr	r0, [r3, #20]
 8006554:	f7ff fd22 	bl	8005f9c <__hi0bits>
 8006558:	0164      	lsls	r4, r4, #5
 800655a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800655c:	1a24      	subs	r4, r4, r0
 800655e:	601c      	str	r4, [r3, #0]
 8006560:	e7df      	b.n	8006522 <__d2b+0x6e>
 8006562:	46c0      	nop			; (mov r8, r8)
 8006564:	08007a3b 	.word	0x08007a3b
 8006568:	0000030a 	.word	0x0000030a
 800656c:	08007a4c 	.word	0x08007a4c
 8006570:	fffffbcd 	.word	0xfffffbcd
 8006574:	fffffbce 	.word	0xfffffbce
 8006578:	3fffffff 	.word	0x3fffffff

0800657c <_calloc_r>:
 800657c:	b570      	push	{r4, r5, r6, lr}
 800657e:	0c13      	lsrs	r3, r2, #16
 8006580:	0c0d      	lsrs	r5, r1, #16
 8006582:	d11e      	bne.n	80065c2 <_calloc_r+0x46>
 8006584:	2b00      	cmp	r3, #0
 8006586:	d10c      	bne.n	80065a2 <_calloc_r+0x26>
 8006588:	b289      	uxth	r1, r1
 800658a:	b294      	uxth	r4, r2
 800658c:	434c      	muls	r4, r1
 800658e:	0021      	movs	r1, r4
 8006590:	f000 f88c 	bl	80066ac <_malloc_r>
 8006594:	1e05      	subs	r5, r0, #0
 8006596:	d01b      	beq.n	80065d0 <_calloc_r+0x54>
 8006598:	0022      	movs	r2, r4
 800659a:	2100      	movs	r1, #0
 800659c:	f7fe f8bc 	bl	8004718 <memset>
 80065a0:	e016      	b.n	80065d0 <_calloc_r+0x54>
 80065a2:	1c1d      	adds	r5, r3, #0
 80065a4:	1c0b      	adds	r3, r1, #0
 80065a6:	b292      	uxth	r2, r2
 80065a8:	b289      	uxth	r1, r1
 80065aa:	b29c      	uxth	r4, r3
 80065ac:	4351      	muls	r1, r2
 80065ae:	b2ab      	uxth	r3, r5
 80065b0:	4363      	muls	r3, r4
 80065b2:	0c0c      	lsrs	r4, r1, #16
 80065b4:	191c      	adds	r4, r3, r4
 80065b6:	0c22      	lsrs	r2, r4, #16
 80065b8:	d107      	bne.n	80065ca <_calloc_r+0x4e>
 80065ba:	0424      	lsls	r4, r4, #16
 80065bc:	b289      	uxth	r1, r1
 80065be:	430c      	orrs	r4, r1
 80065c0:	e7e5      	b.n	800658e <_calloc_r+0x12>
 80065c2:	2b00      	cmp	r3, #0
 80065c4:	d101      	bne.n	80065ca <_calloc_r+0x4e>
 80065c6:	1c13      	adds	r3, r2, #0
 80065c8:	e7ed      	b.n	80065a6 <_calloc_r+0x2a>
 80065ca:	230c      	movs	r3, #12
 80065cc:	2500      	movs	r5, #0
 80065ce:	6003      	str	r3, [r0, #0]
 80065d0:	0028      	movs	r0, r5
 80065d2:	bd70      	pop	{r4, r5, r6, pc}

080065d4 <_free_r>:
 80065d4:	b570      	push	{r4, r5, r6, lr}
 80065d6:	0005      	movs	r5, r0
 80065d8:	2900      	cmp	r1, #0
 80065da:	d010      	beq.n	80065fe <_free_r+0x2a>
 80065dc:	1f0c      	subs	r4, r1, #4
 80065de:	6823      	ldr	r3, [r4, #0]
 80065e0:	2b00      	cmp	r3, #0
 80065e2:	da00      	bge.n	80065e6 <_free_r+0x12>
 80065e4:	18e4      	adds	r4, r4, r3
 80065e6:	0028      	movs	r0, r5
 80065e8:	f000 fa9e 	bl	8006b28 <__malloc_lock>
 80065ec:	4a1d      	ldr	r2, [pc, #116]	; (8006664 <_free_r+0x90>)
 80065ee:	6813      	ldr	r3, [r2, #0]
 80065f0:	2b00      	cmp	r3, #0
 80065f2:	d105      	bne.n	8006600 <_free_r+0x2c>
 80065f4:	6063      	str	r3, [r4, #4]
 80065f6:	6014      	str	r4, [r2, #0]
 80065f8:	0028      	movs	r0, r5
 80065fa:	f000 fa9d 	bl	8006b38 <__malloc_unlock>
 80065fe:	bd70      	pop	{r4, r5, r6, pc}
 8006600:	42a3      	cmp	r3, r4
 8006602:	d908      	bls.n	8006616 <_free_r+0x42>
 8006604:	6821      	ldr	r1, [r4, #0]
 8006606:	1860      	adds	r0, r4, r1
 8006608:	4283      	cmp	r3, r0
 800660a:	d1f3      	bne.n	80065f4 <_free_r+0x20>
 800660c:	6818      	ldr	r0, [r3, #0]
 800660e:	685b      	ldr	r3, [r3, #4]
 8006610:	1841      	adds	r1, r0, r1
 8006612:	6021      	str	r1, [r4, #0]
 8006614:	e7ee      	b.n	80065f4 <_free_r+0x20>
 8006616:	001a      	movs	r2, r3
 8006618:	685b      	ldr	r3, [r3, #4]
 800661a:	2b00      	cmp	r3, #0
 800661c:	d001      	beq.n	8006622 <_free_r+0x4e>
 800661e:	42a3      	cmp	r3, r4
 8006620:	d9f9      	bls.n	8006616 <_free_r+0x42>
 8006622:	6811      	ldr	r1, [r2, #0]
 8006624:	1850      	adds	r0, r2, r1
 8006626:	42a0      	cmp	r0, r4
 8006628:	d10b      	bne.n	8006642 <_free_r+0x6e>
 800662a:	6820      	ldr	r0, [r4, #0]
 800662c:	1809      	adds	r1, r1, r0
 800662e:	1850      	adds	r0, r2, r1
 8006630:	6011      	str	r1, [r2, #0]
 8006632:	4283      	cmp	r3, r0
 8006634:	d1e0      	bne.n	80065f8 <_free_r+0x24>
 8006636:	6818      	ldr	r0, [r3, #0]
 8006638:	685b      	ldr	r3, [r3, #4]
 800663a:	1841      	adds	r1, r0, r1
 800663c:	6011      	str	r1, [r2, #0]
 800663e:	6053      	str	r3, [r2, #4]
 8006640:	e7da      	b.n	80065f8 <_free_r+0x24>
 8006642:	42a0      	cmp	r0, r4
 8006644:	d902      	bls.n	800664c <_free_r+0x78>
 8006646:	230c      	movs	r3, #12
 8006648:	602b      	str	r3, [r5, #0]
 800664a:	e7d5      	b.n	80065f8 <_free_r+0x24>
 800664c:	6821      	ldr	r1, [r4, #0]
 800664e:	1860      	adds	r0, r4, r1
 8006650:	4283      	cmp	r3, r0
 8006652:	d103      	bne.n	800665c <_free_r+0x88>
 8006654:	6818      	ldr	r0, [r3, #0]
 8006656:	685b      	ldr	r3, [r3, #4]
 8006658:	1841      	adds	r1, r0, r1
 800665a:	6021      	str	r1, [r4, #0]
 800665c:	6063      	str	r3, [r4, #4]
 800665e:	6054      	str	r4, [r2, #4]
 8006660:	e7ca      	b.n	80065f8 <_free_r+0x24>
 8006662:	46c0      	nop			; (mov r8, r8)
 8006664:	200003c0 	.word	0x200003c0

08006668 <sbrk_aligned>:
 8006668:	b570      	push	{r4, r5, r6, lr}
 800666a:	4e0f      	ldr	r6, [pc, #60]	; (80066a8 <sbrk_aligned+0x40>)
 800666c:	000d      	movs	r5, r1
 800666e:	6831      	ldr	r1, [r6, #0]
 8006670:	0004      	movs	r4, r0
 8006672:	2900      	cmp	r1, #0
 8006674:	d102      	bne.n	800667c <sbrk_aligned+0x14>
 8006676:	f000 f9f1 	bl	8006a5c <_sbrk_r>
 800667a:	6030      	str	r0, [r6, #0]
 800667c:	0029      	movs	r1, r5
 800667e:	0020      	movs	r0, r4
 8006680:	f000 f9ec 	bl	8006a5c <_sbrk_r>
 8006684:	1c43      	adds	r3, r0, #1
 8006686:	d00a      	beq.n	800669e <sbrk_aligned+0x36>
 8006688:	2303      	movs	r3, #3
 800668a:	1cc5      	adds	r5, r0, #3
 800668c:	439d      	bics	r5, r3
 800668e:	42a8      	cmp	r0, r5
 8006690:	d007      	beq.n	80066a2 <sbrk_aligned+0x3a>
 8006692:	1a29      	subs	r1, r5, r0
 8006694:	0020      	movs	r0, r4
 8006696:	f000 f9e1 	bl	8006a5c <_sbrk_r>
 800669a:	1c43      	adds	r3, r0, #1
 800669c:	d101      	bne.n	80066a2 <sbrk_aligned+0x3a>
 800669e:	2501      	movs	r5, #1
 80066a0:	426d      	negs	r5, r5
 80066a2:	0028      	movs	r0, r5
 80066a4:	bd70      	pop	{r4, r5, r6, pc}
 80066a6:	46c0      	nop			; (mov r8, r8)
 80066a8:	200003c4 	.word	0x200003c4

080066ac <_malloc_r>:
 80066ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80066ae:	2203      	movs	r2, #3
 80066b0:	1ccb      	adds	r3, r1, #3
 80066b2:	4393      	bics	r3, r2
 80066b4:	3308      	adds	r3, #8
 80066b6:	0006      	movs	r6, r0
 80066b8:	001f      	movs	r7, r3
 80066ba:	2b0c      	cmp	r3, #12
 80066bc:	d232      	bcs.n	8006724 <_malloc_r+0x78>
 80066be:	270c      	movs	r7, #12
 80066c0:	42b9      	cmp	r1, r7
 80066c2:	d831      	bhi.n	8006728 <_malloc_r+0x7c>
 80066c4:	0030      	movs	r0, r6
 80066c6:	f000 fa2f 	bl	8006b28 <__malloc_lock>
 80066ca:	4d32      	ldr	r5, [pc, #200]	; (8006794 <_malloc_r+0xe8>)
 80066cc:	682b      	ldr	r3, [r5, #0]
 80066ce:	001c      	movs	r4, r3
 80066d0:	2c00      	cmp	r4, #0
 80066d2:	d12e      	bne.n	8006732 <_malloc_r+0x86>
 80066d4:	0039      	movs	r1, r7
 80066d6:	0030      	movs	r0, r6
 80066d8:	f7ff ffc6 	bl	8006668 <sbrk_aligned>
 80066dc:	0004      	movs	r4, r0
 80066de:	1c43      	adds	r3, r0, #1
 80066e0:	d11e      	bne.n	8006720 <_malloc_r+0x74>
 80066e2:	682c      	ldr	r4, [r5, #0]
 80066e4:	0025      	movs	r5, r4
 80066e6:	2d00      	cmp	r5, #0
 80066e8:	d14a      	bne.n	8006780 <_malloc_r+0xd4>
 80066ea:	6823      	ldr	r3, [r4, #0]
 80066ec:	0029      	movs	r1, r5
 80066ee:	18e3      	adds	r3, r4, r3
 80066f0:	0030      	movs	r0, r6
 80066f2:	9301      	str	r3, [sp, #4]
 80066f4:	f000 f9b2 	bl	8006a5c <_sbrk_r>
 80066f8:	9b01      	ldr	r3, [sp, #4]
 80066fa:	4283      	cmp	r3, r0
 80066fc:	d143      	bne.n	8006786 <_malloc_r+0xda>
 80066fe:	6823      	ldr	r3, [r4, #0]
 8006700:	3703      	adds	r7, #3
 8006702:	1aff      	subs	r7, r7, r3
 8006704:	2303      	movs	r3, #3
 8006706:	439f      	bics	r7, r3
 8006708:	3708      	adds	r7, #8
 800670a:	2f0c      	cmp	r7, #12
 800670c:	d200      	bcs.n	8006710 <_malloc_r+0x64>
 800670e:	270c      	movs	r7, #12
 8006710:	0039      	movs	r1, r7
 8006712:	0030      	movs	r0, r6
 8006714:	f7ff ffa8 	bl	8006668 <sbrk_aligned>
 8006718:	1c43      	adds	r3, r0, #1
 800671a:	d034      	beq.n	8006786 <_malloc_r+0xda>
 800671c:	6823      	ldr	r3, [r4, #0]
 800671e:	19df      	adds	r7, r3, r7
 8006720:	6027      	str	r7, [r4, #0]
 8006722:	e013      	b.n	800674c <_malloc_r+0xa0>
 8006724:	2b00      	cmp	r3, #0
 8006726:	dacb      	bge.n	80066c0 <_malloc_r+0x14>
 8006728:	230c      	movs	r3, #12
 800672a:	2500      	movs	r5, #0
 800672c:	6033      	str	r3, [r6, #0]
 800672e:	0028      	movs	r0, r5
 8006730:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006732:	6822      	ldr	r2, [r4, #0]
 8006734:	1bd1      	subs	r1, r2, r7
 8006736:	d420      	bmi.n	800677a <_malloc_r+0xce>
 8006738:	290b      	cmp	r1, #11
 800673a:	d917      	bls.n	800676c <_malloc_r+0xc0>
 800673c:	19e2      	adds	r2, r4, r7
 800673e:	6027      	str	r7, [r4, #0]
 8006740:	42a3      	cmp	r3, r4
 8006742:	d111      	bne.n	8006768 <_malloc_r+0xbc>
 8006744:	602a      	str	r2, [r5, #0]
 8006746:	6863      	ldr	r3, [r4, #4]
 8006748:	6011      	str	r1, [r2, #0]
 800674a:	6053      	str	r3, [r2, #4]
 800674c:	0030      	movs	r0, r6
 800674e:	0025      	movs	r5, r4
 8006750:	f000 f9f2 	bl	8006b38 <__malloc_unlock>
 8006754:	2207      	movs	r2, #7
 8006756:	350b      	adds	r5, #11
 8006758:	1d23      	adds	r3, r4, #4
 800675a:	4395      	bics	r5, r2
 800675c:	1aea      	subs	r2, r5, r3
 800675e:	429d      	cmp	r5, r3
 8006760:	d0e5      	beq.n	800672e <_malloc_r+0x82>
 8006762:	1b5b      	subs	r3, r3, r5
 8006764:	50a3      	str	r3, [r4, r2]
 8006766:	e7e2      	b.n	800672e <_malloc_r+0x82>
 8006768:	605a      	str	r2, [r3, #4]
 800676a:	e7ec      	b.n	8006746 <_malloc_r+0x9a>
 800676c:	6862      	ldr	r2, [r4, #4]
 800676e:	42a3      	cmp	r3, r4
 8006770:	d101      	bne.n	8006776 <_malloc_r+0xca>
 8006772:	602a      	str	r2, [r5, #0]
 8006774:	e7ea      	b.n	800674c <_malloc_r+0xa0>
 8006776:	605a      	str	r2, [r3, #4]
 8006778:	e7e8      	b.n	800674c <_malloc_r+0xa0>
 800677a:	0023      	movs	r3, r4
 800677c:	6864      	ldr	r4, [r4, #4]
 800677e:	e7a7      	b.n	80066d0 <_malloc_r+0x24>
 8006780:	002c      	movs	r4, r5
 8006782:	686d      	ldr	r5, [r5, #4]
 8006784:	e7af      	b.n	80066e6 <_malloc_r+0x3a>
 8006786:	230c      	movs	r3, #12
 8006788:	0030      	movs	r0, r6
 800678a:	6033      	str	r3, [r6, #0]
 800678c:	f000 f9d4 	bl	8006b38 <__malloc_unlock>
 8006790:	e7cd      	b.n	800672e <_malloc_r+0x82>
 8006792:	46c0      	nop			; (mov r8, r8)
 8006794:	200003c0 	.word	0x200003c0

08006798 <__ssputs_r>:
 8006798:	b5f0      	push	{r4, r5, r6, r7, lr}
 800679a:	688e      	ldr	r6, [r1, #8]
 800679c:	b085      	sub	sp, #20
 800679e:	0007      	movs	r7, r0
 80067a0:	000c      	movs	r4, r1
 80067a2:	9203      	str	r2, [sp, #12]
 80067a4:	9301      	str	r3, [sp, #4]
 80067a6:	429e      	cmp	r6, r3
 80067a8:	d83c      	bhi.n	8006824 <__ssputs_r+0x8c>
 80067aa:	2390      	movs	r3, #144	; 0x90
 80067ac:	898a      	ldrh	r2, [r1, #12]
 80067ae:	00db      	lsls	r3, r3, #3
 80067b0:	421a      	tst	r2, r3
 80067b2:	d034      	beq.n	800681e <__ssputs_r+0x86>
 80067b4:	6909      	ldr	r1, [r1, #16]
 80067b6:	6823      	ldr	r3, [r4, #0]
 80067b8:	6960      	ldr	r0, [r4, #20]
 80067ba:	1a5b      	subs	r3, r3, r1
 80067bc:	9302      	str	r3, [sp, #8]
 80067be:	2303      	movs	r3, #3
 80067c0:	4343      	muls	r3, r0
 80067c2:	0fdd      	lsrs	r5, r3, #31
 80067c4:	18ed      	adds	r5, r5, r3
 80067c6:	9b01      	ldr	r3, [sp, #4]
 80067c8:	9802      	ldr	r0, [sp, #8]
 80067ca:	3301      	adds	r3, #1
 80067cc:	181b      	adds	r3, r3, r0
 80067ce:	106d      	asrs	r5, r5, #1
 80067d0:	42ab      	cmp	r3, r5
 80067d2:	d900      	bls.n	80067d6 <__ssputs_r+0x3e>
 80067d4:	001d      	movs	r5, r3
 80067d6:	0553      	lsls	r3, r2, #21
 80067d8:	d532      	bpl.n	8006840 <__ssputs_r+0xa8>
 80067da:	0029      	movs	r1, r5
 80067dc:	0038      	movs	r0, r7
 80067de:	f7ff ff65 	bl	80066ac <_malloc_r>
 80067e2:	1e06      	subs	r6, r0, #0
 80067e4:	d109      	bne.n	80067fa <__ssputs_r+0x62>
 80067e6:	230c      	movs	r3, #12
 80067e8:	603b      	str	r3, [r7, #0]
 80067ea:	2340      	movs	r3, #64	; 0x40
 80067ec:	2001      	movs	r0, #1
 80067ee:	89a2      	ldrh	r2, [r4, #12]
 80067f0:	4240      	negs	r0, r0
 80067f2:	4313      	orrs	r3, r2
 80067f4:	81a3      	strh	r3, [r4, #12]
 80067f6:	b005      	add	sp, #20
 80067f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80067fa:	9a02      	ldr	r2, [sp, #8]
 80067fc:	6921      	ldr	r1, [r4, #16]
 80067fe:	f7ff fb18 	bl	8005e32 <memcpy>
 8006802:	89a3      	ldrh	r3, [r4, #12]
 8006804:	4a14      	ldr	r2, [pc, #80]	; (8006858 <__ssputs_r+0xc0>)
 8006806:	401a      	ands	r2, r3
 8006808:	2380      	movs	r3, #128	; 0x80
 800680a:	4313      	orrs	r3, r2
 800680c:	81a3      	strh	r3, [r4, #12]
 800680e:	9b02      	ldr	r3, [sp, #8]
 8006810:	6126      	str	r6, [r4, #16]
 8006812:	18f6      	adds	r6, r6, r3
 8006814:	6026      	str	r6, [r4, #0]
 8006816:	6165      	str	r5, [r4, #20]
 8006818:	9e01      	ldr	r6, [sp, #4]
 800681a:	1aed      	subs	r5, r5, r3
 800681c:	60a5      	str	r5, [r4, #8]
 800681e:	9b01      	ldr	r3, [sp, #4]
 8006820:	429e      	cmp	r6, r3
 8006822:	d900      	bls.n	8006826 <__ssputs_r+0x8e>
 8006824:	9e01      	ldr	r6, [sp, #4]
 8006826:	0032      	movs	r2, r6
 8006828:	9903      	ldr	r1, [sp, #12]
 800682a:	6820      	ldr	r0, [r4, #0]
 800682c:	f000 f968 	bl	8006b00 <memmove>
 8006830:	68a3      	ldr	r3, [r4, #8]
 8006832:	2000      	movs	r0, #0
 8006834:	1b9b      	subs	r3, r3, r6
 8006836:	60a3      	str	r3, [r4, #8]
 8006838:	6823      	ldr	r3, [r4, #0]
 800683a:	199e      	adds	r6, r3, r6
 800683c:	6026      	str	r6, [r4, #0]
 800683e:	e7da      	b.n	80067f6 <__ssputs_r+0x5e>
 8006840:	002a      	movs	r2, r5
 8006842:	0038      	movs	r0, r7
 8006844:	f000 f980 	bl	8006b48 <_realloc_r>
 8006848:	1e06      	subs	r6, r0, #0
 800684a:	d1e0      	bne.n	800680e <__ssputs_r+0x76>
 800684c:	0038      	movs	r0, r7
 800684e:	6921      	ldr	r1, [r4, #16]
 8006850:	f7ff fec0 	bl	80065d4 <_free_r>
 8006854:	e7c7      	b.n	80067e6 <__ssputs_r+0x4e>
 8006856:	46c0      	nop			; (mov r8, r8)
 8006858:	fffffb7f 	.word	0xfffffb7f

0800685c <_svfiprintf_r>:
 800685c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800685e:	b0a1      	sub	sp, #132	; 0x84
 8006860:	9003      	str	r0, [sp, #12]
 8006862:	001d      	movs	r5, r3
 8006864:	898b      	ldrh	r3, [r1, #12]
 8006866:	000f      	movs	r7, r1
 8006868:	0016      	movs	r6, r2
 800686a:	061b      	lsls	r3, r3, #24
 800686c:	d511      	bpl.n	8006892 <_svfiprintf_r+0x36>
 800686e:	690b      	ldr	r3, [r1, #16]
 8006870:	2b00      	cmp	r3, #0
 8006872:	d10e      	bne.n	8006892 <_svfiprintf_r+0x36>
 8006874:	2140      	movs	r1, #64	; 0x40
 8006876:	f7ff ff19 	bl	80066ac <_malloc_r>
 800687a:	6038      	str	r0, [r7, #0]
 800687c:	6138      	str	r0, [r7, #16]
 800687e:	2800      	cmp	r0, #0
 8006880:	d105      	bne.n	800688e <_svfiprintf_r+0x32>
 8006882:	230c      	movs	r3, #12
 8006884:	9a03      	ldr	r2, [sp, #12]
 8006886:	3801      	subs	r0, #1
 8006888:	6013      	str	r3, [r2, #0]
 800688a:	b021      	add	sp, #132	; 0x84
 800688c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800688e:	2340      	movs	r3, #64	; 0x40
 8006890:	617b      	str	r3, [r7, #20]
 8006892:	2300      	movs	r3, #0
 8006894:	ac08      	add	r4, sp, #32
 8006896:	6163      	str	r3, [r4, #20]
 8006898:	3320      	adds	r3, #32
 800689a:	7663      	strb	r3, [r4, #25]
 800689c:	3310      	adds	r3, #16
 800689e:	76a3      	strb	r3, [r4, #26]
 80068a0:	9507      	str	r5, [sp, #28]
 80068a2:	0035      	movs	r5, r6
 80068a4:	782b      	ldrb	r3, [r5, #0]
 80068a6:	2b00      	cmp	r3, #0
 80068a8:	d001      	beq.n	80068ae <_svfiprintf_r+0x52>
 80068aa:	2b25      	cmp	r3, #37	; 0x25
 80068ac:	d147      	bne.n	800693e <_svfiprintf_r+0xe2>
 80068ae:	1bab      	subs	r3, r5, r6
 80068b0:	9305      	str	r3, [sp, #20]
 80068b2:	42b5      	cmp	r5, r6
 80068b4:	d00c      	beq.n	80068d0 <_svfiprintf_r+0x74>
 80068b6:	0032      	movs	r2, r6
 80068b8:	0039      	movs	r1, r7
 80068ba:	9803      	ldr	r0, [sp, #12]
 80068bc:	f7ff ff6c 	bl	8006798 <__ssputs_r>
 80068c0:	1c43      	adds	r3, r0, #1
 80068c2:	d100      	bne.n	80068c6 <_svfiprintf_r+0x6a>
 80068c4:	e0ae      	b.n	8006a24 <_svfiprintf_r+0x1c8>
 80068c6:	6962      	ldr	r2, [r4, #20]
 80068c8:	9b05      	ldr	r3, [sp, #20]
 80068ca:	4694      	mov	ip, r2
 80068cc:	4463      	add	r3, ip
 80068ce:	6163      	str	r3, [r4, #20]
 80068d0:	782b      	ldrb	r3, [r5, #0]
 80068d2:	2b00      	cmp	r3, #0
 80068d4:	d100      	bne.n	80068d8 <_svfiprintf_r+0x7c>
 80068d6:	e0a5      	b.n	8006a24 <_svfiprintf_r+0x1c8>
 80068d8:	2201      	movs	r2, #1
 80068da:	2300      	movs	r3, #0
 80068dc:	4252      	negs	r2, r2
 80068de:	6062      	str	r2, [r4, #4]
 80068e0:	a904      	add	r1, sp, #16
 80068e2:	3254      	adds	r2, #84	; 0x54
 80068e4:	1852      	adds	r2, r2, r1
 80068e6:	1c6e      	adds	r6, r5, #1
 80068e8:	6023      	str	r3, [r4, #0]
 80068ea:	60e3      	str	r3, [r4, #12]
 80068ec:	60a3      	str	r3, [r4, #8]
 80068ee:	7013      	strb	r3, [r2, #0]
 80068f0:	65a3      	str	r3, [r4, #88]	; 0x58
 80068f2:	2205      	movs	r2, #5
 80068f4:	7831      	ldrb	r1, [r6, #0]
 80068f6:	4854      	ldr	r0, [pc, #336]	; (8006a48 <_svfiprintf_r+0x1ec>)
 80068f8:	f7ff fa90 	bl	8005e1c <memchr>
 80068fc:	1c75      	adds	r5, r6, #1
 80068fe:	2800      	cmp	r0, #0
 8006900:	d11f      	bne.n	8006942 <_svfiprintf_r+0xe6>
 8006902:	6822      	ldr	r2, [r4, #0]
 8006904:	06d3      	lsls	r3, r2, #27
 8006906:	d504      	bpl.n	8006912 <_svfiprintf_r+0xb6>
 8006908:	2353      	movs	r3, #83	; 0x53
 800690a:	a904      	add	r1, sp, #16
 800690c:	185b      	adds	r3, r3, r1
 800690e:	2120      	movs	r1, #32
 8006910:	7019      	strb	r1, [r3, #0]
 8006912:	0713      	lsls	r3, r2, #28
 8006914:	d504      	bpl.n	8006920 <_svfiprintf_r+0xc4>
 8006916:	2353      	movs	r3, #83	; 0x53
 8006918:	a904      	add	r1, sp, #16
 800691a:	185b      	adds	r3, r3, r1
 800691c:	212b      	movs	r1, #43	; 0x2b
 800691e:	7019      	strb	r1, [r3, #0]
 8006920:	7833      	ldrb	r3, [r6, #0]
 8006922:	2b2a      	cmp	r3, #42	; 0x2a
 8006924:	d016      	beq.n	8006954 <_svfiprintf_r+0xf8>
 8006926:	0035      	movs	r5, r6
 8006928:	2100      	movs	r1, #0
 800692a:	200a      	movs	r0, #10
 800692c:	68e3      	ldr	r3, [r4, #12]
 800692e:	782a      	ldrb	r2, [r5, #0]
 8006930:	1c6e      	adds	r6, r5, #1
 8006932:	3a30      	subs	r2, #48	; 0x30
 8006934:	2a09      	cmp	r2, #9
 8006936:	d94e      	bls.n	80069d6 <_svfiprintf_r+0x17a>
 8006938:	2900      	cmp	r1, #0
 800693a:	d111      	bne.n	8006960 <_svfiprintf_r+0x104>
 800693c:	e017      	b.n	800696e <_svfiprintf_r+0x112>
 800693e:	3501      	adds	r5, #1
 8006940:	e7b0      	b.n	80068a4 <_svfiprintf_r+0x48>
 8006942:	4b41      	ldr	r3, [pc, #260]	; (8006a48 <_svfiprintf_r+0x1ec>)
 8006944:	6822      	ldr	r2, [r4, #0]
 8006946:	1ac0      	subs	r0, r0, r3
 8006948:	2301      	movs	r3, #1
 800694a:	4083      	lsls	r3, r0
 800694c:	4313      	orrs	r3, r2
 800694e:	002e      	movs	r6, r5
 8006950:	6023      	str	r3, [r4, #0]
 8006952:	e7ce      	b.n	80068f2 <_svfiprintf_r+0x96>
 8006954:	9b07      	ldr	r3, [sp, #28]
 8006956:	1d19      	adds	r1, r3, #4
 8006958:	681b      	ldr	r3, [r3, #0]
 800695a:	9107      	str	r1, [sp, #28]
 800695c:	2b00      	cmp	r3, #0
 800695e:	db01      	blt.n	8006964 <_svfiprintf_r+0x108>
 8006960:	930b      	str	r3, [sp, #44]	; 0x2c
 8006962:	e004      	b.n	800696e <_svfiprintf_r+0x112>
 8006964:	425b      	negs	r3, r3
 8006966:	60e3      	str	r3, [r4, #12]
 8006968:	2302      	movs	r3, #2
 800696a:	4313      	orrs	r3, r2
 800696c:	6023      	str	r3, [r4, #0]
 800696e:	782b      	ldrb	r3, [r5, #0]
 8006970:	2b2e      	cmp	r3, #46	; 0x2e
 8006972:	d10a      	bne.n	800698a <_svfiprintf_r+0x12e>
 8006974:	786b      	ldrb	r3, [r5, #1]
 8006976:	2b2a      	cmp	r3, #42	; 0x2a
 8006978:	d135      	bne.n	80069e6 <_svfiprintf_r+0x18a>
 800697a:	9b07      	ldr	r3, [sp, #28]
 800697c:	3502      	adds	r5, #2
 800697e:	1d1a      	adds	r2, r3, #4
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	9207      	str	r2, [sp, #28]
 8006984:	2b00      	cmp	r3, #0
 8006986:	db2b      	blt.n	80069e0 <_svfiprintf_r+0x184>
 8006988:	9309      	str	r3, [sp, #36]	; 0x24
 800698a:	4e30      	ldr	r6, [pc, #192]	; (8006a4c <_svfiprintf_r+0x1f0>)
 800698c:	2203      	movs	r2, #3
 800698e:	0030      	movs	r0, r6
 8006990:	7829      	ldrb	r1, [r5, #0]
 8006992:	f7ff fa43 	bl	8005e1c <memchr>
 8006996:	2800      	cmp	r0, #0
 8006998:	d006      	beq.n	80069a8 <_svfiprintf_r+0x14c>
 800699a:	2340      	movs	r3, #64	; 0x40
 800699c:	1b80      	subs	r0, r0, r6
 800699e:	4083      	lsls	r3, r0
 80069a0:	6822      	ldr	r2, [r4, #0]
 80069a2:	3501      	adds	r5, #1
 80069a4:	4313      	orrs	r3, r2
 80069a6:	6023      	str	r3, [r4, #0]
 80069a8:	7829      	ldrb	r1, [r5, #0]
 80069aa:	2206      	movs	r2, #6
 80069ac:	4828      	ldr	r0, [pc, #160]	; (8006a50 <_svfiprintf_r+0x1f4>)
 80069ae:	1c6e      	adds	r6, r5, #1
 80069b0:	7621      	strb	r1, [r4, #24]
 80069b2:	f7ff fa33 	bl	8005e1c <memchr>
 80069b6:	2800      	cmp	r0, #0
 80069b8:	d03c      	beq.n	8006a34 <_svfiprintf_r+0x1d8>
 80069ba:	4b26      	ldr	r3, [pc, #152]	; (8006a54 <_svfiprintf_r+0x1f8>)
 80069bc:	2b00      	cmp	r3, #0
 80069be:	d125      	bne.n	8006a0c <_svfiprintf_r+0x1b0>
 80069c0:	2207      	movs	r2, #7
 80069c2:	9b07      	ldr	r3, [sp, #28]
 80069c4:	3307      	adds	r3, #7
 80069c6:	4393      	bics	r3, r2
 80069c8:	3308      	adds	r3, #8
 80069ca:	9307      	str	r3, [sp, #28]
 80069cc:	6963      	ldr	r3, [r4, #20]
 80069ce:	9a04      	ldr	r2, [sp, #16]
 80069d0:	189b      	adds	r3, r3, r2
 80069d2:	6163      	str	r3, [r4, #20]
 80069d4:	e765      	b.n	80068a2 <_svfiprintf_r+0x46>
 80069d6:	4343      	muls	r3, r0
 80069d8:	0035      	movs	r5, r6
 80069da:	2101      	movs	r1, #1
 80069dc:	189b      	adds	r3, r3, r2
 80069de:	e7a6      	b.n	800692e <_svfiprintf_r+0xd2>
 80069e0:	2301      	movs	r3, #1
 80069e2:	425b      	negs	r3, r3
 80069e4:	e7d0      	b.n	8006988 <_svfiprintf_r+0x12c>
 80069e6:	2300      	movs	r3, #0
 80069e8:	200a      	movs	r0, #10
 80069ea:	001a      	movs	r2, r3
 80069ec:	3501      	adds	r5, #1
 80069ee:	6063      	str	r3, [r4, #4]
 80069f0:	7829      	ldrb	r1, [r5, #0]
 80069f2:	1c6e      	adds	r6, r5, #1
 80069f4:	3930      	subs	r1, #48	; 0x30
 80069f6:	2909      	cmp	r1, #9
 80069f8:	d903      	bls.n	8006a02 <_svfiprintf_r+0x1a6>
 80069fa:	2b00      	cmp	r3, #0
 80069fc:	d0c5      	beq.n	800698a <_svfiprintf_r+0x12e>
 80069fe:	9209      	str	r2, [sp, #36]	; 0x24
 8006a00:	e7c3      	b.n	800698a <_svfiprintf_r+0x12e>
 8006a02:	4342      	muls	r2, r0
 8006a04:	0035      	movs	r5, r6
 8006a06:	2301      	movs	r3, #1
 8006a08:	1852      	adds	r2, r2, r1
 8006a0a:	e7f1      	b.n	80069f0 <_svfiprintf_r+0x194>
 8006a0c:	ab07      	add	r3, sp, #28
 8006a0e:	9300      	str	r3, [sp, #0]
 8006a10:	003a      	movs	r2, r7
 8006a12:	0021      	movs	r1, r4
 8006a14:	4b10      	ldr	r3, [pc, #64]	; (8006a58 <_svfiprintf_r+0x1fc>)
 8006a16:	9803      	ldr	r0, [sp, #12]
 8006a18:	f7fd ff30 	bl	800487c <_printf_float>
 8006a1c:	9004      	str	r0, [sp, #16]
 8006a1e:	9b04      	ldr	r3, [sp, #16]
 8006a20:	3301      	adds	r3, #1
 8006a22:	d1d3      	bne.n	80069cc <_svfiprintf_r+0x170>
 8006a24:	89bb      	ldrh	r3, [r7, #12]
 8006a26:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006a28:	065b      	lsls	r3, r3, #25
 8006a2a:	d400      	bmi.n	8006a2e <_svfiprintf_r+0x1d2>
 8006a2c:	e72d      	b.n	800688a <_svfiprintf_r+0x2e>
 8006a2e:	2001      	movs	r0, #1
 8006a30:	4240      	negs	r0, r0
 8006a32:	e72a      	b.n	800688a <_svfiprintf_r+0x2e>
 8006a34:	ab07      	add	r3, sp, #28
 8006a36:	9300      	str	r3, [sp, #0]
 8006a38:	003a      	movs	r2, r7
 8006a3a:	0021      	movs	r1, r4
 8006a3c:	4b06      	ldr	r3, [pc, #24]	; (8006a58 <_svfiprintf_r+0x1fc>)
 8006a3e:	9803      	ldr	r0, [sp, #12]
 8006a40:	f7fe f9ce 	bl	8004de0 <_printf_i>
 8006a44:	e7ea      	b.n	8006a1c <_svfiprintf_r+0x1c0>
 8006a46:	46c0      	nop			; (mov r8, r8)
 8006a48:	08007ba4 	.word	0x08007ba4
 8006a4c:	08007baa 	.word	0x08007baa
 8006a50:	08007bae 	.word	0x08007bae
 8006a54:	0800487d 	.word	0x0800487d
 8006a58:	08006799 	.word	0x08006799

08006a5c <_sbrk_r>:
 8006a5c:	2300      	movs	r3, #0
 8006a5e:	b570      	push	{r4, r5, r6, lr}
 8006a60:	4d06      	ldr	r5, [pc, #24]	; (8006a7c <_sbrk_r+0x20>)
 8006a62:	0004      	movs	r4, r0
 8006a64:	0008      	movs	r0, r1
 8006a66:	602b      	str	r3, [r5, #0]
 8006a68:	f7fc fc1e 	bl	80032a8 <_sbrk>
 8006a6c:	1c43      	adds	r3, r0, #1
 8006a6e:	d103      	bne.n	8006a78 <_sbrk_r+0x1c>
 8006a70:	682b      	ldr	r3, [r5, #0]
 8006a72:	2b00      	cmp	r3, #0
 8006a74:	d000      	beq.n	8006a78 <_sbrk_r+0x1c>
 8006a76:	6023      	str	r3, [r4, #0]
 8006a78:	bd70      	pop	{r4, r5, r6, pc}
 8006a7a:	46c0      	nop			; (mov r8, r8)
 8006a7c:	200003c8 	.word	0x200003c8

08006a80 <__assert_func>:
 8006a80:	b530      	push	{r4, r5, lr}
 8006a82:	0014      	movs	r4, r2
 8006a84:	001a      	movs	r2, r3
 8006a86:	4b09      	ldr	r3, [pc, #36]	; (8006aac <__assert_func+0x2c>)
 8006a88:	0005      	movs	r5, r0
 8006a8a:	681b      	ldr	r3, [r3, #0]
 8006a8c:	b085      	sub	sp, #20
 8006a8e:	68d8      	ldr	r0, [r3, #12]
 8006a90:	4b07      	ldr	r3, [pc, #28]	; (8006ab0 <__assert_func+0x30>)
 8006a92:	2c00      	cmp	r4, #0
 8006a94:	d101      	bne.n	8006a9a <__assert_func+0x1a>
 8006a96:	4b07      	ldr	r3, [pc, #28]	; (8006ab4 <__assert_func+0x34>)
 8006a98:	001c      	movs	r4, r3
 8006a9a:	9301      	str	r3, [sp, #4]
 8006a9c:	9100      	str	r1, [sp, #0]
 8006a9e:	002b      	movs	r3, r5
 8006aa0:	4905      	ldr	r1, [pc, #20]	; (8006ab8 <__assert_func+0x38>)
 8006aa2:	9402      	str	r4, [sp, #8]
 8006aa4:	f000 f80a 	bl	8006abc <fiprintf>
 8006aa8:	f000 faba 	bl	8007020 <abort>
 8006aac:	2000004c 	.word	0x2000004c
 8006ab0:	08007bb5 	.word	0x08007bb5
 8006ab4:	08007bf0 	.word	0x08007bf0
 8006ab8:	08007bc2 	.word	0x08007bc2

08006abc <fiprintf>:
 8006abc:	b40e      	push	{r1, r2, r3}
 8006abe:	b503      	push	{r0, r1, lr}
 8006ac0:	0001      	movs	r1, r0
 8006ac2:	ab03      	add	r3, sp, #12
 8006ac4:	4804      	ldr	r0, [pc, #16]	; (8006ad8 <fiprintf+0x1c>)
 8006ac6:	cb04      	ldmia	r3!, {r2}
 8006ac8:	6800      	ldr	r0, [r0, #0]
 8006aca:	9301      	str	r3, [sp, #4]
 8006acc:	f000 f892 	bl	8006bf4 <_vfiprintf_r>
 8006ad0:	b002      	add	sp, #8
 8006ad2:	bc08      	pop	{r3}
 8006ad4:	b003      	add	sp, #12
 8006ad6:	4718      	bx	r3
 8006ad8:	2000004c 	.word	0x2000004c

08006adc <__ascii_mbtowc>:
 8006adc:	b082      	sub	sp, #8
 8006ade:	2900      	cmp	r1, #0
 8006ae0:	d100      	bne.n	8006ae4 <__ascii_mbtowc+0x8>
 8006ae2:	a901      	add	r1, sp, #4
 8006ae4:	1e10      	subs	r0, r2, #0
 8006ae6:	d006      	beq.n	8006af6 <__ascii_mbtowc+0x1a>
 8006ae8:	2b00      	cmp	r3, #0
 8006aea:	d006      	beq.n	8006afa <__ascii_mbtowc+0x1e>
 8006aec:	7813      	ldrb	r3, [r2, #0]
 8006aee:	600b      	str	r3, [r1, #0]
 8006af0:	7810      	ldrb	r0, [r2, #0]
 8006af2:	1e43      	subs	r3, r0, #1
 8006af4:	4198      	sbcs	r0, r3
 8006af6:	b002      	add	sp, #8
 8006af8:	4770      	bx	lr
 8006afa:	2002      	movs	r0, #2
 8006afc:	4240      	negs	r0, r0
 8006afe:	e7fa      	b.n	8006af6 <__ascii_mbtowc+0x1a>

08006b00 <memmove>:
 8006b00:	b510      	push	{r4, lr}
 8006b02:	4288      	cmp	r0, r1
 8006b04:	d902      	bls.n	8006b0c <memmove+0xc>
 8006b06:	188b      	adds	r3, r1, r2
 8006b08:	4298      	cmp	r0, r3
 8006b0a:	d303      	bcc.n	8006b14 <memmove+0x14>
 8006b0c:	2300      	movs	r3, #0
 8006b0e:	e007      	b.n	8006b20 <memmove+0x20>
 8006b10:	5c8b      	ldrb	r3, [r1, r2]
 8006b12:	5483      	strb	r3, [r0, r2]
 8006b14:	3a01      	subs	r2, #1
 8006b16:	d2fb      	bcs.n	8006b10 <memmove+0x10>
 8006b18:	bd10      	pop	{r4, pc}
 8006b1a:	5ccc      	ldrb	r4, [r1, r3]
 8006b1c:	54c4      	strb	r4, [r0, r3]
 8006b1e:	3301      	adds	r3, #1
 8006b20:	429a      	cmp	r2, r3
 8006b22:	d1fa      	bne.n	8006b1a <memmove+0x1a>
 8006b24:	e7f8      	b.n	8006b18 <memmove+0x18>
	...

08006b28 <__malloc_lock>:
 8006b28:	b510      	push	{r4, lr}
 8006b2a:	4802      	ldr	r0, [pc, #8]	; (8006b34 <__malloc_lock+0xc>)
 8006b2c:	f000 fc4f 	bl	80073ce <__retarget_lock_acquire_recursive>
 8006b30:	bd10      	pop	{r4, pc}
 8006b32:	46c0      	nop			; (mov r8, r8)
 8006b34:	200003cc 	.word	0x200003cc

08006b38 <__malloc_unlock>:
 8006b38:	b510      	push	{r4, lr}
 8006b3a:	4802      	ldr	r0, [pc, #8]	; (8006b44 <__malloc_unlock+0xc>)
 8006b3c:	f000 fc48 	bl	80073d0 <__retarget_lock_release_recursive>
 8006b40:	bd10      	pop	{r4, pc}
 8006b42:	46c0      	nop			; (mov r8, r8)
 8006b44:	200003cc 	.word	0x200003cc

08006b48 <_realloc_r>:
 8006b48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006b4a:	0007      	movs	r7, r0
 8006b4c:	000e      	movs	r6, r1
 8006b4e:	0014      	movs	r4, r2
 8006b50:	2900      	cmp	r1, #0
 8006b52:	d105      	bne.n	8006b60 <_realloc_r+0x18>
 8006b54:	0011      	movs	r1, r2
 8006b56:	f7ff fda9 	bl	80066ac <_malloc_r>
 8006b5a:	0005      	movs	r5, r0
 8006b5c:	0028      	movs	r0, r5
 8006b5e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006b60:	2a00      	cmp	r2, #0
 8006b62:	d103      	bne.n	8006b6c <_realloc_r+0x24>
 8006b64:	f7ff fd36 	bl	80065d4 <_free_r>
 8006b68:	0025      	movs	r5, r4
 8006b6a:	e7f7      	b.n	8006b5c <_realloc_r+0x14>
 8006b6c:	f000 fc9e 	bl	80074ac <_malloc_usable_size_r>
 8006b70:	9001      	str	r0, [sp, #4]
 8006b72:	4284      	cmp	r4, r0
 8006b74:	d803      	bhi.n	8006b7e <_realloc_r+0x36>
 8006b76:	0035      	movs	r5, r6
 8006b78:	0843      	lsrs	r3, r0, #1
 8006b7a:	42a3      	cmp	r3, r4
 8006b7c:	d3ee      	bcc.n	8006b5c <_realloc_r+0x14>
 8006b7e:	0021      	movs	r1, r4
 8006b80:	0038      	movs	r0, r7
 8006b82:	f7ff fd93 	bl	80066ac <_malloc_r>
 8006b86:	1e05      	subs	r5, r0, #0
 8006b88:	d0e8      	beq.n	8006b5c <_realloc_r+0x14>
 8006b8a:	9b01      	ldr	r3, [sp, #4]
 8006b8c:	0022      	movs	r2, r4
 8006b8e:	429c      	cmp	r4, r3
 8006b90:	d900      	bls.n	8006b94 <_realloc_r+0x4c>
 8006b92:	001a      	movs	r2, r3
 8006b94:	0031      	movs	r1, r6
 8006b96:	0028      	movs	r0, r5
 8006b98:	f7ff f94b 	bl	8005e32 <memcpy>
 8006b9c:	0031      	movs	r1, r6
 8006b9e:	0038      	movs	r0, r7
 8006ba0:	f7ff fd18 	bl	80065d4 <_free_r>
 8006ba4:	e7da      	b.n	8006b5c <_realloc_r+0x14>

08006ba6 <__sfputc_r>:
 8006ba6:	6893      	ldr	r3, [r2, #8]
 8006ba8:	b510      	push	{r4, lr}
 8006baa:	3b01      	subs	r3, #1
 8006bac:	6093      	str	r3, [r2, #8]
 8006bae:	2b00      	cmp	r3, #0
 8006bb0:	da04      	bge.n	8006bbc <__sfputc_r+0x16>
 8006bb2:	6994      	ldr	r4, [r2, #24]
 8006bb4:	42a3      	cmp	r3, r4
 8006bb6:	db07      	blt.n	8006bc8 <__sfputc_r+0x22>
 8006bb8:	290a      	cmp	r1, #10
 8006bba:	d005      	beq.n	8006bc8 <__sfputc_r+0x22>
 8006bbc:	6813      	ldr	r3, [r2, #0]
 8006bbe:	1c58      	adds	r0, r3, #1
 8006bc0:	6010      	str	r0, [r2, #0]
 8006bc2:	7019      	strb	r1, [r3, #0]
 8006bc4:	0008      	movs	r0, r1
 8006bc6:	bd10      	pop	{r4, pc}
 8006bc8:	f000 f94e 	bl	8006e68 <__swbuf_r>
 8006bcc:	0001      	movs	r1, r0
 8006bce:	e7f9      	b.n	8006bc4 <__sfputc_r+0x1e>

08006bd0 <__sfputs_r>:
 8006bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006bd2:	0006      	movs	r6, r0
 8006bd4:	000f      	movs	r7, r1
 8006bd6:	0014      	movs	r4, r2
 8006bd8:	18d5      	adds	r5, r2, r3
 8006bda:	42ac      	cmp	r4, r5
 8006bdc:	d101      	bne.n	8006be2 <__sfputs_r+0x12>
 8006bde:	2000      	movs	r0, #0
 8006be0:	e007      	b.n	8006bf2 <__sfputs_r+0x22>
 8006be2:	7821      	ldrb	r1, [r4, #0]
 8006be4:	003a      	movs	r2, r7
 8006be6:	0030      	movs	r0, r6
 8006be8:	f7ff ffdd 	bl	8006ba6 <__sfputc_r>
 8006bec:	3401      	adds	r4, #1
 8006bee:	1c43      	adds	r3, r0, #1
 8006bf0:	d1f3      	bne.n	8006bda <__sfputs_r+0xa>
 8006bf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006bf4 <_vfiprintf_r>:
 8006bf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006bf6:	b0a1      	sub	sp, #132	; 0x84
 8006bf8:	0006      	movs	r6, r0
 8006bfa:	000c      	movs	r4, r1
 8006bfc:	001f      	movs	r7, r3
 8006bfe:	9203      	str	r2, [sp, #12]
 8006c00:	2800      	cmp	r0, #0
 8006c02:	d004      	beq.n	8006c0e <_vfiprintf_r+0x1a>
 8006c04:	6983      	ldr	r3, [r0, #24]
 8006c06:	2b00      	cmp	r3, #0
 8006c08:	d101      	bne.n	8006c0e <_vfiprintf_r+0x1a>
 8006c0a:	f000 fb3f 	bl	800728c <__sinit>
 8006c0e:	4b8e      	ldr	r3, [pc, #568]	; (8006e48 <_vfiprintf_r+0x254>)
 8006c10:	429c      	cmp	r4, r3
 8006c12:	d11c      	bne.n	8006c4e <_vfiprintf_r+0x5a>
 8006c14:	6874      	ldr	r4, [r6, #4]
 8006c16:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006c18:	07db      	lsls	r3, r3, #31
 8006c1a:	d405      	bmi.n	8006c28 <_vfiprintf_r+0x34>
 8006c1c:	89a3      	ldrh	r3, [r4, #12]
 8006c1e:	059b      	lsls	r3, r3, #22
 8006c20:	d402      	bmi.n	8006c28 <_vfiprintf_r+0x34>
 8006c22:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006c24:	f000 fbd3 	bl	80073ce <__retarget_lock_acquire_recursive>
 8006c28:	89a3      	ldrh	r3, [r4, #12]
 8006c2a:	071b      	lsls	r3, r3, #28
 8006c2c:	d502      	bpl.n	8006c34 <_vfiprintf_r+0x40>
 8006c2e:	6923      	ldr	r3, [r4, #16]
 8006c30:	2b00      	cmp	r3, #0
 8006c32:	d11d      	bne.n	8006c70 <_vfiprintf_r+0x7c>
 8006c34:	0021      	movs	r1, r4
 8006c36:	0030      	movs	r0, r6
 8006c38:	f000 f97a 	bl	8006f30 <__swsetup_r>
 8006c3c:	2800      	cmp	r0, #0
 8006c3e:	d017      	beq.n	8006c70 <_vfiprintf_r+0x7c>
 8006c40:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006c42:	07db      	lsls	r3, r3, #31
 8006c44:	d50d      	bpl.n	8006c62 <_vfiprintf_r+0x6e>
 8006c46:	2001      	movs	r0, #1
 8006c48:	4240      	negs	r0, r0
 8006c4a:	b021      	add	sp, #132	; 0x84
 8006c4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c4e:	4b7f      	ldr	r3, [pc, #508]	; (8006e4c <_vfiprintf_r+0x258>)
 8006c50:	429c      	cmp	r4, r3
 8006c52:	d101      	bne.n	8006c58 <_vfiprintf_r+0x64>
 8006c54:	68b4      	ldr	r4, [r6, #8]
 8006c56:	e7de      	b.n	8006c16 <_vfiprintf_r+0x22>
 8006c58:	4b7d      	ldr	r3, [pc, #500]	; (8006e50 <_vfiprintf_r+0x25c>)
 8006c5a:	429c      	cmp	r4, r3
 8006c5c:	d1db      	bne.n	8006c16 <_vfiprintf_r+0x22>
 8006c5e:	68f4      	ldr	r4, [r6, #12]
 8006c60:	e7d9      	b.n	8006c16 <_vfiprintf_r+0x22>
 8006c62:	89a3      	ldrh	r3, [r4, #12]
 8006c64:	059b      	lsls	r3, r3, #22
 8006c66:	d4ee      	bmi.n	8006c46 <_vfiprintf_r+0x52>
 8006c68:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006c6a:	f000 fbb1 	bl	80073d0 <__retarget_lock_release_recursive>
 8006c6e:	e7ea      	b.n	8006c46 <_vfiprintf_r+0x52>
 8006c70:	2300      	movs	r3, #0
 8006c72:	ad08      	add	r5, sp, #32
 8006c74:	616b      	str	r3, [r5, #20]
 8006c76:	3320      	adds	r3, #32
 8006c78:	766b      	strb	r3, [r5, #25]
 8006c7a:	3310      	adds	r3, #16
 8006c7c:	76ab      	strb	r3, [r5, #26]
 8006c7e:	9707      	str	r7, [sp, #28]
 8006c80:	9f03      	ldr	r7, [sp, #12]
 8006c82:	783b      	ldrb	r3, [r7, #0]
 8006c84:	2b00      	cmp	r3, #0
 8006c86:	d001      	beq.n	8006c8c <_vfiprintf_r+0x98>
 8006c88:	2b25      	cmp	r3, #37	; 0x25
 8006c8a:	d14e      	bne.n	8006d2a <_vfiprintf_r+0x136>
 8006c8c:	9b03      	ldr	r3, [sp, #12]
 8006c8e:	1afb      	subs	r3, r7, r3
 8006c90:	9305      	str	r3, [sp, #20]
 8006c92:	9b03      	ldr	r3, [sp, #12]
 8006c94:	429f      	cmp	r7, r3
 8006c96:	d00d      	beq.n	8006cb4 <_vfiprintf_r+0xc0>
 8006c98:	9b05      	ldr	r3, [sp, #20]
 8006c9a:	0021      	movs	r1, r4
 8006c9c:	0030      	movs	r0, r6
 8006c9e:	9a03      	ldr	r2, [sp, #12]
 8006ca0:	f7ff ff96 	bl	8006bd0 <__sfputs_r>
 8006ca4:	1c43      	adds	r3, r0, #1
 8006ca6:	d100      	bne.n	8006caa <_vfiprintf_r+0xb6>
 8006ca8:	e0b5      	b.n	8006e16 <_vfiprintf_r+0x222>
 8006caa:	696a      	ldr	r2, [r5, #20]
 8006cac:	9b05      	ldr	r3, [sp, #20]
 8006cae:	4694      	mov	ip, r2
 8006cb0:	4463      	add	r3, ip
 8006cb2:	616b      	str	r3, [r5, #20]
 8006cb4:	783b      	ldrb	r3, [r7, #0]
 8006cb6:	2b00      	cmp	r3, #0
 8006cb8:	d100      	bne.n	8006cbc <_vfiprintf_r+0xc8>
 8006cba:	e0ac      	b.n	8006e16 <_vfiprintf_r+0x222>
 8006cbc:	2201      	movs	r2, #1
 8006cbe:	1c7b      	adds	r3, r7, #1
 8006cc0:	9303      	str	r3, [sp, #12]
 8006cc2:	2300      	movs	r3, #0
 8006cc4:	4252      	negs	r2, r2
 8006cc6:	606a      	str	r2, [r5, #4]
 8006cc8:	a904      	add	r1, sp, #16
 8006cca:	3254      	adds	r2, #84	; 0x54
 8006ccc:	1852      	adds	r2, r2, r1
 8006cce:	602b      	str	r3, [r5, #0]
 8006cd0:	60eb      	str	r3, [r5, #12]
 8006cd2:	60ab      	str	r3, [r5, #8]
 8006cd4:	7013      	strb	r3, [r2, #0]
 8006cd6:	65ab      	str	r3, [r5, #88]	; 0x58
 8006cd8:	9b03      	ldr	r3, [sp, #12]
 8006cda:	2205      	movs	r2, #5
 8006cdc:	7819      	ldrb	r1, [r3, #0]
 8006cde:	485d      	ldr	r0, [pc, #372]	; (8006e54 <_vfiprintf_r+0x260>)
 8006ce0:	f7ff f89c 	bl	8005e1c <memchr>
 8006ce4:	9b03      	ldr	r3, [sp, #12]
 8006ce6:	1c5f      	adds	r7, r3, #1
 8006ce8:	2800      	cmp	r0, #0
 8006cea:	d120      	bne.n	8006d2e <_vfiprintf_r+0x13a>
 8006cec:	682a      	ldr	r2, [r5, #0]
 8006cee:	06d3      	lsls	r3, r2, #27
 8006cf0:	d504      	bpl.n	8006cfc <_vfiprintf_r+0x108>
 8006cf2:	2353      	movs	r3, #83	; 0x53
 8006cf4:	a904      	add	r1, sp, #16
 8006cf6:	185b      	adds	r3, r3, r1
 8006cf8:	2120      	movs	r1, #32
 8006cfa:	7019      	strb	r1, [r3, #0]
 8006cfc:	0713      	lsls	r3, r2, #28
 8006cfe:	d504      	bpl.n	8006d0a <_vfiprintf_r+0x116>
 8006d00:	2353      	movs	r3, #83	; 0x53
 8006d02:	a904      	add	r1, sp, #16
 8006d04:	185b      	adds	r3, r3, r1
 8006d06:	212b      	movs	r1, #43	; 0x2b
 8006d08:	7019      	strb	r1, [r3, #0]
 8006d0a:	9b03      	ldr	r3, [sp, #12]
 8006d0c:	781b      	ldrb	r3, [r3, #0]
 8006d0e:	2b2a      	cmp	r3, #42	; 0x2a
 8006d10:	d016      	beq.n	8006d40 <_vfiprintf_r+0x14c>
 8006d12:	2100      	movs	r1, #0
 8006d14:	68eb      	ldr	r3, [r5, #12]
 8006d16:	9f03      	ldr	r7, [sp, #12]
 8006d18:	783a      	ldrb	r2, [r7, #0]
 8006d1a:	1c78      	adds	r0, r7, #1
 8006d1c:	3a30      	subs	r2, #48	; 0x30
 8006d1e:	4684      	mov	ip, r0
 8006d20:	2a09      	cmp	r2, #9
 8006d22:	d94f      	bls.n	8006dc4 <_vfiprintf_r+0x1d0>
 8006d24:	2900      	cmp	r1, #0
 8006d26:	d111      	bne.n	8006d4c <_vfiprintf_r+0x158>
 8006d28:	e017      	b.n	8006d5a <_vfiprintf_r+0x166>
 8006d2a:	3701      	adds	r7, #1
 8006d2c:	e7a9      	b.n	8006c82 <_vfiprintf_r+0x8e>
 8006d2e:	4b49      	ldr	r3, [pc, #292]	; (8006e54 <_vfiprintf_r+0x260>)
 8006d30:	682a      	ldr	r2, [r5, #0]
 8006d32:	1ac0      	subs	r0, r0, r3
 8006d34:	2301      	movs	r3, #1
 8006d36:	4083      	lsls	r3, r0
 8006d38:	4313      	orrs	r3, r2
 8006d3a:	602b      	str	r3, [r5, #0]
 8006d3c:	9703      	str	r7, [sp, #12]
 8006d3e:	e7cb      	b.n	8006cd8 <_vfiprintf_r+0xe4>
 8006d40:	9b07      	ldr	r3, [sp, #28]
 8006d42:	1d19      	adds	r1, r3, #4
 8006d44:	681b      	ldr	r3, [r3, #0]
 8006d46:	9107      	str	r1, [sp, #28]
 8006d48:	2b00      	cmp	r3, #0
 8006d4a:	db01      	blt.n	8006d50 <_vfiprintf_r+0x15c>
 8006d4c:	930b      	str	r3, [sp, #44]	; 0x2c
 8006d4e:	e004      	b.n	8006d5a <_vfiprintf_r+0x166>
 8006d50:	425b      	negs	r3, r3
 8006d52:	60eb      	str	r3, [r5, #12]
 8006d54:	2302      	movs	r3, #2
 8006d56:	4313      	orrs	r3, r2
 8006d58:	602b      	str	r3, [r5, #0]
 8006d5a:	783b      	ldrb	r3, [r7, #0]
 8006d5c:	2b2e      	cmp	r3, #46	; 0x2e
 8006d5e:	d10a      	bne.n	8006d76 <_vfiprintf_r+0x182>
 8006d60:	787b      	ldrb	r3, [r7, #1]
 8006d62:	2b2a      	cmp	r3, #42	; 0x2a
 8006d64:	d137      	bne.n	8006dd6 <_vfiprintf_r+0x1e2>
 8006d66:	9b07      	ldr	r3, [sp, #28]
 8006d68:	3702      	adds	r7, #2
 8006d6a:	1d1a      	adds	r2, r3, #4
 8006d6c:	681b      	ldr	r3, [r3, #0]
 8006d6e:	9207      	str	r2, [sp, #28]
 8006d70:	2b00      	cmp	r3, #0
 8006d72:	db2d      	blt.n	8006dd0 <_vfiprintf_r+0x1dc>
 8006d74:	9309      	str	r3, [sp, #36]	; 0x24
 8006d76:	2203      	movs	r2, #3
 8006d78:	7839      	ldrb	r1, [r7, #0]
 8006d7a:	4837      	ldr	r0, [pc, #220]	; (8006e58 <_vfiprintf_r+0x264>)
 8006d7c:	f7ff f84e 	bl	8005e1c <memchr>
 8006d80:	2800      	cmp	r0, #0
 8006d82:	d007      	beq.n	8006d94 <_vfiprintf_r+0x1a0>
 8006d84:	4b34      	ldr	r3, [pc, #208]	; (8006e58 <_vfiprintf_r+0x264>)
 8006d86:	682a      	ldr	r2, [r5, #0]
 8006d88:	1ac0      	subs	r0, r0, r3
 8006d8a:	2340      	movs	r3, #64	; 0x40
 8006d8c:	4083      	lsls	r3, r0
 8006d8e:	4313      	orrs	r3, r2
 8006d90:	3701      	adds	r7, #1
 8006d92:	602b      	str	r3, [r5, #0]
 8006d94:	7839      	ldrb	r1, [r7, #0]
 8006d96:	1c7b      	adds	r3, r7, #1
 8006d98:	2206      	movs	r2, #6
 8006d9a:	4830      	ldr	r0, [pc, #192]	; (8006e5c <_vfiprintf_r+0x268>)
 8006d9c:	9303      	str	r3, [sp, #12]
 8006d9e:	7629      	strb	r1, [r5, #24]
 8006da0:	f7ff f83c 	bl	8005e1c <memchr>
 8006da4:	2800      	cmp	r0, #0
 8006da6:	d045      	beq.n	8006e34 <_vfiprintf_r+0x240>
 8006da8:	4b2d      	ldr	r3, [pc, #180]	; (8006e60 <_vfiprintf_r+0x26c>)
 8006daa:	2b00      	cmp	r3, #0
 8006dac:	d127      	bne.n	8006dfe <_vfiprintf_r+0x20a>
 8006dae:	2207      	movs	r2, #7
 8006db0:	9b07      	ldr	r3, [sp, #28]
 8006db2:	3307      	adds	r3, #7
 8006db4:	4393      	bics	r3, r2
 8006db6:	3308      	adds	r3, #8
 8006db8:	9307      	str	r3, [sp, #28]
 8006dba:	696b      	ldr	r3, [r5, #20]
 8006dbc:	9a04      	ldr	r2, [sp, #16]
 8006dbe:	189b      	adds	r3, r3, r2
 8006dc0:	616b      	str	r3, [r5, #20]
 8006dc2:	e75d      	b.n	8006c80 <_vfiprintf_r+0x8c>
 8006dc4:	210a      	movs	r1, #10
 8006dc6:	434b      	muls	r3, r1
 8006dc8:	4667      	mov	r7, ip
 8006dca:	189b      	adds	r3, r3, r2
 8006dcc:	3909      	subs	r1, #9
 8006dce:	e7a3      	b.n	8006d18 <_vfiprintf_r+0x124>
 8006dd0:	2301      	movs	r3, #1
 8006dd2:	425b      	negs	r3, r3
 8006dd4:	e7ce      	b.n	8006d74 <_vfiprintf_r+0x180>
 8006dd6:	2300      	movs	r3, #0
 8006dd8:	001a      	movs	r2, r3
 8006dda:	3701      	adds	r7, #1
 8006ddc:	606b      	str	r3, [r5, #4]
 8006dde:	7839      	ldrb	r1, [r7, #0]
 8006de0:	1c78      	adds	r0, r7, #1
 8006de2:	3930      	subs	r1, #48	; 0x30
 8006de4:	4684      	mov	ip, r0
 8006de6:	2909      	cmp	r1, #9
 8006de8:	d903      	bls.n	8006df2 <_vfiprintf_r+0x1fe>
 8006dea:	2b00      	cmp	r3, #0
 8006dec:	d0c3      	beq.n	8006d76 <_vfiprintf_r+0x182>
 8006dee:	9209      	str	r2, [sp, #36]	; 0x24
 8006df0:	e7c1      	b.n	8006d76 <_vfiprintf_r+0x182>
 8006df2:	230a      	movs	r3, #10
 8006df4:	435a      	muls	r2, r3
 8006df6:	4667      	mov	r7, ip
 8006df8:	1852      	adds	r2, r2, r1
 8006dfa:	3b09      	subs	r3, #9
 8006dfc:	e7ef      	b.n	8006dde <_vfiprintf_r+0x1ea>
 8006dfe:	ab07      	add	r3, sp, #28
 8006e00:	9300      	str	r3, [sp, #0]
 8006e02:	0022      	movs	r2, r4
 8006e04:	0029      	movs	r1, r5
 8006e06:	0030      	movs	r0, r6
 8006e08:	4b16      	ldr	r3, [pc, #88]	; (8006e64 <_vfiprintf_r+0x270>)
 8006e0a:	f7fd fd37 	bl	800487c <_printf_float>
 8006e0e:	9004      	str	r0, [sp, #16]
 8006e10:	9b04      	ldr	r3, [sp, #16]
 8006e12:	3301      	adds	r3, #1
 8006e14:	d1d1      	bne.n	8006dba <_vfiprintf_r+0x1c6>
 8006e16:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006e18:	07db      	lsls	r3, r3, #31
 8006e1a:	d405      	bmi.n	8006e28 <_vfiprintf_r+0x234>
 8006e1c:	89a3      	ldrh	r3, [r4, #12]
 8006e1e:	059b      	lsls	r3, r3, #22
 8006e20:	d402      	bmi.n	8006e28 <_vfiprintf_r+0x234>
 8006e22:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006e24:	f000 fad4 	bl	80073d0 <__retarget_lock_release_recursive>
 8006e28:	89a3      	ldrh	r3, [r4, #12]
 8006e2a:	065b      	lsls	r3, r3, #25
 8006e2c:	d500      	bpl.n	8006e30 <_vfiprintf_r+0x23c>
 8006e2e:	e70a      	b.n	8006c46 <_vfiprintf_r+0x52>
 8006e30:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006e32:	e70a      	b.n	8006c4a <_vfiprintf_r+0x56>
 8006e34:	ab07      	add	r3, sp, #28
 8006e36:	9300      	str	r3, [sp, #0]
 8006e38:	0022      	movs	r2, r4
 8006e3a:	0029      	movs	r1, r5
 8006e3c:	0030      	movs	r0, r6
 8006e3e:	4b09      	ldr	r3, [pc, #36]	; (8006e64 <_vfiprintf_r+0x270>)
 8006e40:	f7fd ffce 	bl	8004de0 <_printf_i>
 8006e44:	e7e3      	b.n	8006e0e <_vfiprintf_r+0x21a>
 8006e46:	46c0      	nop			; (mov r8, r8)
 8006e48:	08007d1c 	.word	0x08007d1c
 8006e4c:	08007d3c 	.word	0x08007d3c
 8006e50:	08007cfc 	.word	0x08007cfc
 8006e54:	08007ba4 	.word	0x08007ba4
 8006e58:	08007baa 	.word	0x08007baa
 8006e5c:	08007bae 	.word	0x08007bae
 8006e60:	0800487d 	.word	0x0800487d
 8006e64:	08006bd1 	.word	0x08006bd1

08006e68 <__swbuf_r>:
 8006e68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006e6a:	0005      	movs	r5, r0
 8006e6c:	000e      	movs	r6, r1
 8006e6e:	0014      	movs	r4, r2
 8006e70:	2800      	cmp	r0, #0
 8006e72:	d004      	beq.n	8006e7e <__swbuf_r+0x16>
 8006e74:	6983      	ldr	r3, [r0, #24]
 8006e76:	2b00      	cmp	r3, #0
 8006e78:	d101      	bne.n	8006e7e <__swbuf_r+0x16>
 8006e7a:	f000 fa07 	bl	800728c <__sinit>
 8006e7e:	4b22      	ldr	r3, [pc, #136]	; (8006f08 <__swbuf_r+0xa0>)
 8006e80:	429c      	cmp	r4, r3
 8006e82:	d12e      	bne.n	8006ee2 <__swbuf_r+0x7a>
 8006e84:	686c      	ldr	r4, [r5, #4]
 8006e86:	69a3      	ldr	r3, [r4, #24]
 8006e88:	60a3      	str	r3, [r4, #8]
 8006e8a:	89a3      	ldrh	r3, [r4, #12]
 8006e8c:	071b      	lsls	r3, r3, #28
 8006e8e:	d532      	bpl.n	8006ef6 <__swbuf_r+0x8e>
 8006e90:	6923      	ldr	r3, [r4, #16]
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	d02f      	beq.n	8006ef6 <__swbuf_r+0x8e>
 8006e96:	6823      	ldr	r3, [r4, #0]
 8006e98:	6922      	ldr	r2, [r4, #16]
 8006e9a:	b2f7      	uxtb	r7, r6
 8006e9c:	1a98      	subs	r0, r3, r2
 8006e9e:	6963      	ldr	r3, [r4, #20]
 8006ea0:	b2f6      	uxtb	r6, r6
 8006ea2:	4283      	cmp	r3, r0
 8006ea4:	dc05      	bgt.n	8006eb2 <__swbuf_r+0x4a>
 8006ea6:	0021      	movs	r1, r4
 8006ea8:	0028      	movs	r0, r5
 8006eaa:	f000 f94d 	bl	8007148 <_fflush_r>
 8006eae:	2800      	cmp	r0, #0
 8006eb0:	d127      	bne.n	8006f02 <__swbuf_r+0x9a>
 8006eb2:	68a3      	ldr	r3, [r4, #8]
 8006eb4:	3001      	adds	r0, #1
 8006eb6:	3b01      	subs	r3, #1
 8006eb8:	60a3      	str	r3, [r4, #8]
 8006eba:	6823      	ldr	r3, [r4, #0]
 8006ebc:	1c5a      	adds	r2, r3, #1
 8006ebe:	6022      	str	r2, [r4, #0]
 8006ec0:	701f      	strb	r7, [r3, #0]
 8006ec2:	6963      	ldr	r3, [r4, #20]
 8006ec4:	4283      	cmp	r3, r0
 8006ec6:	d004      	beq.n	8006ed2 <__swbuf_r+0x6a>
 8006ec8:	89a3      	ldrh	r3, [r4, #12]
 8006eca:	07db      	lsls	r3, r3, #31
 8006ecc:	d507      	bpl.n	8006ede <__swbuf_r+0x76>
 8006ece:	2e0a      	cmp	r6, #10
 8006ed0:	d105      	bne.n	8006ede <__swbuf_r+0x76>
 8006ed2:	0021      	movs	r1, r4
 8006ed4:	0028      	movs	r0, r5
 8006ed6:	f000 f937 	bl	8007148 <_fflush_r>
 8006eda:	2800      	cmp	r0, #0
 8006edc:	d111      	bne.n	8006f02 <__swbuf_r+0x9a>
 8006ede:	0030      	movs	r0, r6
 8006ee0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006ee2:	4b0a      	ldr	r3, [pc, #40]	; (8006f0c <__swbuf_r+0xa4>)
 8006ee4:	429c      	cmp	r4, r3
 8006ee6:	d101      	bne.n	8006eec <__swbuf_r+0x84>
 8006ee8:	68ac      	ldr	r4, [r5, #8]
 8006eea:	e7cc      	b.n	8006e86 <__swbuf_r+0x1e>
 8006eec:	4b08      	ldr	r3, [pc, #32]	; (8006f10 <__swbuf_r+0xa8>)
 8006eee:	429c      	cmp	r4, r3
 8006ef0:	d1c9      	bne.n	8006e86 <__swbuf_r+0x1e>
 8006ef2:	68ec      	ldr	r4, [r5, #12]
 8006ef4:	e7c7      	b.n	8006e86 <__swbuf_r+0x1e>
 8006ef6:	0021      	movs	r1, r4
 8006ef8:	0028      	movs	r0, r5
 8006efa:	f000 f819 	bl	8006f30 <__swsetup_r>
 8006efe:	2800      	cmp	r0, #0
 8006f00:	d0c9      	beq.n	8006e96 <__swbuf_r+0x2e>
 8006f02:	2601      	movs	r6, #1
 8006f04:	4276      	negs	r6, r6
 8006f06:	e7ea      	b.n	8006ede <__swbuf_r+0x76>
 8006f08:	08007d1c 	.word	0x08007d1c
 8006f0c:	08007d3c 	.word	0x08007d3c
 8006f10:	08007cfc 	.word	0x08007cfc

08006f14 <__ascii_wctomb>:
 8006f14:	0003      	movs	r3, r0
 8006f16:	1e08      	subs	r0, r1, #0
 8006f18:	d005      	beq.n	8006f26 <__ascii_wctomb+0x12>
 8006f1a:	2aff      	cmp	r2, #255	; 0xff
 8006f1c:	d904      	bls.n	8006f28 <__ascii_wctomb+0x14>
 8006f1e:	228a      	movs	r2, #138	; 0x8a
 8006f20:	2001      	movs	r0, #1
 8006f22:	601a      	str	r2, [r3, #0]
 8006f24:	4240      	negs	r0, r0
 8006f26:	4770      	bx	lr
 8006f28:	2001      	movs	r0, #1
 8006f2a:	700a      	strb	r2, [r1, #0]
 8006f2c:	e7fb      	b.n	8006f26 <__ascii_wctomb+0x12>
	...

08006f30 <__swsetup_r>:
 8006f30:	4b37      	ldr	r3, [pc, #220]	; (8007010 <__swsetup_r+0xe0>)
 8006f32:	b570      	push	{r4, r5, r6, lr}
 8006f34:	681d      	ldr	r5, [r3, #0]
 8006f36:	0006      	movs	r6, r0
 8006f38:	000c      	movs	r4, r1
 8006f3a:	2d00      	cmp	r5, #0
 8006f3c:	d005      	beq.n	8006f4a <__swsetup_r+0x1a>
 8006f3e:	69ab      	ldr	r3, [r5, #24]
 8006f40:	2b00      	cmp	r3, #0
 8006f42:	d102      	bne.n	8006f4a <__swsetup_r+0x1a>
 8006f44:	0028      	movs	r0, r5
 8006f46:	f000 f9a1 	bl	800728c <__sinit>
 8006f4a:	4b32      	ldr	r3, [pc, #200]	; (8007014 <__swsetup_r+0xe4>)
 8006f4c:	429c      	cmp	r4, r3
 8006f4e:	d10f      	bne.n	8006f70 <__swsetup_r+0x40>
 8006f50:	686c      	ldr	r4, [r5, #4]
 8006f52:	230c      	movs	r3, #12
 8006f54:	5ee2      	ldrsh	r2, [r4, r3]
 8006f56:	b293      	uxth	r3, r2
 8006f58:	0711      	lsls	r1, r2, #28
 8006f5a:	d42d      	bmi.n	8006fb8 <__swsetup_r+0x88>
 8006f5c:	06d9      	lsls	r1, r3, #27
 8006f5e:	d411      	bmi.n	8006f84 <__swsetup_r+0x54>
 8006f60:	2309      	movs	r3, #9
 8006f62:	2001      	movs	r0, #1
 8006f64:	6033      	str	r3, [r6, #0]
 8006f66:	3337      	adds	r3, #55	; 0x37
 8006f68:	4313      	orrs	r3, r2
 8006f6a:	81a3      	strh	r3, [r4, #12]
 8006f6c:	4240      	negs	r0, r0
 8006f6e:	bd70      	pop	{r4, r5, r6, pc}
 8006f70:	4b29      	ldr	r3, [pc, #164]	; (8007018 <__swsetup_r+0xe8>)
 8006f72:	429c      	cmp	r4, r3
 8006f74:	d101      	bne.n	8006f7a <__swsetup_r+0x4a>
 8006f76:	68ac      	ldr	r4, [r5, #8]
 8006f78:	e7eb      	b.n	8006f52 <__swsetup_r+0x22>
 8006f7a:	4b28      	ldr	r3, [pc, #160]	; (800701c <__swsetup_r+0xec>)
 8006f7c:	429c      	cmp	r4, r3
 8006f7e:	d1e8      	bne.n	8006f52 <__swsetup_r+0x22>
 8006f80:	68ec      	ldr	r4, [r5, #12]
 8006f82:	e7e6      	b.n	8006f52 <__swsetup_r+0x22>
 8006f84:	075b      	lsls	r3, r3, #29
 8006f86:	d513      	bpl.n	8006fb0 <__swsetup_r+0x80>
 8006f88:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006f8a:	2900      	cmp	r1, #0
 8006f8c:	d008      	beq.n	8006fa0 <__swsetup_r+0x70>
 8006f8e:	0023      	movs	r3, r4
 8006f90:	3344      	adds	r3, #68	; 0x44
 8006f92:	4299      	cmp	r1, r3
 8006f94:	d002      	beq.n	8006f9c <__swsetup_r+0x6c>
 8006f96:	0030      	movs	r0, r6
 8006f98:	f7ff fb1c 	bl	80065d4 <_free_r>
 8006f9c:	2300      	movs	r3, #0
 8006f9e:	6363      	str	r3, [r4, #52]	; 0x34
 8006fa0:	2224      	movs	r2, #36	; 0x24
 8006fa2:	89a3      	ldrh	r3, [r4, #12]
 8006fa4:	4393      	bics	r3, r2
 8006fa6:	81a3      	strh	r3, [r4, #12]
 8006fa8:	2300      	movs	r3, #0
 8006faa:	6063      	str	r3, [r4, #4]
 8006fac:	6923      	ldr	r3, [r4, #16]
 8006fae:	6023      	str	r3, [r4, #0]
 8006fb0:	2308      	movs	r3, #8
 8006fb2:	89a2      	ldrh	r2, [r4, #12]
 8006fb4:	4313      	orrs	r3, r2
 8006fb6:	81a3      	strh	r3, [r4, #12]
 8006fb8:	6923      	ldr	r3, [r4, #16]
 8006fba:	2b00      	cmp	r3, #0
 8006fbc:	d10b      	bne.n	8006fd6 <__swsetup_r+0xa6>
 8006fbe:	21a0      	movs	r1, #160	; 0xa0
 8006fc0:	2280      	movs	r2, #128	; 0x80
 8006fc2:	89a3      	ldrh	r3, [r4, #12]
 8006fc4:	0089      	lsls	r1, r1, #2
 8006fc6:	0092      	lsls	r2, r2, #2
 8006fc8:	400b      	ands	r3, r1
 8006fca:	4293      	cmp	r3, r2
 8006fcc:	d003      	beq.n	8006fd6 <__swsetup_r+0xa6>
 8006fce:	0021      	movs	r1, r4
 8006fd0:	0030      	movs	r0, r6
 8006fd2:	f000 fa27 	bl	8007424 <__smakebuf_r>
 8006fd6:	220c      	movs	r2, #12
 8006fd8:	5ea3      	ldrsh	r3, [r4, r2]
 8006fda:	2001      	movs	r0, #1
 8006fdc:	001a      	movs	r2, r3
 8006fde:	b299      	uxth	r1, r3
 8006fe0:	4002      	ands	r2, r0
 8006fe2:	4203      	tst	r3, r0
 8006fe4:	d00f      	beq.n	8007006 <__swsetup_r+0xd6>
 8006fe6:	2200      	movs	r2, #0
 8006fe8:	60a2      	str	r2, [r4, #8]
 8006fea:	6962      	ldr	r2, [r4, #20]
 8006fec:	4252      	negs	r2, r2
 8006fee:	61a2      	str	r2, [r4, #24]
 8006ff0:	2000      	movs	r0, #0
 8006ff2:	6922      	ldr	r2, [r4, #16]
 8006ff4:	4282      	cmp	r2, r0
 8006ff6:	d1ba      	bne.n	8006f6e <__swsetup_r+0x3e>
 8006ff8:	060a      	lsls	r2, r1, #24
 8006ffa:	d5b8      	bpl.n	8006f6e <__swsetup_r+0x3e>
 8006ffc:	2240      	movs	r2, #64	; 0x40
 8006ffe:	4313      	orrs	r3, r2
 8007000:	81a3      	strh	r3, [r4, #12]
 8007002:	3801      	subs	r0, #1
 8007004:	e7b3      	b.n	8006f6e <__swsetup_r+0x3e>
 8007006:	0788      	lsls	r0, r1, #30
 8007008:	d400      	bmi.n	800700c <__swsetup_r+0xdc>
 800700a:	6962      	ldr	r2, [r4, #20]
 800700c:	60a2      	str	r2, [r4, #8]
 800700e:	e7ef      	b.n	8006ff0 <__swsetup_r+0xc0>
 8007010:	2000004c 	.word	0x2000004c
 8007014:	08007d1c 	.word	0x08007d1c
 8007018:	08007d3c 	.word	0x08007d3c
 800701c:	08007cfc 	.word	0x08007cfc

08007020 <abort>:
 8007020:	2006      	movs	r0, #6
 8007022:	b510      	push	{r4, lr}
 8007024:	f000 fa74 	bl	8007510 <raise>
 8007028:	2001      	movs	r0, #1
 800702a:	f7fc f8cc 	bl	80031c6 <_exit>
	...

08007030 <__sflush_r>:
 8007030:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007032:	898b      	ldrh	r3, [r1, #12]
 8007034:	0005      	movs	r5, r0
 8007036:	000c      	movs	r4, r1
 8007038:	071a      	lsls	r2, r3, #28
 800703a:	d45f      	bmi.n	80070fc <__sflush_r+0xcc>
 800703c:	684a      	ldr	r2, [r1, #4]
 800703e:	2a00      	cmp	r2, #0
 8007040:	dc04      	bgt.n	800704c <__sflush_r+0x1c>
 8007042:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8007044:	2a00      	cmp	r2, #0
 8007046:	dc01      	bgt.n	800704c <__sflush_r+0x1c>
 8007048:	2000      	movs	r0, #0
 800704a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800704c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800704e:	2f00      	cmp	r7, #0
 8007050:	d0fa      	beq.n	8007048 <__sflush_r+0x18>
 8007052:	2200      	movs	r2, #0
 8007054:	2180      	movs	r1, #128	; 0x80
 8007056:	682e      	ldr	r6, [r5, #0]
 8007058:	602a      	str	r2, [r5, #0]
 800705a:	001a      	movs	r2, r3
 800705c:	0149      	lsls	r1, r1, #5
 800705e:	400a      	ands	r2, r1
 8007060:	420b      	tst	r3, r1
 8007062:	d034      	beq.n	80070ce <__sflush_r+0x9e>
 8007064:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8007066:	89a3      	ldrh	r3, [r4, #12]
 8007068:	075b      	lsls	r3, r3, #29
 800706a:	d506      	bpl.n	800707a <__sflush_r+0x4a>
 800706c:	6863      	ldr	r3, [r4, #4]
 800706e:	1ac0      	subs	r0, r0, r3
 8007070:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007072:	2b00      	cmp	r3, #0
 8007074:	d001      	beq.n	800707a <__sflush_r+0x4a>
 8007076:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007078:	1ac0      	subs	r0, r0, r3
 800707a:	0002      	movs	r2, r0
 800707c:	6a21      	ldr	r1, [r4, #32]
 800707e:	2300      	movs	r3, #0
 8007080:	0028      	movs	r0, r5
 8007082:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8007084:	47b8      	blx	r7
 8007086:	89a1      	ldrh	r1, [r4, #12]
 8007088:	1c43      	adds	r3, r0, #1
 800708a:	d106      	bne.n	800709a <__sflush_r+0x6a>
 800708c:	682b      	ldr	r3, [r5, #0]
 800708e:	2b1d      	cmp	r3, #29
 8007090:	d831      	bhi.n	80070f6 <__sflush_r+0xc6>
 8007092:	4a2c      	ldr	r2, [pc, #176]	; (8007144 <__sflush_r+0x114>)
 8007094:	40da      	lsrs	r2, r3
 8007096:	07d3      	lsls	r3, r2, #31
 8007098:	d52d      	bpl.n	80070f6 <__sflush_r+0xc6>
 800709a:	2300      	movs	r3, #0
 800709c:	6063      	str	r3, [r4, #4]
 800709e:	6923      	ldr	r3, [r4, #16]
 80070a0:	6023      	str	r3, [r4, #0]
 80070a2:	04cb      	lsls	r3, r1, #19
 80070a4:	d505      	bpl.n	80070b2 <__sflush_r+0x82>
 80070a6:	1c43      	adds	r3, r0, #1
 80070a8:	d102      	bne.n	80070b0 <__sflush_r+0x80>
 80070aa:	682b      	ldr	r3, [r5, #0]
 80070ac:	2b00      	cmp	r3, #0
 80070ae:	d100      	bne.n	80070b2 <__sflush_r+0x82>
 80070b0:	6560      	str	r0, [r4, #84]	; 0x54
 80070b2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80070b4:	602e      	str	r6, [r5, #0]
 80070b6:	2900      	cmp	r1, #0
 80070b8:	d0c6      	beq.n	8007048 <__sflush_r+0x18>
 80070ba:	0023      	movs	r3, r4
 80070bc:	3344      	adds	r3, #68	; 0x44
 80070be:	4299      	cmp	r1, r3
 80070c0:	d002      	beq.n	80070c8 <__sflush_r+0x98>
 80070c2:	0028      	movs	r0, r5
 80070c4:	f7ff fa86 	bl	80065d4 <_free_r>
 80070c8:	2000      	movs	r0, #0
 80070ca:	6360      	str	r0, [r4, #52]	; 0x34
 80070cc:	e7bd      	b.n	800704a <__sflush_r+0x1a>
 80070ce:	2301      	movs	r3, #1
 80070d0:	0028      	movs	r0, r5
 80070d2:	6a21      	ldr	r1, [r4, #32]
 80070d4:	47b8      	blx	r7
 80070d6:	1c43      	adds	r3, r0, #1
 80070d8:	d1c5      	bne.n	8007066 <__sflush_r+0x36>
 80070da:	682b      	ldr	r3, [r5, #0]
 80070dc:	2b00      	cmp	r3, #0
 80070de:	d0c2      	beq.n	8007066 <__sflush_r+0x36>
 80070e0:	2b1d      	cmp	r3, #29
 80070e2:	d001      	beq.n	80070e8 <__sflush_r+0xb8>
 80070e4:	2b16      	cmp	r3, #22
 80070e6:	d101      	bne.n	80070ec <__sflush_r+0xbc>
 80070e8:	602e      	str	r6, [r5, #0]
 80070ea:	e7ad      	b.n	8007048 <__sflush_r+0x18>
 80070ec:	2340      	movs	r3, #64	; 0x40
 80070ee:	89a2      	ldrh	r2, [r4, #12]
 80070f0:	4313      	orrs	r3, r2
 80070f2:	81a3      	strh	r3, [r4, #12]
 80070f4:	e7a9      	b.n	800704a <__sflush_r+0x1a>
 80070f6:	2340      	movs	r3, #64	; 0x40
 80070f8:	430b      	orrs	r3, r1
 80070fa:	e7fa      	b.n	80070f2 <__sflush_r+0xc2>
 80070fc:	690f      	ldr	r7, [r1, #16]
 80070fe:	2f00      	cmp	r7, #0
 8007100:	d0a2      	beq.n	8007048 <__sflush_r+0x18>
 8007102:	680a      	ldr	r2, [r1, #0]
 8007104:	600f      	str	r7, [r1, #0]
 8007106:	1bd2      	subs	r2, r2, r7
 8007108:	9201      	str	r2, [sp, #4]
 800710a:	2200      	movs	r2, #0
 800710c:	079b      	lsls	r3, r3, #30
 800710e:	d100      	bne.n	8007112 <__sflush_r+0xe2>
 8007110:	694a      	ldr	r2, [r1, #20]
 8007112:	60a2      	str	r2, [r4, #8]
 8007114:	9b01      	ldr	r3, [sp, #4]
 8007116:	2b00      	cmp	r3, #0
 8007118:	dc00      	bgt.n	800711c <__sflush_r+0xec>
 800711a:	e795      	b.n	8007048 <__sflush_r+0x18>
 800711c:	003a      	movs	r2, r7
 800711e:	0028      	movs	r0, r5
 8007120:	9b01      	ldr	r3, [sp, #4]
 8007122:	6a21      	ldr	r1, [r4, #32]
 8007124:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8007126:	47b0      	blx	r6
 8007128:	2800      	cmp	r0, #0
 800712a:	dc06      	bgt.n	800713a <__sflush_r+0x10a>
 800712c:	2340      	movs	r3, #64	; 0x40
 800712e:	2001      	movs	r0, #1
 8007130:	89a2      	ldrh	r2, [r4, #12]
 8007132:	4240      	negs	r0, r0
 8007134:	4313      	orrs	r3, r2
 8007136:	81a3      	strh	r3, [r4, #12]
 8007138:	e787      	b.n	800704a <__sflush_r+0x1a>
 800713a:	9b01      	ldr	r3, [sp, #4]
 800713c:	183f      	adds	r7, r7, r0
 800713e:	1a1b      	subs	r3, r3, r0
 8007140:	9301      	str	r3, [sp, #4]
 8007142:	e7e7      	b.n	8007114 <__sflush_r+0xe4>
 8007144:	20400001 	.word	0x20400001

08007148 <_fflush_r>:
 8007148:	690b      	ldr	r3, [r1, #16]
 800714a:	b570      	push	{r4, r5, r6, lr}
 800714c:	0005      	movs	r5, r0
 800714e:	000c      	movs	r4, r1
 8007150:	2b00      	cmp	r3, #0
 8007152:	d102      	bne.n	800715a <_fflush_r+0x12>
 8007154:	2500      	movs	r5, #0
 8007156:	0028      	movs	r0, r5
 8007158:	bd70      	pop	{r4, r5, r6, pc}
 800715a:	2800      	cmp	r0, #0
 800715c:	d004      	beq.n	8007168 <_fflush_r+0x20>
 800715e:	6983      	ldr	r3, [r0, #24]
 8007160:	2b00      	cmp	r3, #0
 8007162:	d101      	bne.n	8007168 <_fflush_r+0x20>
 8007164:	f000 f892 	bl	800728c <__sinit>
 8007168:	4b14      	ldr	r3, [pc, #80]	; (80071bc <_fflush_r+0x74>)
 800716a:	429c      	cmp	r4, r3
 800716c:	d11b      	bne.n	80071a6 <_fflush_r+0x5e>
 800716e:	686c      	ldr	r4, [r5, #4]
 8007170:	220c      	movs	r2, #12
 8007172:	5ea3      	ldrsh	r3, [r4, r2]
 8007174:	2b00      	cmp	r3, #0
 8007176:	d0ed      	beq.n	8007154 <_fflush_r+0xc>
 8007178:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800717a:	07d2      	lsls	r2, r2, #31
 800717c:	d404      	bmi.n	8007188 <_fflush_r+0x40>
 800717e:	059b      	lsls	r3, r3, #22
 8007180:	d402      	bmi.n	8007188 <_fflush_r+0x40>
 8007182:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007184:	f000 f923 	bl	80073ce <__retarget_lock_acquire_recursive>
 8007188:	0028      	movs	r0, r5
 800718a:	0021      	movs	r1, r4
 800718c:	f7ff ff50 	bl	8007030 <__sflush_r>
 8007190:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007192:	0005      	movs	r5, r0
 8007194:	07db      	lsls	r3, r3, #31
 8007196:	d4de      	bmi.n	8007156 <_fflush_r+0xe>
 8007198:	89a3      	ldrh	r3, [r4, #12]
 800719a:	059b      	lsls	r3, r3, #22
 800719c:	d4db      	bmi.n	8007156 <_fflush_r+0xe>
 800719e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80071a0:	f000 f916 	bl	80073d0 <__retarget_lock_release_recursive>
 80071a4:	e7d7      	b.n	8007156 <_fflush_r+0xe>
 80071a6:	4b06      	ldr	r3, [pc, #24]	; (80071c0 <_fflush_r+0x78>)
 80071a8:	429c      	cmp	r4, r3
 80071aa:	d101      	bne.n	80071b0 <_fflush_r+0x68>
 80071ac:	68ac      	ldr	r4, [r5, #8]
 80071ae:	e7df      	b.n	8007170 <_fflush_r+0x28>
 80071b0:	4b04      	ldr	r3, [pc, #16]	; (80071c4 <_fflush_r+0x7c>)
 80071b2:	429c      	cmp	r4, r3
 80071b4:	d1dc      	bne.n	8007170 <_fflush_r+0x28>
 80071b6:	68ec      	ldr	r4, [r5, #12]
 80071b8:	e7da      	b.n	8007170 <_fflush_r+0x28>
 80071ba:	46c0      	nop			; (mov r8, r8)
 80071bc:	08007d1c 	.word	0x08007d1c
 80071c0:	08007d3c 	.word	0x08007d3c
 80071c4:	08007cfc 	.word	0x08007cfc

080071c8 <std>:
 80071c8:	2300      	movs	r3, #0
 80071ca:	b510      	push	{r4, lr}
 80071cc:	0004      	movs	r4, r0
 80071ce:	6003      	str	r3, [r0, #0]
 80071d0:	6043      	str	r3, [r0, #4]
 80071d2:	6083      	str	r3, [r0, #8]
 80071d4:	8181      	strh	r1, [r0, #12]
 80071d6:	6643      	str	r3, [r0, #100]	; 0x64
 80071d8:	0019      	movs	r1, r3
 80071da:	81c2      	strh	r2, [r0, #14]
 80071dc:	6103      	str	r3, [r0, #16]
 80071de:	6143      	str	r3, [r0, #20]
 80071e0:	6183      	str	r3, [r0, #24]
 80071e2:	2208      	movs	r2, #8
 80071e4:	305c      	adds	r0, #92	; 0x5c
 80071e6:	f7fd fa97 	bl	8004718 <memset>
 80071ea:	4b05      	ldr	r3, [pc, #20]	; (8007200 <std+0x38>)
 80071ec:	6224      	str	r4, [r4, #32]
 80071ee:	6263      	str	r3, [r4, #36]	; 0x24
 80071f0:	4b04      	ldr	r3, [pc, #16]	; (8007204 <std+0x3c>)
 80071f2:	62a3      	str	r3, [r4, #40]	; 0x28
 80071f4:	4b04      	ldr	r3, [pc, #16]	; (8007208 <std+0x40>)
 80071f6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80071f8:	4b04      	ldr	r3, [pc, #16]	; (800720c <std+0x44>)
 80071fa:	6323      	str	r3, [r4, #48]	; 0x30
 80071fc:	bd10      	pop	{r4, pc}
 80071fe:	46c0      	nop			; (mov r8, r8)
 8007200:	08007551 	.word	0x08007551
 8007204:	08007579 	.word	0x08007579
 8007208:	080075b1 	.word	0x080075b1
 800720c:	080075dd 	.word	0x080075dd

08007210 <_cleanup_r>:
 8007210:	b510      	push	{r4, lr}
 8007212:	4902      	ldr	r1, [pc, #8]	; (800721c <_cleanup_r+0xc>)
 8007214:	f000 f8ba 	bl	800738c <_fwalk_reent>
 8007218:	bd10      	pop	{r4, pc}
 800721a:	46c0      	nop			; (mov r8, r8)
 800721c:	08007149 	.word	0x08007149

08007220 <__sfmoreglue>:
 8007220:	b570      	push	{r4, r5, r6, lr}
 8007222:	2568      	movs	r5, #104	; 0x68
 8007224:	1e4a      	subs	r2, r1, #1
 8007226:	4355      	muls	r5, r2
 8007228:	000e      	movs	r6, r1
 800722a:	0029      	movs	r1, r5
 800722c:	3174      	adds	r1, #116	; 0x74
 800722e:	f7ff fa3d 	bl	80066ac <_malloc_r>
 8007232:	1e04      	subs	r4, r0, #0
 8007234:	d008      	beq.n	8007248 <__sfmoreglue+0x28>
 8007236:	2100      	movs	r1, #0
 8007238:	002a      	movs	r2, r5
 800723a:	6001      	str	r1, [r0, #0]
 800723c:	6046      	str	r6, [r0, #4]
 800723e:	300c      	adds	r0, #12
 8007240:	60a0      	str	r0, [r4, #8]
 8007242:	3268      	adds	r2, #104	; 0x68
 8007244:	f7fd fa68 	bl	8004718 <memset>
 8007248:	0020      	movs	r0, r4
 800724a:	bd70      	pop	{r4, r5, r6, pc}

0800724c <__sfp_lock_acquire>:
 800724c:	b510      	push	{r4, lr}
 800724e:	4802      	ldr	r0, [pc, #8]	; (8007258 <__sfp_lock_acquire+0xc>)
 8007250:	f000 f8bd 	bl	80073ce <__retarget_lock_acquire_recursive>
 8007254:	bd10      	pop	{r4, pc}
 8007256:	46c0      	nop			; (mov r8, r8)
 8007258:	200003cd 	.word	0x200003cd

0800725c <__sfp_lock_release>:
 800725c:	b510      	push	{r4, lr}
 800725e:	4802      	ldr	r0, [pc, #8]	; (8007268 <__sfp_lock_release+0xc>)
 8007260:	f000 f8b6 	bl	80073d0 <__retarget_lock_release_recursive>
 8007264:	bd10      	pop	{r4, pc}
 8007266:	46c0      	nop			; (mov r8, r8)
 8007268:	200003cd 	.word	0x200003cd

0800726c <__sinit_lock_acquire>:
 800726c:	b510      	push	{r4, lr}
 800726e:	4802      	ldr	r0, [pc, #8]	; (8007278 <__sinit_lock_acquire+0xc>)
 8007270:	f000 f8ad 	bl	80073ce <__retarget_lock_acquire_recursive>
 8007274:	bd10      	pop	{r4, pc}
 8007276:	46c0      	nop			; (mov r8, r8)
 8007278:	200003ce 	.word	0x200003ce

0800727c <__sinit_lock_release>:
 800727c:	b510      	push	{r4, lr}
 800727e:	4802      	ldr	r0, [pc, #8]	; (8007288 <__sinit_lock_release+0xc>)
 8007280:	f000 f8a6 	bl	80073d0 <__retarget_lock_release_recursive>
 8007284:	bd10      	pop	{r4, pc}
 8007286:	46c0      	nop			; (mov r8, r8)
 8007288:	200003ce 	.word	0x200003ce

0800728c <__sinit>:
 800728c:	b513      	push	{r0, r1, r4, lr}
 800728e:	0004      	movs	r4, r0
 8007290:	f7ff ffec 	bl	800726c <__sinit_lock_acquire>
 8007294:	69a3      	ldr	r3, [r4, #24]
 8007296:	2b00      	cmp	r3, #0
 8007298:	d002      	beq.n	80072a0 <__sinit+0x14>
 800729a:	f7ff ffef 	bl	800727c <__sinit_lock_release>
 800729e:	bd13      	pop	{r0, r1, r4, pc}
 80072a0:	64a3      	str	r3, [r4, #72]	; 0x48
 80072a2:	64e3      	str	r3, [r4, #76]	; 0x4c
 80072a4:	6523      	str	r3, [r4, #80]	; 0x50
 80072a6:	4b13      	ldr	r3, [pc, #76]	; (80072f4 <__sinit+0x68>)
 80072a8:	4a13      	ldr	r2, [pc, #76]	; (80072f8 <__sinit+0x6c>)
 80072aa:	681b      	ldr	r3, [r3, #0]
 80072ac:	62a2      	str	r2, [r4, #40]	; 0x28
 80072ae:	9301      	str	r3, [sp, #4]
 80072b0:	42a3      	cmp	r3, r4
 80072b2:	d101      	bne.n	80072b8 <__sinit+0x2c>
 80072b4:	2301      	movs	r3, #1
 80072b6:	61a3      	str	r3, [r4, #24]
 80072b8:	0020      	movs	r0, r4
 80072ba:	f000 f81f 	bl	80072fc <__sfp>
 80072be:	6060      	str	r0, [r4, #4]
 80072c0:	0020      	movs	r0, r4
 80072c2:	f000 f81b 	bl	80072fc <__sfp>
 80072c6:	60a0      	str	r0, [r4, #8]
 80072c8:	0020      	movs	r0, r4
 80072ca:	f000 f817 	bl	80072fc <__sfp>
 80072ce:	2200      	movs	r2, #0
 80072d0:	2104      	movs	r1, #4
 80072d2:	60e0      	str	r0, [r4, #12]
 80072d4:	6860      	ldr	r0, [r4, #4]
 80072d6:	f7ff ff77 	bl	80071c8 <std>
 80072da:	2201      	movs	r2, #1
 80072dc:	2109      	movs	r1, #9
 80072de:	68a0      	ldr	r0, [r4, #8]
 80072e0:	f7ff ff72 	bl	80071c8 <std>
 80072e4:	2202      	movs	r2, #2
 80072e6:	2112      	movs	r1, #18
 80072e8:	68e0      	ldr	r0, [r4, #12]
 80072ea:	f7ff ff6d 	bl	80071c8 <std>
 80072ee:	2301      	movs	r3, #1
 80072f0:	61a3      	str	r3, [r4, #24]
 80072f2:	e7d2      	b.n	800729a <__sinit+0xe>
 80072f4:	08007984 	.word	0x08007984
 80072f8:	08007211 	.word	0x08007211

080072fc <__sfp>:
 80072fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80072fe:	0007      	movs	r7, r0
 8007300:	f7ff ffa4 	bl	800724c <__sfp_lock_acquire>
 8007304:	4b1f      	ldr	r3, [pc, #124]	; (8007384 <__sfp+0x88>)
 8007306:	681e      	ldr	r6, [r3, #0]
 8007308:	69b3      	ldr	r3, [r6, #24]
 800730a:	2b00      	cmp	r3, #0
 800730c:	d102      	bne.n	8007314 <__sfp+0x18>
 800730e:	0030      	movs	r0, r6
 8007310:	f7ff ffbc 	bl	800728c <__sinit>
 8007314:	3648      	adds	r6, #72	; 0x48
 8007316:	68b4      	ldr	r4, [r6, #8]
 8007318:	6873      	ldr	r3, [r6, #4]
 800731a:	3b01      	subs	r3, #1
 800731c:	d504      	bpl.n	8007328 <__sfp+0x2c>
 800731e:	6833      	ldr	r3, [r6, #0]
 8007320:	2b00      	cmp	r3, #0
 8007322:	d022      	beq.n	800736a <__sfp+0x6e>
 8007324:	6836      	ldr	r6, [r6, #0]
 8007326:	e7f6      	b.n	8007316 <__sfp+0x1a>
 8007328:	220c      	movs	r2, #12
 800732a:	5ea5      	ldrsh	r5, [r4, r2]
 800732c:	2d00      	cmp	r5, #0
 800732e:	d11a      	bne.n	8007366 <__sfp+0x6a>
 8007330:	0020      	movs	r0, r4
 8007332:	4b15      	ldr	r3, [pc, #84]	; (8007388 <__sfp+0x8c>)
 8007334:	3058      	adds	r0, #88	; 0x58
 8007336:	60e3      	str	r3, [r4, #12]
 8007338:	6665      	str	r5, [r4, #100]	; 0x64
 800733a:	f000 f847 	bl	80073cc <__retarget_lock_init_recursive>
 800733e:	f7ff ff8d 	bl	800725c <__sfp_lock_release>
 8007342:	0020      	movs	r0, r4
 8007344:	2208      	movs	r2, #8
 8007346:	0029      	movs	r1, r5
 8007348:	6025      	str	r5, [r4, #0]
 800734a:	60a5      	str	r5, [r4, #8]
 800734c:	6065      	str	r5, [r4, #4]
 800734e:	6125      	str	r5, [r4, #16]
 8007350:	6165      	str	r5, [r4, #20]
 8007352:	61a5      	str	r5, [r4, #24]
 8007354:	305c      	adds	r0, #92	; 0x5c
 8007356:	f7fd f9df 	bl	8004718 <memset>
 800735a:	6365      	str	r5, [r4, #52]	; 0x34
 800735c:	63a5      	str	r5, [r4, #56]	; 0x38
 800735e:	64a5      	str	r5, [r4, #72]	; 0x48
 8007360:	64e5      	str	r5, [r4, #76]	; 0x4c
 8007362:	0020      	movs	r0, r4
 8007364:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007366:	3468      	adds	r4, #104	; 0x68
 8007368:	e7d7      	b.n	800731a <__sfp+0x1e>
 800736a:	2104      	movs	r1, #4
 800736c:	0038      	movs	r0, r7
 800736e:	f7ff ff57 	bl	8007220 <__sfmoreglue>
 8007372:	1e04      	subs	r4, r0, #0
 8007374:	6030      	str	r0, [r6, #0]
 8007376:	d1d5      	bne.n	8007324 <__sfp+0x28>
 8007378:	f7ff ff70 	bl	800725c <__sfp_lock_release>
 800737c:	230c      	movs	r3, #12
 800737e:	603b      	str	r3, [r7, #0]
 8007380:	e7ef      	b.n	8007362 <__sfp+0x66>
 8007382:	46c0      	nop			; (mov r8, r8)
 8007384:	08007984 	.word	0x08007984
 8007388:	ffff0001 	.word	0xffff0001

0800738c <_fwalk_reent>:
 800738c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800738e:	0004      	movs	r4, r0
 8007390:	0006      	movs	r6, r0
 8007392:	2700      	movs	r7, #0
 8007394:	9101      	str	r1, [sp, #4]
 8007396:	3448      	adds	r4, #72	; 0x48
 8007398:	6863      	ldr	r3, [r4, #4]
 800739a:	68a5      	ldr	r5, [r4, #8]
 800739c:	9300      	str	r3, [sp, #0]
 800739e:	9b00      	ldr	r3, [sp, #0]
 80073a0:	3b01      	subs	r3, #1
 80073a2:	9300      	str	r3, [sp, #0]
 80073a4:	d504      	bpl.n	80073b0 <_fwalk_reent+0x24>
 80073a6:	6824      	ldr	r4, [r4, #0]
 80073a8:	2c00      	cmp	r4, #0
 80073aa:	d1f5      	bne.n	8007398 <_fwalk_reent+0xc>
 80073ac:	0038      	movs	r0, r7
 80073ae:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80073b0:	89ab      	ldrh	r3, [r5, #12]
 80073b2:	2b01      	cmp	r3, #1
 80073b4:	d908      	bls.n	80073c8 <_fwalk_reent+0x3c>
 80073b6:	220e      	movs	r2, #14
 80073b8:	5eab      	ldrsh	r3, [r5, r2]
 80073ba:	3301      	adds	r3, #1
 80073bc:	d004      	beq.n	80073c8 <_fwalk_reent+0x3c>
 80073be:	0029      	movs	r1, r5
 80073c0:	0030      	movs	r0, r6
 80073c2:	9b01      	ldr	r3, [sp, #4]
 80073c4:	4798      	blx	r3
 80073c6:	4307      	orrs	r7, r0
 80073c8:	3568      	adds	r5, #104	; 0x68
 80073ca:	e7e8      	b.n	800739e <_fwalk_reent+0x12>

080073cc <__retarget_lock_init_recursive>:
 80073cc:	4770      	bx	lr

080073ce <__retarget_lock_acquire_recursive>:
 80073ce:	4770      	bx	lr

080073d0 <__retarget_lock_release_recursive>:
 80073d0:	4770      	bx	lr
	...

080073d4 <__swhatbuf_r>:
 80073d4:	b570      	push	{r4, r5, r6, lr}
 80073d6:	000e      	movs	r6, r1
 80073d8:	001d      	movs	r5, r3
 80073da:	230e      	movs	r3, #14
 80073dc:	5ec9      	ldrsh	r1, [r1, r3]
 80073de:	0014      	movs	r4, r2
 80073e0:	b096      	sub	sp, #88	; 0x58
 80073e2:	2900      	cmp	r1, #0
 80073e4:	da08      	bge.n	80073f8 <__swhatbuf_r+0x24>
 80073e6:	220c      	movs	r2, #12
 80073e8:	5eb3      	ldrsh	r3, [r6, r2]
 80073ea:	2200      	movs	r2, #0
 80073ec:	602a      	str	r2, [r5, #0]
 80073ee:	061b      	lsls	r3, r3, #24
 80073f0:	d411      	bmi.n	8007416 <__swhatbuf_r+0x42>
 80073f2:	2380      	movs	r3, #128	; 0x80
 80073f4:	00db      	lsls	r3, r3, #3
 80073f6:	e00f      	b.n	8007418 <__swhatbuf_r+0x44>
 80073f8:	466a      	mov	r2, sp
 80073fa:	f000 f91b 	bl	8007634 <_fstat_r>
 80073fe:	2800      	cmp	r0, #0
 8007400:	dbf1      	blt.n	80073e6 <__swhatbuf_r+0x12>
 8007402:	23f0      	movs	r3, #240	; 0xf0
 8007404:	9901      	ldr	r1, [sp, #4]
 8007406:	021b      	lsls	r3, r3, #8
 8007408:	4019      	ands	r1, r3
 800740a:	4b05      	ldr	r3, [pc, #20]	; (8007420 <__swhatbuf_r+0x4c>)
 800740c:	18c9      	adds	r1, r1, r3
 800740e:	424b      	negs	r3, r1
 8007410:	4159      	adcs	r1, r3
 8007412:	6029      	str	r1, [r5, #0]
 8007414:	e7ed      	b.n	80073f2 <__swhatbuf_r+0x1e>
 8007416:	2340      	movs	r3, #64	; 0x40
 8007418:	2000      	movs	r0, #0
 800741a:	6023      	str	r3, [r4, #0]
 800741c:	b016      	add	sp, #88	; 0x58
 800741e:	bd70      	pop	{r4, r5, r6, pc}
 8007420:	ffffe000 	.word	0xffffe000

08007424 <__smakebuf_r>:
 8007424:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007426:	2602      	movs	r6, #2
 8007428:	898b      	ldrh	r3, [r1, #12]
 800742a:	0005      	movs	r5, r0
 800742c:	000c      	movs	r4, r1
 800742e:	4233      	tst	r3, r6
 8007430:	d006      	beq.n	8007440 <__smakebuf_r+0x1c>
 8007432:	0023      	movs	r3, r4
 8007434:	3347      	adds	r3, #71	; 0x47
 8007436:	6023      	str	r3, [r4, #0]
 8007438:	6123      	str	r3, [r4, #16]
 800743a:	2301      	movs	r3, #1
 800743c:	6163      	str	r3, [r4, #20]
 800743e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8007440:	466a      	mov	r2, sp
 8007442:	ab01      	add	r3, sp, #4
 8007444:	f7ff ffc6 	bl	80073d4 <__swhatbuf_r>
 8007448:	9900      	ldr	r1, [sp, #0]
 800744a:	0007      	movs	r7, r0
 800744c:	0028      	movs	r0, r5
 800744e:	f7ff f92d 	bl	80066ac <_malloc_r>
 8007452:	2800      	cmp	r0, #0
 8007454:	d108      	bne.n	8007468 <__smakebuf_r+0x44>
 8007456:	220c      	movs	r2, #12
 8007458:	5ea3      	ldrsh	r3, [r4, r2]
 800745a:	059a      	lsls	r2, r3, #22
 800745c:	d4ef      	bmi.n	800743e <__smakebuf_r+0x1a>
 800745e:	2203      	movs	r2, #3
 8007460:	4393      	bics	r3, r2
 8007462:	431e      	orrs	r6, r3
 8007464:	81a6      	strh	r6, [r4, #12]
 8007466:	e7e4      	b.n	8007432 <__smakebuf_r+0xe>
 8007468:	4b0f      	ldr	r3, [pc, #60]	; (80074a8 <__smakebuf_r+0x84>)
 800746a:	62ab      	str	r3, [r5, #40]	; 0x28
 800746c:	2380      	movs	r3, #128	; 0x80
 800746e:	89a2      	ldrh	r2, [r4, #12]
 8007470:	6020      	str	r0, [r4, #0]
 8007472:	4313      	orrs	r3, r2
 8007474:	81a3      	strh	r3, [r4, #12]
 8007476:	9b00      	ldr	r3, [sp, #0]
 8007478:	6120      	str	r0, [r4, #16]
 800747a:	6163      	str	r3, [r4, #20]
 800747c:	9b01      	ldr	r3, [sp, #4]
 800747e:	2b00      	cmp	r3, #0
 8007480:	d00d      	beq.n	800749e <__smakebuf_r+0x7a>
 8007482:	0028      	movs	r0, r5
 8007484:	230e      	movs	r3, #14
 8007486:	5ee1      	ldrsh	r1, [r4, r3]
 8007488:	f000 f8e6 	bl	8007658 <_isatty_r>
 800748c:	2800      	cmp	r0, #0
 800748e:	d006      	beq.n	800749e <__smakebuf_r+0x7a>
 8007490:	2203      	movs	r2, #3
 8007492:	89a3      	ldrh	r3, [r4, #12]
 8007494:	4393      	bics	r3, r2
 8007496:	001a      	movs	r2, r3
 8007498:	2301      	movs	r3, #1
 800749a:	4313      	orrs	r3, r2
 800749c:	81a3      	strh	r3, [r4, #12]
 800749e:	89a0      	ldrh	r0, [r4, #12]
 80074a0:	4307      	orrs	r7, r0
 80074a2:	81a7      	strh	r7, [r4, #12]
 80074a4:	e7cb      	b.n	800743e <__smakebuf_r+0x1a>
 80074a6:	46c0      	nop			; (mov r8, r8)
 80074a8:	08007211 	.word	0x08007211

080074ac <_malloc_usable_size_r>:
 80074ac:	1f0b      	subs	r3, r1, #4
 80074ae:	681b      	ldr	r3, [r3, #0]
 80074b0:	1f18      	subs	r0, r3, #4
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	da01      	bge.n	80074ba <_malloc_usable_size_r+0xe>
 80074b6:	580b      	ldr	r3, [r1, r0]
 80074b8:	18c0      	adds	r0, r0, r3
 80074ba:	4770      	bx	lr

080074bc <_raise_r>:
 80074bc:	b570      	push	{r4, r5, r6, lr}
 80074be:	0004      	movs	r4, r0
 80074c0:	000d      	movs	r5, r1
 80074c2:	291f      	cmp	r1, #31
 80074c4:	d904      	bls.n	80074d0 <_raise_r+0x14>
 80074c6:	2316      	movs	r3, #22
 80074c8:	6003      	str	r3, [r0, #0]
 80074ca:	2001      	movs	r0, #1
 80074cc:	4240      	negs	r0, r0
 80074ce:	bd70      	pop	{r4, r5, r6, pc}
 80074d0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80074d2:	2b00      	cmp	r3, #0
 80074d4:	d004      	beq.n	80074e0 <_raise_r+0x24>
 80074d6:	008a      	lsls	r2, r1, #2
 80074d8:	189b      	adds	r3, r3, r2
 80074da:	681a      	ldr	r2, [r3, #0]
 80074dc:	2a00      	cmp	r2, #0
 80074de:	d108      	bne.n	80074f2 <_raise_r+0x36>
 80074e0:	0020      	movs	r0, r4
 80074e2:	f000 f831 	bl	8007548 <_getpid_r>
 80074e6:	002a      	movs	r2, r5
 80074e8:	0001      	movs	r1, r0
 80074ea:	0020      	movs	r0, r4
 80074ec:	f000 f81a 	bl	8007524 <_kill_r>
 80074f0:	e7ed      	b.n	80074ce <_raise_r+0x12>
 80074f2:	2000      	movs	r0, #0
 80074f4:	2a01      	cmp	r2, #1
 80074f6:	d0ea      	beq.n	80074ce <_raise_r+0x12>
 80074f8:	1c51      	adds	r1, r2, #1
 80074fa:	d103      	bne.n	8007504 <_raise_r+0x48>
 80074fc:	2316      	movs	r3, #22
 80074fe:	3001      	adds	r0, #1
 8007500:	6023      	str	r3, [r4, #0]
 8007502:	e7e4      	b.n	80074ce <_raise_r+0x12>
 8007504:	2400      	movs	r4, #0
 8007506:	0028      	movs	r0, r5
 8007508:	601c      	str	r4, [r3, #0]
 800750a:	4790      	blx	r2
 800750c:	0020      	movs	r0, r4
 800750e:	e7de      	b.n	80074ce <_raise_r+0x12>

08007510 <raise>:
 8007510:	b510      	push	{r4, lr}
 8007512:	4b03      	ldr	r3, [pc, #12]	; (8007520 <raise+0x10>)
 8007514:	0001      	movs	r1, r0
 8007516:	6818      	ldr	r0, [r3, #0]
 8007518:	f7ff ffd0 	bl	80074bc <_raise_r>
 800751c:	bd10      	pop	{r4, pc}
 800751e:	46c0      	nop			; (mov r8, r8)
 8007520:	2000004c 	.word	0x2000004c

08007524 <_kill_r>:
 8007524:	2300      	movs	r3, #0
 8007526:	b570      	push	{r4, r5, r6, lr}
 8007528:	4d06      	ldr	r5, [pc, #24]	; (8007544 <_kill_r+0x20>)
 800752a:	0004      	movs	r4, r0
 800752c:	0008      	movs	r0, r1
 800752e:	0011      	movs	r1, r2
 8007530:	602b      	str	r3, [r5, #0]
 8007532:	f7fb fe38 	bl	80031a6 <_kill>
 8007536:	1c43      	adds	r3, r0, #1
 8007538:	d103      	bne.n	8007542 <_kill_r+0x1e>
 800753a:	682b      	ldr	r3, [r5, #0]
 800753c:	2b00      	cmp	r3, #0
 800753e:	d000      	beq.n	8007542 <_kill_r+0x1e>
 8007540:	6023      	str	r3, [r4, #0]
 8007542:	bd70      	pop	{r4, r5, r6, pc}
 8007544:	200003c8 	.word	0x200003c8

08007548 <_getpid_r>:
 8007548:	b510      	push	{r4, lr}
 800754a:	f7fb fe26 	bl	800319a <_getpid>
 800754e:	bd10      	pop	{r4, pc}

08007550 <__sread>:
 8007550:	b570      	push	{r4, r5, r6, lr}
 8007552:	000c      	movs	r4, r1
 8007554:	250e      	movs	r5, #14
 8007556:	5f49      	ldrsh	r1, [r1, r5]
 8007558:	f000 f8a4 	bl	80076a4 <_read_r>
 800755c:	2800      	cmp	r0, #0
 800755e:	db03      	blt.n	8007568 <__sread+0x18>
 8007560:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007562:	181b      	adds	r3, r3, r0
 8007564:	6563      	str	r3, [r4, #84]	; 0x54
 8007566:	bd70      	pop	{r4, r5, r6, pc}
 8007568:	89a3      	ldrh	r3, [r4, #12]
 800756a:	4a02      	ldr	r2, [pc, #8]	; (8007574 <__sread+0x24>)
 800756c:	4013      	ands	r3, r2
 800756e:	81a3      	strh	r3, [r4, #12]
 8007570:	e7f9      	b.n	8007566 <__sread+0x16>
 8007572:	46c0      	nop			; (mov r8, r8)
 8007574:	ffffefff 	.word	0xffffefff

08007578 <__swrite>:
 8007578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800757a:	001f      	movs	r7, r3
 800757c:	898b      	ldrh	r3, [r1, #12]
 800757e:	0005      	movs	r5, r0
 8007580:	000c      	movs	r4, r1
 8007582:	0016      	movs	r6, r2
 8007584:	05db      	lsls	r3, r3, #23
 8007586:	d505      	bpl.n	8007594 <__swrite+0x1c>
 8007588:	230e      	movs	r3, #14
 800758a:	5ec9      	ldrsh	r1, [r1, r3]
 800758c:	2200      	movs	r2, #0
 800758e:	2302      	movs	r3, #2
 8007590:	f000 f874 	bl	800767c <_lseek_r>
 8007594:	89a3      	ldrh	r3, [r4, #12]
 8007596:	4a05      	ldr	r2, [pc, #20]	; (80075ac <__swrite+0x34>)
 8007598:	0028      	movs	r0, r5
 800759a:	4013      	ands	r3, r2
 800759c:	81a3      	strh	r3, [r4, #12]
 800759e:	0032      	movs	r2, r6
 80075a0:	230e      	movs	r3, #14
 80075a2:	5ee1      	ldrsh	r1, [r4, r3]
 80075a4:	003b      	movs	r3, r7
 80075a6:	f000 f81f 	bl	80075e8 <_write_r>
 80075aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80075ac:	ffffefff 	.word	0xffffefff

080075b0 <__sseek>:
 80075b0:	b570      	push	{r4, r5, r6, lr}
 80075b2:	000c      	movs	r4, r1
 80075b4:	250e      	movs	r5, #14
 80075b6:	5f49      	ldrsh	r1, [r1, r5]
 80075b8:	f000 f860 	bl	800767c <_lseek_r>
 80075bc:	89a3      	ldrh	r3, [r4, #12]
 80075be:	1c42      	adds	r2, r0, #1
 80075c0:	d103      	bne.n	80075ca <__sseek+0x1a>
 80075c2:	4a05      	ldr	r2, [pc, #20]	; (80075d8 <__sseek+0x28>)
 80075c4:	4013      	ands	r3, r2
 80075c6:	81a3      	strh	r3, [r4, #12]
 80075c8:	bd70      	pop	{r4, r5, r6, pc}
 80075ca:	2280      	movs	r2, #128	; 0x80
 80075cc:	0152      	lsls	r2, r2, #5
 80075ce:	4313      	orrs	r3, r2
 80075d0:	81a3      	strh	r3, [r4, #12]
 80075d2:	6560      	str	r0, [r4, #84]	; 0x54
 80075d4:	e7f8      	b.n	80075c8 <__sseek+0x18>
 80075d6:	46c0      	nop			; (mov r8, r8)
 80075d8:	ffffefff 	.word	0xffffefff

080075dc <__sclose>:
 80075dc:	b510      	push	{r4, lr}
 80075de:	230e      	movs	r3, #14
 80075e0:	5ec9      	ldrsh	r1, [r1, r3]
 80075e2:	f000 f815 	bl	8007610 <_close_r>
 80075e6:	bd10      	pop	{r4, pc}

080075e8 <_write_r>:
 80075e8:	b570      	push	{r4, r5, r6, lr}
 80075ea:	0004      	movs	r4, r0
 80075ec:	0008      	movs	r0, r1
 80075ee:	0011      	movs	r1, r2
 80075f0:	001a      	movs	r2, r3
 80075f2:	2300      	movs	r3, #0
 80075f4:	4d05      	ldr	r5, [pc, #20]	; (800760c <_write_r+0x24>)
 80075f6:	602b      	str	r3, [r5, #0]
 80075f8:	f7fb fe0e 	bl	8003218 <_write>
 80075fc:	1c43      	adds	r3, r0, #1
 80075fe:	d103      	bne.n	8007608 <_write_r+0x20>
 8007600:	682b      	ldr	r3, [r5, #0]
 8007602:	2b00      	cmp	r3, #0
 8007604:	d000      	beq.n	8007608 <_write_r+0x20>
 8007606:	6023      	str	r3, [r4, #0]
 8007608:	bd70      	pop	{r4, r5, r6, pc}
 800760a:	46c0      	nop			; (mov r8, r8)
 800760c:	200003c8 	.word	0x200003c8

08007610 <_close_r>:
 8007610:	2300      	movs	r3, #0
 8007612:	b570      	push	{r4, r5, r6, lr}
 8007614:	4d06      	ldr	r5, [pc, #24]	; (8007630 <_close_r+0x20>)
 8007616:	0004      	movs	r4, r0
 8007618:	0008      	movs	r0, r1
 800761a:	602b      	str	r3, [r5, #0]
 800761c:	f7fb fe18 	bl	8003250 <_close>
 8007620:	1c43      	adds	r3, r0, #1
 8007622:	d103      	bne.n	800762c <_close_r+0x1c>
 8007624:	682b      	ldr	r3, [r5, #0]
 8007626:	2b00      	cmp	r3, #0
 8007628:	d000      	beq.n	800762c <_close_r+0x1c>
 800762a:	6023      	str	r3, [r4, #0]
 800762c:	bd70      	pop	{r4, r5, r6, pc}
 800762e:	46c0      	nop			; (mov r8, r8)
 8007630:	200003c8 	.word	0x200003c8

08007634 <_fstat_r>:
 8007634:	2300      	movs	r3, #0
 8007636:	b570      	push	{r4, r5, r6, lr}
 8007638:	4d06      	ldr	r5, [pc, #24]	; (8007654 <_fstat_r+0x20>)
 800763a:	0004      	movs	r4, r0
 800763c:	0008      	movs	r0, r1
 800763e:	0011      	movs	r1, r2
 8007640:	602b      	str	r3, [r5, #0]
 8007642:	f7fb fe0f 	bl	8003264 <_fstat>
 8007646:	1c43      	adds	r3, r0, #1
 8007648:	d103      	bne.n	8007652 <_fstat_r+0x1e>
 800764a:	682b      	ldr	r3, [r5, #0]
 800764c:	2b00      	cmp	r3, #0
 800764e:	d000      	beq.n	8007652 <_fstat_r+0x1e>
 8007650:	6023      	str	r3, [r4, #0]
 8007652:	bd70      	pop	{r4, r5, r6, pc}
 8007654:	200003c8 	.word	0x200003c8

08007658 <_isatty_r>:
 8007658:	2300      	movs	r3, #0
 800765a:	b570      	push	{r4, r5, r6, lr}
 800765c:	4d06      	ldr	r5, [pc, #24]	; (8007678 <_isatty_r+0x20>)
 800765e:	0004      	movs	r4, r0
 8007660:	0008      	movs	r0, r1
 8007662:	602b      	str	r3, [r5, #0]
 8007664:	f7fb fe0c 	bl	8003280 <_isatty>
 8007668:	1c43      	adds	r3, r0, #1
 800766a:	d103      	bne.n	8007674 <_isatty_r+0x1c>
 800766c:	682b      	ldr	r3, [r5, #0]
 800766e:	2b00      	cmp	r3, #0
 8007670:	d000      	beq.n	8007674 <_isatty_r+0x1c>
 8007672:	6023      	str	r3, [r4, #0]
 8007674:	bd70      	pop	{r4, r5, r6, pc}
 8007676:	46c0      	nop			; (mov r8, r8)
 8007678:	200003c8 	.word	0x200003c8

0800767c <_lseek_r>:
 800767c:	b570      	push	{r4, r5, r6, lr}
 800767e:	0004      	movs	r4, r0
 8007680:	0008      	movs	r0, r1
 8007682:	0011      	movs	r1, r2
 8007684:	001a      	movs	r2, r3
 8007686:	2300      	movs	r3, #0
 8007688:	4d05      	ldr	r5, [pc, #20]	; (80076a0 <_lseek_r+0x24>)
 800768a:	602b      	str	r3, [r5, #0]
 800768c:	f7fb fe01 	bl	8003292 <_lseek>
 8007690:	1c43      	adds	r3, r0, #1
 8007692:	d103      	bne.n	800769c <_lseek_r+0x20>
 8007694:	682b      	ldr	r3, [r5, #0]
 8007696:	2b00      	cmp	r3, #0
 8007698:	d000      	beq.n	800769c <_lseek_r+0x20>
 800769a:	6023      	str	r3, [r4, #0]
 800769c:	bd70      	pop	{r4, r5, r6, pc}
 800769e:	46c0      	nop			; (mov r8, r8)
 80076a0:	200003c8 	.word	0x200003c8

080076a4 <_read_r>:
 80076a4:	b570      	push	{r4, r5, r6, lr}
 80076a6:	0004      	movs	r4, r0
 80076a8:	0008      	movs	r0, r1
 80076aa:	0011      	movs	r1, r2
 80076ac:	001a      	movs	r2, r3
 80076ae:	2300      	movs	r3, #0
 80076b0:	4d05      	ldr	r5, [pc, #20]	; (80076c8 <_read_r+0x24>)
 80076b2:	602b      	str	r3, [r5, #0]
 80076b4:	f7fb fd93 	bl	80031de <_read>
 80076b8:	1c43      	adds	r3, r0, #1
 80076ba:	d103      	bne.n	80076c4 <_read_r+0x20>
 80076bc:	682b      	ldr	r3, [r5, #0]
 80076be:	2b00      	cmp	r3, #0
 80076c0:	d000      	beq.n	80076c4 <_read_r+0x20>
 80076c2:	6023      	str	r3, [r4, #0]
 80076c4:	bd70      	pop	{r4, r5, r6, pc}
 80076c6:	46c0      	nop			; (mov r8, r8)
 80076c8:	200003c8 	.word	0x200003c8

080076cc <_init>:
 80076cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80076ce:	46c0      	nop			; (mov r8, r8)
 80076d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80076d2:	bc08      	pop	{r3}
 80076d4:	469e      	mov	lr, r3
 80076d6:	4770      	bx	lr

080076d8 <_fini>:
 80076d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80076da:	46c0      	nop			; (mov r8, r8)
 80076dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80076de:	bc08      	pop	{r3}
 80076e0:	469e      	mov	lr, r3
 80076e2:	4770      	bx	lr
